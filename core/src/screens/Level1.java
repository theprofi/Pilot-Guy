package screens;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.elkadakh.others.AssetLoader;
import com.elkadakh.others.DifficultyLevels;
import com.elkadakh.others.Helicopter;
import com.elkadakh.pilotguy.GameMainClass;

public class Level1 extends LevelBase {
	protected static final int PLAY_AR_WID = 297, PLAY_AR_HEI = 385;
	protected static final int targetX = 244, targetY = 309;
	private boolean zeroAtY;
	private boolean isFalling;
	private boolean nextSound;
	private float timer;
	int widthOfTarget;

	public Level1 (){
		timer = 0;
		heliPosX = 34;
		heliPosY = 22;
		super.CalculatePlayArRatio(PLAY_AR_WID, PLAY_AR_HEI); //Sets "lvsPlayAreaRatio"
        helicopter = new Helicopter(super.lvsPlayAreaRatio);
        super.SetScreenOptimizedLvsRes(PLAY_AR_WID, PLAY_AR_HEI); //Uses the ratio of screen/level
		zeroAtY = (phoneHeight - super.playArNewHeight <= phoneWidth - super.playArNewWidth); //Place the lvl at x=0 or y=0
        SetCenterCoords(); //To x or y
		helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
		borderLine = new boolean[PLAY_AR_HEI][PLAY_AR_WID];
		playArrWid = PLAY_AR_WID;
		playArrHeight = PLAY_AR_HEI;
		isFalling = false;
		nextSound = false;
		nextLevelSuspend = 0; //2 secs
		AssetLoader.subText.setScale(1f, 1f);
		AssetLoader.subTextSmall.setScale(1f, 1f);
		Add1();
		Add2();
		difLvls = new DifficultyLevels(drawToScreen,helicopter,phoneWidth,phoneHeight);
	}
	
	public void render(float delta){
		if(newStart){
			isFalling = false;
			newStart = false;
			difLvls.chosen = 2;
			helicopter.SetMedium();
			nextSound = false;
			super.nextLevelSuspend = 0;
		}
		super.isFalling = isFalling;
		super.render(delta);
		DrawLevel();
		DrawTarget();
		DrawGlass();
		DrawBackButton();
		if(lvsPlayAreaRatio < 0.9f)
			widthOfTarget = (int)(28*lvsPlayAreaRatio/0.8);
		else
			widthOfTarget = (int)(35*lvsPlayAreaRatio);
		difLvls.DoThings(bgNum, startMovingHeli, widthOfTarget, (int)(targetX*lvsPlayAreaRatio + xToCen),(int)(targetY*lvsPlayAreaRatio + yToCen), delta, super.isFalling);
		//DrawArrows();
		//DrawSides();
		float heliXtransed = (helicopter.GetX() - xToCen) / lvsPlayAreaRatio;
		float heliYtransed = (helicopter.GetY() - yToCen) / lvsPlayAreaRatio;
		//With the border
		if((isCollision(borderLine, heliXtransed, heliYtransed) || isFalling) && !newStart){
			timer+=delta;
			if(!super.isFalling){
				isFalling = true;
				AssetLoader.propellorSpin.stop();
				if(!GameMainClass.muteSound)
					AssetLoader.crash.play();
			}
			super.startMovingHeli = false;

			if(super.isFalling){
				helicopter.SetRotation(helicopter.GetRotation() + 600/lvsPlayAreaRatio*delta);
				helicopter.SetPosition(helicopter.GetX(), helicopter.GetY() - (phoneHeight/3)*delta);
			}
			if(helicopter.GetY() + 34*lvsPlayAreaRatio < 0 && !AssetLoader.crash.isPlaying() && timer >= 3){ //34*lvsPlayAreaRatio: helis height in the level
				isFalling = false;
				timer = 0;
				helicopter.ResetVelocityRotation();
				helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
				nextSound = false;
			}
		}
		
		//With the landing area
		if(difLvls.chosen != 1 && isCollision(targetX,targetY, 35, 35, heliXtransed, heliYtransed)){
			if(!nextSound){
				AssetLoader.propellorSpin.stop();
				if(!GameMainClass.muteSound)
					AssetLoader.nextLevel.play();
				if(Menu.prefs.getInteger("lastPlayedLevel", 1) < 2)
					Menu.SaveLevel(2);
				super.SetStars(this);
				nextSound = true;
			}
			nextLevelSuspend += delta;
			if(super.nextLevelSuspend > 2){
				GameMainClass.setCurScreen(2);
				helicopter.ResetVelocityRotation();
				helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
				startMovingHeli = false;
				super.nextLevelSuspend = 0;
			}
		}	
	}
	
	private void DrawSides(){
		Gdx.gl.glEnable(GL20.GL_BLEND);
	    Gdx.gl.glBlendFunc(GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);
		linesRenderer.begin(ShapeType.Filled);
		linesRenderer.setColor(new Color(0, 1, 0, 0.2f));
		if(Gdx.input.isTouched(0) && Gdx.input.getX(0) > phoneWidth/2 || Gdx.input.isTouched(1) && Gdx.input.getX(1) > phoneWidth/2)
			linesRenderer.rect(phoneWidth/2 + 5, 0, phoneWidth - phoneWidth/2 - 5, phoneHeight);
		if(Gdx.input.isTouched(0) && Gdx.input.getX(0) < phoneWidth/2 || Gdx.input.isTouched(1) && Gdx.input.getX(1) < phoneWidth/2)
			linesRenderer.rect(0, 0, phoneWidth - phoneWidth/2, phoneHeight);
		linesRenderer.end();
		Gdx.gl.glDisable(GL20.GL_BLEND);
	}
	
	
	private void DrawArrows () {
		drawToScreen.begin();
		if(Gdx.input.isTouched(0) && Gdx.input.getX(0) >= phoneWidth / 2 || Gdx.input.isTouched(1) &&  Gdx.input.getX(1) >= phoneWidth / 2)
			drawToScreen.draw(AssetLoader.upGreen, xToCen + PLAY_AR_WID*lvsPlayAreaRatio + phoneWidth / 7- 50, yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 48*lvsPlayAreaRatio / 2, 
					(int)(48*lvsPlayAreaRatio), 
					(int)(83*lvsPlayAreaRatio), 0, 0, 48, 83, false, false);
		else
			drawToScreen.draw(AssetLoader.up, xToCen + PLAY_AR_WID*lvsPlayAreaRatio + phoneWidth / 7 - 50, yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 48*lvsPlayAreaRatio / 2, 
					(int)(48*lvsPlayAreaRatio), 
					(int)(83*lvsPlayAreaRatio), 0, 0, 48, 83, false, false);
		if(Gdx.input.isTouched(0) && Gdx.input.getX(0) < phoneWidth / 2 || Gdx.input.isTouched(1) &&  Gdx.input.getX(1) < phoneWidth / 2)
			drawToScreen.draw(AssetLoader.leftGreen, 20, yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 83*lvsPlayAreaRatio / 2, 
					(int)(83*lvsPlayAreaRatio), 
					(int)(48*lvsPlayAreaRatio), 0, 0, 83, 48, false, false);
		else
			drawToScreen.draw(AssetLoader.left, 20 , yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 83*lvsPlayAreaRatio / 2, 
					(int)(83*lvsPlayAreaRatio), 
					(int)(48*lvsPlayAreaRatio), 0, 0, 83, 48, false, false);
		if(phoneWidth > 1500){
			AssetLoader.subText.draw(drawToScreen, "Touch and hold this side", xToCen + PLAY_AR_WID*lvsPlayAreaRatio + phoneWidth / 7 - 160, yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 48*lvsPlayAreaRatio / 2);
			AssetLoader.subText.draw(drawToScreen, "to go up", xToCen + PLAY_AR_WID*lvsPlayAreaRatio + phoneWidth / 7 - 70, yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 48*lvsPlayAreaRatio / 2 - 32);
			AssetLoader.subText.draw(drawToScreen, "Touch and hold this side", 20 , yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 83*lvsPlayAreaRatio / 2);	
			AssetLoader.subText.draw(drawToScreen, "to go left", 80 , yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 83*lvsPlayAreaRatio / 2 - 32);	
		}
		else{
			AssetLoader.subTextSmall.draw(drawToScreen, "Touch and hold this side", xToCen + PLAY_AR_WID*lvsPlayAreaRatio + phoneWidth / 7 - 100, yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 48*lvsPlayAreaRatio / 2);
			AssetLoader.subTextSmall.draw(drawToScreen, "to go up", xToCen + PLAY_AR_WID*lvsPlayAreaRatio + phoneWidth / 7 - 50, yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 48*lvsPlayAreaRatio / 2 - 15);
			AssetLoader.subTextSmall.draw(drawToScreen, "Touch and hold this side", 20 , yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 83*lvsPlayAreaRatio / 2);	
			AssetLoader.subTextSmall.draw(drawToScreen, "to go left", 40 , yToCen + PLAY_AR_HEI*lvsPlayAreaRatio / 2 - 83*lvsPlayAreaRatio / 2 - 15);	
		}
		drawToScreen.end();
		
	}
	
	private void DrawLevel (){
		drawToScreen.begin();
		drawToScreen.draw(AssetLoader.level1, (int)xToCen, (int)yToCen, (int)(PLAY_AR_WID*lvsPlayAreaRatio), 
				(int)(PLAY_AR_HEI*lvsPlayAreaRatio), 0, 0, PLAY_AR_WID, PLAY_AR_HEI, false, false);
		drawToScreen.end();
	}
	
	private void DrawTarget (){
		drawToScreen.begin();
		if(lvsPlayAreaRatio < 0.9f)
		drawToScreen.draw(AssetLoader.targetSmall, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
				(int)(28*lvsPlayAreaRatio/0.8), (int)(28*lvsPlayAreaRatio/0.8),0,0,28,28,false,false);
		else
			drawToScreen.draw(AssetLoader.target, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
					(int)(35*lvsPlayAreaRatio), (int)(35*lvsPlayAreaRatio),0,0,35,35,false,false);//35 = texture width and height
		if(difLvls.chosen == 1){
			if(lvsPlayAreaRatio < 0.9f)
				drawToScreen.draw(AssetLoader.targetSmallDif1, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
						(int)(28*lvsPlayAreaRatio/0.8), (int)(28*lvsPlayAreaRatio/0.8),0,0,28,28,false,false);
				else
					drawToScreen.draw(AssetLoader.targetDif1, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
							(int)(35*lvsPlayAreaRatio), (int)(35*lvsPlayAreaRatio),0,0,35,35,false,false);//35 = texture width and height
		}
		drawToScreen.end();
	}
	
	private void SetCenterCoords (){
		if(zeroAtY){
			 yToCen = phoneHeight*(float)0.025;
			 xToCen = phoneWidth / 2 - PLAY_AR_WID * lvsPlayAreaRatio / 2;
			 
		}
		else{
			 xToCen = phoneWidth*(float)0.025;
			 yToCen = phoneHeight / 2 - PLAY_AR_HEI * lvsPlayAreaRatio / 2;
		}
	}

	 private void Add1() {
		 borderLine[384] [0] = true;
		 borderLine[383] [0] = true;
		 borderLine[382] [0] = true;
		 borderLine[381] [0] = true;
		 borderLine[380] [0] = true;
		 borderLine[379] [0] = true;
		 borderLine[378] [0] = true;
		 borderLine[377] [0] = true;
		 borderLine[376] [0] = true;
		 borderLine[375] [0] = true;
		 borderLine[374] [0] = true;
		 borderLine[373] [0] = true;
		 borderLine[372] [0] = true;
		 borderLine[371] [0] = true;
		 borderLine[370] [0] = true;
		 borderLine[369] [0] = true;
		 borderLine[368] [0] = true;
		 borderLine[367] [0] = true;
		 borderLine[366] [0] = true;
		 borderLine[365] [0] = true;
		 borderLine[364] [0] = true;
		 borderLine[363] [0] = true;
		 borderLine[362] [0] = true;
		 borderLine[361] [0] = true;
		 borderLine[360] [0] = true;
		 borderLine[359] [0] = true;
		 borderLine[358] [0] = true;
		 borderLine[357] [0] = true;
		 borderLine[356] [0] = true;
		 borderLine[355] [0] = true;
		 borderLine[354] [0] = true;
		 borderLine[353] [0] = true;
		 borderLine[352] [0] = true;
		 borderLine[351] [0] = true;
		 borderLine[350] [0] = true;
		 borderLine[349] [0] = true;
		 borderLine[348] [0] = true;
		 borderLine[347] [0] = true;
		 borderLine[346] [0] = true;
		 borderLine[345] [0] = true;
		 borderLine[344] [0] = true;
		 borderLine[343] [0] = true;
		 borderLine[342] [0] = true;
		 borderLine[341] [0] = true;
		 borderLine[340] [0] = true;
		 borderLine[339] [0] = true;
		 borderLine[338] [0] = true;
		 borderLine[337] [0] = true;
		 borderLine[336] [0] = true;
		 borderLine[335] [0] = true;
		 borderLine[334] [0] = true;
		 borderLine[333] [0] = true;
		 borderLine[332] [0] = true;
		 borderLine[331] [0] = true;
		 borderLine[330] [0] = true;
		 borderLine[329] [0] = true;
		 borderLine[328] [0] = true;
		 borderLine[327] [0] = true;
		 borderLine[326] [0] = true;
		 borderLine[325] [0] = true;
		 borderLine[324] [0] = true;
		 borderLine[323] [0] = true;
		 borderLine[322] [0] = true;
		 borderLine[321] [0] = true;
		 borderLine[320] [0] = true;
		 borderLine[319] [0] = true;
		 borderLine[318] [0] = true;
		 borderLine[317] [0] = true;
		 borderLine[316] [0] = true;
		 borderLine[315] [0] = true;
		 borderLine[314] [0] = true;
		 borderLine[313] [0] = true;
		 borderLine[312] [0] = true;
		 borderLine[311] [0] = true;
		 borderLine[310] [0] = true;
		 borderLine[309] [0] = true;
		 borderLine[308] [0] = true;
		 borderLine[307] [0] = true;
		 borderLine[306] [0] = true;
		 borderLine[305] [0] = true;
		 borderLine[304] [0] = true;
		 borderLine[303] [0] = true;
		 borderLine[302] [0] = true;
		 borderLine[301] [0] = true;
		 borderLine[300] [0] = true;
		 borderLine[299] [0] = true;
		 borderLine[298] [0] = true;
		 borderLine[297] [0] = true;
		 borderLine[296] [0] = true;
		 borderLine[295] [0] = true;
		 borderLine[294] [0] = true;
		 borderLine[293] [0] = true;
		 borderLine[292] [0] = true;
		 borderLine[291] [0] = true;
		 borderLine[290] [0] = true;
		 borderLine[289] [0] = true;
		 borderLine[288] [0] = true;
		 borderLine[287] [0] = true;
		 borderLine[286] [0] = true;
		 borderLine[285] [0] = true;
		 borderLine[284] [0] = true;
		 borderLine[283] [0] = true;
		 borderLine[282] [0] = true;
		 borderLine[281] [0] = true;
		 borderLine[280] [0] = true;
		 borderLine[279] [0] = true;
		 borderLine[278] [0] = true;
		 borderLine[277] [0] = true;
		 borderLine[276] [0] = true;
		 borderLine[275] [0] = true;
		 borderLine[274] [0] = true;
		 borderLine[273] [0] = true;
		 borderLine[272] [0] = true;
		 borderLine[271] [0] = true;
		 borderLine[270] [0] = true;
		 borderLine[269] [0] = true;
		 borderLine[268] [0] = true;
		 borderLine[267] [0] = true;
		 borderLine[266] [0] = true;
		 borderLine[265] [0] = true;
		 borderLine[264] [0] = true;
		 borderLine[263] [0] = true;
		 borderLine[262] [0] = true;
		 borderLine[261] [0] = true;
		 borderLine[260] [0] = true;
		 borderLine[259] [0] = true;
		 borderLine[258] [0] = true;
		 borderLine[257] [0] = true;
		 borderLine[256] [0] = true;
		 borderLine[255] [0] = true;
		 borderLine[254] [0] = true;
		 borderLine[253] [0] = true;
		 borderLine[252] [0] = true;
		 borderLine[251] [0] = true;
		 borderLine[250] [0] = true;
		 borderLine[249] [0] = true;
		 borderLine[248] [0] = true;
		 borderLine[247] [0] = true;
		 borderLine[246] [0] = true;
		 borderLine[245] [0] = true;
		 borderLine[244] [0] = true;
		 borderLine[243] [0] = true;
		 borderLine[242] [0] = true;
		 borderLine[241] [0] = true;
		 borderLine[240] [0] = true;
		 borderLine[239] [0] = true;
		 borderLine[238] [0] = true;
		 borderLine[237] [0] = true;
		 borderLine[236] [0] = true;
		 borderLine[235] [0] = true;
		 borderLine[234] [0] = true;
		 borderLine[233] [0] = true;
		 borderLine[232] [0] = true;
		 borderLine[231] [0] = true;
		 borderLine[230] [0] = true;
		 borderLine[229] [0] = true;
		 borderLine[228] [0] = true;
		 borderLine[227] [0] = true;
		 borderLine[226] [0] = true;
		 borderLine[225] [0] = true;
		 borderLine[224] [0] = true;
		 borderLine[223] [0] = true;
		 borderLine[222] [0] = true;
		 borderLine[221] [0] = true;
		 borderLine[220] [0] = true;
		 borderLine[219] [0] = true;
		 borderLine[218] [0] = true;
		 borderLine[217] [0] = true;
		 borderLine[216] [0] = true;
		 borderLine[215] [0] = true;
		 borderLine[214] [0] = true;
		 borderLine[213] [0] = true;
		 borderLine[212] [0] = true;
		 borderLine[211] [0] = true;
		 borderLine[210] [0] = true;
		 borderLine[209] [0] = true;
		 borderLine[208] [0] = true;
		 borderLine[207] [0] = true;
		 borderLine[206] [0] = true;
		 borderLine[205] [0] = true;
		 borderLine[204] [0] = true;
		 borderLine[203] [0] = true;
		 borderLine[202] [0] = true;
		 borderLine[201] [0] = true;
		 borderLine[200] [0] = true;
		 borderLine[199] [0] = true;
		 borderLine[198] [0] = true;
		 borderLine[197] [0] = true;
		 borderLine[196] [0] = true;
		 borderLine[195] [0] = true;
		 borderLine[194] [0] = true;
		 borderLine[193] [0] = true;
		 borderLine[192] [0] = true;
		 borderLine[191] [0] = true;
		 borderLine[190] [0] = true;
		 borderLine[189] [0] = true;
		 borderLine[188] [0] = true;
		 borderLine[187] [0] = true;
		 borderLine[186] [0] = true;
		 borderLine[185] [0] = true;
		 borderLine[184] [0] = true;
		 borderLine[183] [0] = true;
		 borderLine[182] [0] = true;
		 borderLine[181] [0] = true;
		 borderLine[180] [0] = true;
		 borderLine[179] [0] = true;
		 borderLine[178] [0] = true;
		 borderLine[177] [0] = true;
		 borderLine[176] [0] = true;
		 borderLine[175] [0] = true;
		 borderLine[174] [0] = true;
		 borderLine[173] [0] = true;
		 borderLine[172] [0] = true;
		 borderLine[171] [0] = true;
		 borderLine[170] [0] = true;
		 borderLine[169] [0] = true;
		 borderLine[168] [0] = true;
		 borderLine[167] [0] = true;
		 borderLine[166] [0] = true;
		 borderLine[165] [0] = true;
		 borderLine[164] [0] = true;
		 borderLine[163] [0] = true;
		 borderLine[162] [0] = true;
		 borderLine[161] [0] = true;
		 borderLine[160] [0] = true;
		 borderLine[159] [0] = true;
		 borderLine[158] [0] = true;
		 borderLine[157] [0] = true;
		 borderLine[156] [0] = true;
		 borderLine[155] [0] = true;
		 borderLine[154] [0] = true;
		 borderLine[153] [0] = true;
		 borderLine[152] [0] = true;
		 borderLine[151] [0] = true;
		 borderLine[150] [0] = true;
		 borderLine[149] [0] = true;
		 borderLine[148] [0] = true;
		 borderLine[147] [0] = true;
		 borderLine[146] [0] = true;
		 borderLine[145] [0] = true;
		 borderLine[144] [0] = true;
		 borderLine[143] [0] = true;
		 borderLine[142] [0] = true;
		 borderLine[141] [0] = true;
		 borderLine[140] [0] = true;
		 borderLine[139] [0] = true;
		 borderLine[138] [0] = true;
		 borderLine[137] [0] = true;
		 borderLine[136] [0] = true;
		 borderLine[135] [0] = true;
		 borderLine[134] [0] = true;
		 borderLine[133] [0] = true;
		 borderLine[132] [0] = true;
		 borderLine[131] [0] = true;
		 borderLine[130] [0] = true;
		 borderLine[129] [0] = true;
		 borderLine[128] [0] = true;
		 borderLine[127] [0] = true;
		 borderLine[126] [0] = true;
		 borderLine[125] [0] = true;
		 borderLine[124] [0] = true;
		 borderLine[123] [0] = true;
		 borderLine[122] [0] = true;
		 borderLine[121] [0] = true;
		 borderLine[120] [0] = true;
		 borderLine[119] [0] = true;
		 borderLine[118] [0] = true;
		 borderLine[117] [0] = true;
		 borderLine[116] [0] = true;
		 borderLine[115] [0] = true;
		 borderLine[114] [0] = true;
		 borderLine[113] [0] = true;
		 borderLine[112] [0] = true;
		 borderLine[111] [0] = true;
		 borderLine[110] [0] = true;
		 borderLine[109] [0] = true;
		 borderLine[108] [0] = true;
		 borderLine[107] [0] = true;
		 borderLine[106] [0] = true;
		 borderLine[105] [0] = true;
		 borderLine[104] [0] = true;
		 borderLine[103] [0] = true;
		 borderLine[102] [0] = true;
		 borderLine[101] [0] = true;
		 borderLine[100] [0] = true;
		 borderLine[99] [0] = true;
		 borderLine[98] [0] = true;
		 borderLine[97] [0] = true;
		 borderLine[96] [0] = true;
		 borderLine[95] [0] = true;
		 borderLine[94] [0] = true;
		 borderLine[93] [0] = true;
		 borderLine[92] [0] = true;
		 borderLine[91] [0] = true;
		 borderLine[90] [0] = true;
		 borderLine[89] [0] = true;
		 borderLine[88] [0] = true;
		 borderLine[87] [0] = true;
		 borderLine[86] [0] = true;
		 borderLine[85] [0] = true;
		 borderLine[84] [0] = true;
		 borderLine[83] [0] = true;
		 borderLine[82] [0] = true;
		 borderLine[81] [0] = true;
		 borderLine[80] [0] = true;
		 borderLine[79] [0] = true;
		 borderLine[78] [0] = true;
		 borderLine[77] [0] = true;
		 borderLine[76] [0] = true;
		 borderLine[75] [0] = true;
		 borderLine[74] [0] = true;
		 borderLine[73] [0] = true;
		 borderLine[72] [0] = true;
		 borderLine[71] [0] = true;
		 borderLine[70] [0] = true;
		 borderLine[69] [0] = true;
		 borderLine[68] [0] = true;
		 borderLine[67] [0] = true;
		 borderLine[66] [0] = true;
		 borderLine[65] [0] = true;
		 borderLine[64] [0] = true;
		 borderLine[63] [0] = true;
		 borderLine[62] [0] = true;
		 borderLine[61] [0] = true;
		 borderLine[60] [0] = true;
		 borderLine[59] [0] = true;
		 borderLine[58] [0] = true;
		 borderLine[57] [0] = true;
		 borderLine[56] [0] = true;
		 borderLine[55] [0] = true;
		 borderLine[54] [0] = true;
		 borderLine[53] [0] = true;
		 borderLine[52] [0] = true;
		 borderLine[51] [0] = true;
		 borderLine[50] [0] = true;
		 borderLine[49] [0] = true;
		 borderLine[48] [0] = true;
		 borderLine[47] [0] = true;
		 borderLine[46] [0] = true;
		 borderLine[45] [0] = true;
		 borderLine[44] [0] = true;
		 borderLine[43] [0] = true;
		 borderLine[42] [0] = true;
		 borderLine[41] [0] = true;
		 borderLine[40] [0] = true;
		 borderLine[39] [0] = true;
		 borderLine[38] [0] = true;
		 borderLine[37] [0] = true;
		 borderLine[36] [0] = true;
		 borderLine[35] [0] = true;
		 borderLine[34] [0] = true;
		 borderLine[33] [0] = true;
		 borderLine[32] [0] = true;
		 borderLine[31] [0] = true;
		 borderLine[30] [0] = true;
		 borderLine[29] [0] = true;
		 borderLine[28] [0] = true;
		 borderLine[27] [0] = true;
		 borderLine[26] [0] = true;
		 borderLine[25] [0] = true;
		 borderLine[24] [0] = true;
		 borderLine[23] [0] = true;
		 borderLine[22] [0] = true;
		 borderLine[21] [0] = true;
		 borderLine[20] [0] = true;
		 borderLine[19] [0] = true;
		 borderLine[18] [0] = true;
		 borderLine[17] [0] = true;
		 borderLine[16] [0] = true;
		 borderLine[15] [0] = true;
		 borderLine[14] [0] = true;
		 borderLine[13] [0] = true;
		 borderLine[12] [0] = true;
		 borderLine[11] [0] = true;
		 borderLine[10] [0] = true;
		 borderLine[9] [0] = true;
		 borderLine[8] [0] = true;
		 borderLine[7] [0] = true;
		 borderLine[6] [0] = true;
		 borderLine[5] [0] = true;
		 borderLine[4] [0] = true;
		 borderLine[3] [0] = true;
		 borderLine[2] [0] = true;
		 borderLine[1] [0] = true;
		 borderLine[0] [0] = true;
		 borderLine[384] [1] = true;
		 borderLine[0] [1] = true;
		 borderLine[384] [2] = true;
		 borderLine[0] [2] = true;
		 borderLine[384] [3] = true;
		 borderLine[0] [3] = true;
		 borderLine[384] [4] = true;
		 borderLine[0] [4] = true;
		 borderLine[384] [5] = true;
		 borderLine[0] [5] = true;
		 borderLine[384] [6] = true;
		 borderLine[0] [6] = true;
		 borderLine[384] [7] = true;
		 borderLine[0] [7] = true;
		 borderLine[384] [8] = true;
		 borderLine[0] [8] = true;
		 borderLine[384] [9] = true;
		 borderLine[0] [9] = true;
		 borderLine[384] [10] = true;
		 borderLine[0] [10] = true;
		 borderLine[384] [11] = true;
		 borderLine[0] [11] = true;
		 borderLine[384] [12] = true;
		 borderLine[0] [12] = true;
		 borderLine[384] [13] = true;
		 borderLine[0] [13] = true;
		 borderLine[384] [14] = true;
		 borderLine[0] [14] = true;
		 borderLine[384] [15] = true;
		 borderLine[0] [15] = true;
		 borderLine[384] [16] = true;
		 borderLine[0] [16] = true;
		 borderLine[384] [17] = true;
		 borderLine[0] [17] = true;
		 borderLine[384] [18] = true;
		 borderLine[0] [18] = true;
		 borderLine[384] [19] = true;
		 borderLine[0] [19] = true;
		 borderLine[384] [20] = true;
		 borderLine[0] [20] = true;
		 borderLine[384] [21] = true;
		 borderLine[0] [21] = true;
		 borderLine[384] [22] = true;
		 borderLine[0] [22] = true;
		 borderLine[384] [23] = true;
		 borderLine[0] [23] = true;
		 borderLine[384] [24] = true;
		 borderLine[0] [24] = true;
		 borderLine[384] [25] = true;
		 borderLine[0] [25] = true;
		 borderLine[384] [26] = true;
		 borderLine[0] [26] = true;
		 borderLine[384] [27] = true;
		 borderLine[0] [27] = true;
		 borderLine[384] [28] = true;
		 borderLine[0] [28] = true;
		 borderLine[384] [29] = true;
		 borderLine[0] [29] = true;
		 borderLine[384] [30] = true;
		 borderLine[0] [30] = true;
		 borderLine[384] [31] = true;
		 borderLine[0] [31] = true;
		 borderLine[384] [32] = true;
		 borderLine[0] [32] = true;
		 borderLine[384] [33] = true;
		 borderLine[0] [33] = true;
		 borderLine[384] [34] = true;
		 borderLine[0] [34] = true;
		 borderLine[384] [35] = true;
		 borderLine[0] [35] = true;
		 borderLine[384] [36] = true;
		 borderLine[0] [36] = true;
		 borderLine[384] [37] = true;
		 borderLine[0] [37] = true;
		 borderLine[384] [38] = true;
		 borderLine[0] [38] = true;
		 borderLine[384] [39] = true;
		 borderLine[0] [39] = true;
		 borderLine[384] [40] = true;
		 borderLine[0] [40] = true;
		 borderLine[384] [41] = true;
		 borderLine[0] [41] = true;
		 borderLine[384] [42] = true;
		 borderLine[0] [42] = true;
		 borderLine[384] [43] = true;
		 borderLine[0] [43] = true;
		 borderLine[384] [44] = true;
		 borderLine[0] [44] = true;
		 borderLine[384] [45] = true;
		 borderLine[0] [45] = true;
		 borderLine[384] [46] = true;
		 borderLine[0] [46] = true;
		 borderLine[384] [47] = true;
		 borderLine[0] [47] = true;
		 borderLine[384] [48] = true;
		 borderLine[0] [48] = true;
		 borderLine[384] [49] = true;
		 borderLine[0] [49] = true;
		 borderLine[384] [50] = true;
		 borderLine[0] [50] = true;
		 borderLine[384] [51] = true;
		 borderLine[0] [51] = true;
		 borderLine[384] [52] = true;
		 borderLine[0] [52] = true;
		 borderLine[384] [53] = true;
		 borderLine[0] [53] = true;
		 borderLine[384] [54] = true;
		 borderLine[0] [54] = true;
		 borderLine[384] [55] = true;
		 borderLine[0] [55] = true;
		 borderLine[384] [56] = true;
		 borderLine[0] [56] = true;
		 borderLine[384] [57] = true;
		 borderLine[0] [57] = true;
		 borderLine[384] [58] = true;
		 borderLine[0] [58] = true;
		 borderLine[384] [59] = true;
		 borderLine[0] [59] = true;
		 borderLine[384] [60] = true;
		 borderLine[0] [60] = true;
		 borderLine[384] [61] = true;
		 borderLine[0] [61] = true;
		 borderLine[384] [62] = true;
		 borderLine[0] [62] = true;
		 borderLine[384] [63] = true;
		 borderLine[0] [63] = true;
		 borderLine[384] [64] = true;
		 borderLine[0] [64] = true;
		 borderLine[384] [65] = true;
		 borderLine[0] [65] = true;
		 borderLine[384] [66] = true;
		 borderLine[0] [66] = true;
		 borderLine[384] [67] = true;
		 borderLine[0] [67] = true;
		 borderLine[384] [68] = true;
		 borderLine[0] [68] = true;
		 borderLine[384] [69] = true;
		 borderLine[0] [69] = true;
		 borderLine[384] [70] = true;
		 borderLine[0] [70] = true;
		 borderLine[384] [71] = true;
		 borderLine[0] [71] = true;
		 borderLine[384] [72] = true;
		 borderLine[0] [72] = true;
		 borderLine[384] [73] = true;
		 borderLine[0] [73] = true;
		 borderLine[384] [74] = true;
		 borderLine[0] [74] = true;
		 borderLine[384] [75] = true;
		 borderLine[0] [75] = true;
		 borderLine[384] [76] = true;
		 borderLine[0] [76] = true;
		 borderLine[384] [77] = true;
		 borderLine[0] [77] = true;
		 borderLine[384] [78] = true;
		 borderLine[0] [78] = true;
		 borderLine[384] [79] = true;
		 borderLine[0] [79] = true;
		 borderLine[384] [80] = true;
		 borderLine[0] [80] = true;
		 borderLine[384] [81] = true;
		 borderLine[0] [81] = true;
		 borderLine[384] [82] = true;
		 borderLine[0] [82] = true;
		 borderLine[384] [83] = true;
		 borderLine[0] [83] = true;
		 borderLine[384] [84] = true;
		 borderLine[0] [84] = true;
		 borderLine[384] [85] = true;
		 borderLine[0] [85] = true;
		 borderLine[384] [86] = true;
		 borderLine[0] [86] = true;
		 borderLine[384] [87] = true;
		 borderLine[0] [87] = true;
		 borderLine[384] [88] = true;
		 borderLine[0] [88] = true;
		 borderLine[384] [89] = true;
		 borderLine[0] [89] = true;
		 borderLine[384] [90] = true;
		 borderLine[0] [90] = true;
		 borderLine[384] [91] = true;
		 borderLine[0] [91] = true;
		 borderLine[384] [92] = true;
		 borderLine[0] [92] = true;
		 borderLine[384] [93] = true;
		 borderLine[0] [93] = true;
		 borderLine[384] [94] = true;
		 borderLine[0] [94] = true;
		 borderLine[384] [95] = true;
		 borderLine[0] [95] = true;
		 borderLine[384] [96] = true;
		 borderLine[0] [96] = true;
		 borderLine[384] [97] = true;
		 borderLine[0] [97] = true;
		 borderLine[384] [98] = true;
		 borderLine[0] [98] = true;
		 borderLine[384] [99] = true;
		 borderLine[0] [99] = true;
		 borderLine[384] [100] = true;
		 borderLine[0] [100] = true;
		 borderLine[384] [101] = true;
		 borderLine[0] [101] = true;
		 borderLine[384] [102] = true;
		 borderLine[0] [102] = true;
		 borderLine[384] [103] = true;
		 borderLine[0] [103] = true;
		 borderLine[384] [104] = true;
		 borderLine[0] [104] = true;
		 borderLine[384] [105] = true;
		 borderLine[0] [105] = true;
		 borderLine[384] [106] = true;
		 borderLine[0] [106] = true;
		 borderLine[384] [107] = true;
		 borderLine[0] [107] = true;
		 borderLine[384] [108] = true;
		 borderLine[0] [108] = true;
		 borderLine[384] [109] = true;
		 borderLine[0] [109] = true;
		 borderLine[384] [110] = true;
		 borderLine[0] [110] = true;
		 borderLine[384] [111] = true;
		 borderLine[0] [111] = true;
		 borderLine[384] [112] = true;
		 borderLine[0] [112] = true;
		 borderLine[384] [113] = true;
		 borderLine[0] [113] = true;
		 borderLine[384] [114] = true;
		 borderLine[0] [114] = true;
		 borderLine[384] [115] = true;
		 borderLine[0] [115] = true;
		 borderLine[384] [116] = true;
		 borderLine[0] [116] = true;
		 borderLine[384] [117] = true;
		 borderLine[0] [117] = true;
		 borderLine[384] [118] = true;
		 borderLine[0] [118] = true;
		 borderLine[384] [119] = true;
		 borderLine[0] [119] = true;
		 borderLine[384] [120] = true;
		 borderLine[0] [120] = true;
		 borderLine[384] [121] = true;
		 borderLine[0] [121] = true;
		 borderLine[384] [122] = true;
		 borderLine[0] [122] = true;
		 borderLine[384] [123] = true;
		 borderLine[0] [123] = true;
		 borderLine[384] [124] = true;
		 borderLine[0] [124] = true;
		 borderLine[384] [125] = true;
		 borderLine[0] [125] = true;
		 borderLine[384] [126] = true;
		 borderLine[0] [126] = true;
		 borderLine[384] [127] = true;
		 borderLine[0] [127] = true;
		 borderLine[384] [128] = true;
		 borderLine[0] [128] = true;
		 borderLine[384] [129] = true;
		 borderLine[0] [129] = true;
		 borderLine[384] [130] = true;
		 borderLine[0] [130] = true;
		 borderLine[384] [131] = true;
		 borderLine[0] [131] = true;
		 borderLine[384] [132] = true;
		 borderLine[0] [132] = true;
		 borderLine[384] [133] = true;
		 borderLine[0] [133] = true;
		 borderLine[384] [134] = true;
		 borderLine[0] [134] = true;
		 borderLine[384] [135] = true;
		 borderLine[275] [135] = true;
		 borderLine[274] [135] = true;
		 borderLine[273] [135] = true;
		 borderLine[272] [135] = true;
		 borderLine[271] [135] = true;
		 borderLine[270] [135] = true;
		 borderLine[269] [135] = true;
		 borderLine[268] [135] = true;
		 borderLine[267] [135] = true;
		 borderLine[266] [135] = true;
		 borderLine[265] [135] = true;
		 borderLine[264] [135] = true;
		 borderLine[263] [135] = true;
		 borderLine[262] [135] = true;
		 borderLine[261] [135] = true;
		 borderLine[260] [135] = true;
		 borderLine[259] [135] = true;
		 borderLine[258] [135] = true;
		 borderLine[257] [135] = true;
		 borderLine[256] [135] = true;
		 borderLine[255] [135] = true;
		 borderLine[254] [135] = true;
		 borderLine[253] [135] = true;
		 borderLine[252] [135] = true;
		 borderLine[251] [135] = true;
		 borderLine[250] [135] = true;
		 borderLine[249] [135] = true;
		 borderLine[248] [135] = true;
		 borderLine[247] [135] = true;
		 borderLine[246] [135] = true;
		 borderLine[245] [135] = true;
		 borderLine[244] [135] = true;
		 borderLine[243] [135] = true;
		 borderLine[242] [135] = true;
		 borderLine[241] [135] = true;
		 borderLine[240] [135] = true;
		 borderLine[239] [135] = true;
		 borderLine[238] [135] = true;
		 borderLine[237] [135] = true;
		 borderLine[236] [135] = true;
		 borderLine[235] [135] = true;
		 borderLine[234] [135] = true;
		 borderLine[233] [135] = true;
		 borderLine[232] [135] = true;
		 borderLine[231] [135] = true;
		 borderLine[230] [135] = true;
		 borderLine[229] [135] = true;
		 borderLine[228] [135] = true;
		 borderLine[227] [135] = true;
		 borderLine[226] [135] = true;
		 borderLine[225] [135] = true;
		 borderLine[224] [135] = true;
		 borderLine[223] [135] = true;
		 borderLine[222] [135] = true;
		 borderLine[221] [135] = true;
		 borderLine[220] [135] = true;
		 borderLine[219] [135] = true;
		 borderLine[218] [135] = true;
		 borderLine[217] [135] = true;
		 borderLine[216] [135] = true;
		 borderLine[215] [135] = true;
		 borderLine[214] [135] = true;
		 borderLine[213] [135] = true;
		 borderLine[212] [135] = true;
		 borderLine[211] [135] = true;
		 borderLine[210] [135] = true;
		 borderLine[209] [135] = true;
		 borderLine[208] [135] = true;
		 borderLine[207] [135] = true;
		 borderLine[206] [135] = true;
		 borderLine[205] [135] = true;
		 borderLine[204] [135] = true;
		 borderLine[203] [135] = true;
		 borderLine[202] [135] = true;
		 borderLine[201] [135] = true;
		 borderLine[200] [135] = true;
		 borderLine[199] [135] = true;
		 borderLine[198] [135] = true;
		 borderLine[197] [135] = true;
		 borderLine[196] [135] = true;
		 borderLine[195] [135] = true;
		 borderLine[194] [135] = true;
		 borderLine[193] [135] = true;
		 borderLine[192] [135] = true;
		 borderLine[191] [135] = true;
		 borderLine[190] [135] = true;
		 borderLine[189] [135] = true;
		 borderLine[188] [135] = true;
		 borderLine[187] [135] = true;
		 borderLine[186] [135] = true;
		 borderLine[185] [135] = true;
		 borderLine[184] [135] = true;
		 borderLine[183] [135] = true;
		 borderLine[182] [135] = true;
		 borderLine[181] [135] = true;
		 borderLine[180] [135] = true;
		 borderLine[179] [135] = true;
		 borderLine[178] [135] = true;
		 borderLine[177] [135] = true;
		 borderLine[176] [135] = true;
		 borderLine[175] [135] = true;
		 borderLine[174] [135] = true;
		 borderLine[173] [135] = true;
		 borderLine[172] [135] = true;
		 borderLine[171] [135] = true;
		 borderLine[170] [135] = true;
		 borderLine[169] [135] = true;
		 borderLine[168] [135] = true;
		 borderLine[167] [135] = true;
		 borderLine[166] [135] = true;
		 borderLine[165] [135] = true;
		 borderLine[164] [135] = true;
		 borderLine[163] [135] = true;
		 borderLine[162] [135] = true;
		 borderLine[161] [135] = true;
		 borderLine[160] [135] = true;
		 borderLine[159] [135] = true;
		 borderLine[158] [135] = true;
		 borderLine[157] [135] = true;
		 borderLine[156] [135] = true;
		 borderLine[155] [135] = true;
		 borderLine[154] [135] = true;
		 borderLine[153] [135] = true;
		 borderLine[152] [135] = true;
		 borderLine[151] [135] = true;
		 borderLine[150] [135] = true;
		 borderLine[149] [135] = true;
		 borderLine[148] [135] = true;
		 borderLine[147] [135] = true;
		 borderLine[146] [135] = true;
		 borderLine[145] [135] = true;
		 borderLine[144] [135] = true;
		 borderLine[143] [135] = true;
		 borderLine[142] [135] = true;
		 borderLine[141] [135] = true;
		 borderLine[140] [135] = true;
		 borderLine[139] [135] = true;
		 borderLine[138] [135] = true;
		 borderLine[137] [135] = true;
		 borderLine[136] [135] = true;
		 borderLine[135] [135] = true;
		 borderLine[134] [135] = true;
		 borderLine[133] [135] = true;
		 borderLine[132] [135] = true;
		 borderLine[131] [135] = true;
		 borderLine[130] [135] = true;
		 borderLine[129] [135] = true;
		 borderLine[128] [135] = true;
		 borderLine[127] [135] = true;
		 borderLine[126] [135] = true;
		 borderLine[125] [135] = true;
		 borderLine[124] [135] = true;
		 borderLine[123] [135] = true;
		 borderLine[122] [135] = true;
		 borderLine[121] [135] = true;
		 borderLine[120] [135] = true;
		 borderLine[119] [135] = true;
		 borderLine[118] [135] = true;
		 borderLine[117] [135] = true;
		 borderLine[116] [135] = true;
		 borderLine[115] [135] = true;
		 borderLine[114] [135] = true;
		 borderLine[113] [135] = true;
		 borderLine[112] [135] = true;
		 borderLine[111] [135] = true;
		 borderLine[110] [135] = true;
		 borderLine[109] [135] = true;
		 borderLine[108] [135] = true;
		 borderLine[107] [135] = true;
		 borderLine[106] [135] = true;
		 borderLine[105] [135] = true;
		 borderLine[104] [135] = true;
		 borderLine[103] [135] = true;
		 borderLine[102] [135] = true;
		 borderLine[101] [135] = true;
		 borderLine[100] [135] = true;
		 borderLine[99] [135] = true;
		 borderLine[98] [135] = true;
		 borderLine[97] [135] = true;
		 borderLine[96] [135] = true;
		 borderLine[95] [135] = true;
		 borderLine[94] [135] = true;
		 borderLine[93] [135] = true;
		 borderLine[92] [135] = true;
		 borderLine[91] [135] = true;
		 borderLine[90] [135] = true;
		 borderLine[89] [135] = true;
		 borderLine[88] [135] = true;
		 borderLine[87] [135] = true;
		 borderLine[86] [135] = true;
		 borderLine[85] [135] = true;
		 borderLine[84] [135] = true;
		 borderLine[83] [135] = true;
		 borderLine[82] [135] = true;
		 borderLine[81] [135] = true;
		 borderLine[80] [135] = true;
		 borderLine[79] [135] = true;
		 borderLine[78] [135] = true;
		 borderLine[77] [135] = true;
		 borderLine[76] [135] = true;
		 borderLine[75] [135] = true;
		 borderLine[74] [135] = true;
		 borderLine[73] [135] = true;
		 borderLine[72] [135] = true;
		 borderLine[71] [135] = true;
		 borderLine[70] [135] = true;
		 borderLine[69] [135] = true;
		 borderLine[68] [135] = true;
		 borderLine[67] [135] = true;
		 borderLine[66] [135] = true;
		 borderLine[65] [135] = true;
		 borderLine[64] [135] = true;
		 borderLine[63] [135] = true;
		 borderLine[62] [135] = true;
		 borderLine[61] [135] = true;
		 borderLine[60] [135] = true;
		 borderLine[59] [135] = true;
		 borderLine[58] [135] = true;
		 borderLine[57] [135] = true;
		 borderLine[56] [135] = true;
		 borderLine[55] [135] = true;
		 borderLine[54] [135] = true;
		 borderLine[53] [135] = true;
		 borderLine[52] [135] = true;
		 borderLine[51] [135] = true;
		 borderLine[50] [135] = true;
		 borderLine[49] [135] = true;
		 borderLine[48] [135] = true;
		 borderLine[47] [135] = true;
		 borderLine[46] [135] = true;
		 borderLine[45] [135] = true;
		 borderLine[44] [135] = true;
		 borderLine[43] [135] = true;
		 borderLine[42] [135] = true;
		 borderLine[41] [135] = true;
		 borderLine[40] [135] = true;
		 borderLine[39] [135] = true;
		 borderLine[38] [135] = true;
		 borderLine[37] [135] = true;
		 borderLine[36] [135] = true;
		 borderLine[35] [135] = true;
		 borderLine[34] [135] = true;
		 borderLine[33] [135] = true;
		 borderLine[32] [135] = true;
		 borderLine[31] [135] = true;
		 borderLine[30] [135] = true;
		 borderLine[29] [135] = true;
		 borderLine[28] [135] = true;
		 borderLine[27] [135] = true;
		 borderLine[26] [135] = true;
		 borderLine[25] [135] = true;
		 borderLine[24] [135] = true;
		 borderLine[23] [135] = true;
		 borderLine[22] [135] = true;
		 borderLine[21] [135] = true;
		 borderLine[20] [135] = true;
		 borderLine[19] [135] = true;
		 borderLine[18] [135] = true;
		 borderLine[17] [135] = true;
		 borderLine[16] [135] = true;
		 borderLine[15] [135] = true;
		 borderLine[14] [135] = true;
		 borderLine[13] [135] = true;
		 borderLine[12] [135] = true;
		 borderLine[11] [135] = true;
		 borderLine[10] [135] = true;
		 borderLine[9] [135] = true;
		 borderLine[8] [135] = true;
		 borderLine[7] [135] = true;
		 borderLine[6] [135] = true;
		 borderLine[5] [135] = true;
		 borderLine[4] [135] = true;
		 borderLine[3] [135] = true;
		 borderLine[2] [135] = true;
		 borderLine[1] [135] = true;
		 borderLine[0] [135] = true;
		 borderLine[384] [136] = true;
		 borderLine[275] [136] = true;
		 borderLine[384] [137] = true;
		 borderLine[275] [137] = true;
		 borderLine[384] [138] = true;
		 borderLine[275] [138] = true;
		 borderLine[384] [139] = true;
		 borderLine[275] [139] = true;
		 borderLine[384] [140] = true;
		 borderLine[275] [140] = true;
		 borderLine[384] [141] = true;
		 borderLine[275] [141] = true;
		 borderLine[384] [142] = true;
		 borderLine[275] [142] = true;
		 borderLine[384] [143] = true;
		 borderLine[275] [143] = true;
		 borderLine[384] [144] = true;
		 borderLine[275] [144] = true;
		 borderLine[384] [145] = true;
		 borderLine[275] [145] = true;
		 borderLine[384] [146] = true;
		 borderLine[275] [146] = true;
		 borderLine[384] [147] = true;
		 borderLine[275] [147] = true;
		 borderLine[384] [148] = true;
		 borderLine[275] [148] = true;
		 borderLine[384] [149] = true;
		 borderLine[275] [149] = true;
		 borderLine[384] [150] = true;
		 borderLine[275] [150] = true;
		 borderLine[384] [151] = true;
		 borderLine[275] [151] = true;
		 borderLine[384] [152] = true;
		 borderLine[275] [152] = true;
		 borderLine[384] [153] = true;
		 borderLine[275] [153] = true;
		 borderLine[384] [154] = true;
		 borderLine[275] [154] = true;
		 borderLine[384] [155] = true;
		 borderLine[275] [155] = true;
		 borderLine[384] [156] = true;
		 borderLine[275] [156] = true;
		 borderLine[384] [157] = true;
		 borderLine[275] [157] = true;
		 borderLine[384] [158] = true;
		 borderLine[275] [158] = true;
		 borderLine[384] [159] = true;
		 borderLine[275] [159] = true;
		 borderLine[384] [160] = true;
		 borderLine[275] [160] = true;
		 borderLine[384] [161] = true;
		 borderLine[275] [161] = true;
		 borderLine[384] [162] = true;
		 borderLine[275] [162] = true;
		 borderLine[384] [163] = true;
		 borderLine[275] [163] = true;
		 borderLine[384] [164] = true;
		 borderLine[275] [164] = true;
		 borderLine[384] [165] = true;
		 borderLine[275] [165] = true;
		 borderLine[384] [166] = true;
		 borderLine[275] [166] = true;
		 borderLine[384] [167] = true;
		 borderLine[275] [167] = true;
		 borderLine[384] [168] = true;
		 borderLine[275] [168] = true;
		 borderLine[384] [169] = true;
		 borderLine[275] [169] = true;
		 borderLine[384] [170] = true;
		 borderLine[275] [170] = true;
		 borderLine[384] [171] = true;
		 borderLine[275] [171] = true;
		 borderLine[384] [172] = true;
		 borderLine[275] [172] = true;
		 borderLine[384] [173] = true;
		 borderLine[275] [173] = true;
		 borderLine[384] [174] = true;
		 borderLine[275] [174] = true;
		 borderLine[384] [175] = true;
		 borderLine[275] [175] = true;
		 borderLine[384] [176] = true;
		 borderLine[275] [176] = true;
		 borderLine[384] [177] = true;
		 borderLine[275] [177] = true;
		 borderLine[384] [178] = true;
		 borderLine[275] [178] = true;
		 borderLine[384] [179] = true;
		 borderLine[275] [179] = true;
		 borderLine[384] [180] = true;
		 borderLine[275] [180] = true;
		 borderLine[384] [181] = true;
		 borderLine[275] [181] = true;
		 borderLine[384] [182] = true;
		 borderLine[275] [182] = true;
		 borderLine[384] [183] = true;
		 borderLine[275] [183] = true;
		 borderLine[384] [184] = true;
		 borderLine[275] [184] = true;
		 borderLine[384] [185] = true;
		 borderLine[275] [185] = true;
		 borderLine[384] [186] = true;
		 borderLine[275] [186] = true;
		 borderLine[384] [187] = true;
		 borderLine[275] [187] = true;
		 borderLine[384] [188] = true;
		 borderLine[275] [188] = true;
		 borderLine[384] [189] = true;
		 borderLine[275] [189] = true;
		 borderLine[384] [190] = true;
		 borderLine[275] [190] = true;
		 borderLine[384] [191] = true;
		 borderLine[275] [191] = true;
		 borderLine[384] [192] = true;
		 borderLine[275] [192] = true;
		 borderLine[384] [193] = true;
		 borderLine[275] [193] = true;
		 borderLine[384] [194] = true;
		 borderLine[275] [194] = true;
		 borderLine[384] [195] = true;
		 borderLine[275] [195] = true;
		 borderLine[384] [196] = true;
		 borderLine[275] [196] = true;
		 borderLine[384] [197] = true;
		 borderLine[275] [197] = true;
		 borderLine[384] [198] = true;
		 borderLine[275] [198] = true;
		 borderLine[384] [199] = true;
		 borderLine[275] [199] = true;
		 borderLine[384] [200] = true;
		 borderLine[275] [200] = true;
		 borderLine[384] [201] = true;
		 borderLine[275] [201] = true;
		 borderLine[384] [202] = true;
		 borderLine[275] [202] = true;
		 borderLine[384] [203] = true;
		 borderLine[275] [203] = true;
		 borderLine[384] [204] = true;
		 borderLine[275] [204] = true;
		 borderLine[384] [205] = true;
		 borderLine[275] [205] = true;
		 borderLine[384] [206] = true;
		 borderLine[275] [206] = true;
		 borderLine[384] [207] = true;
		 borderLine[275] [207] = true;
		 borderLine[384] [208] = true;
		 borderLine[275] [208] = true;
		 borderLine[384] [209] = true;
		 borderLine[275] [209] = true;
		 borderLine[384] [210] = true;
		 borderLine[275] [210] = true;
		 borderLine[384] [211] = true;
		 borderLine[275] [211] = true;
		 borderLine[384] [212] = true;
		 borderLine[275] [212] = true;
		 borderLine[384] [213] = true;
		 borderLine[275] [213] = true;
		 borderLine[384] [214] = true;
		 borderLine[275] [214] = true;
		 borderLine[384] [215] = true;
		 borderLine[275] [215] = true;
		 borderLine[384] [216] = true;
		 borderLine[275] [216] = true;
		 borderLine[384] [217] = true;
		 borderLine[275] [217] = true;
		 borderLine[384] [218] = true;
		 borderLine[275] [218] = true;
		 borderLine[384] [219] = true;
		 borderLine[275] [219] = true;
		 borderLine[384] [220] = true;
		 borderLine[275] [220] = true;
		 borderLine[384] [221] = true;
		 borderLine[275] [221] = true;
		 borderLine[384] [222] = true;
		 borderLine[275] [222] = true;
		 borderLine[384] [223] = true;
		 borderLine[275] [223] = true;
		 borderLine[384] [224] = true;
		 borderLine[275] [224] = true;
		 borderLine[384] [225] = true;
		 borderLine[275] [225] = true;
		 borderLine[384] [226] = true;
		 borderLine[275] [226] = true;
		 borderLine[384] [227] = true;
		 borderLine[275] [227] = true;
		 borderLine[384] [228] = true;
		 borderLine[275] [228] = true;
		 borderLine[384] [229] = true;
		 borderLine[275] [229] = true;
		 borderLine[384] [230] = true;
		 borderLine[275] [230] = true;
		 borderLine[384] [231] = true;
		 borderLine[275] [231] = true;
		 borderLine[384] [232] = true;
		 borderLine[275] [232] = true;
		 borderLine[384] [233] = true;
		 borderLine[275] [233] = true;
		 borderLine[384] [234] = true;
		 borderLine[275] [234] = true;
		 borderLine[384] [235] = true;
		 borderLine[275] [235] = true;
		 borderLine[384] [236] = true;
		 borderLine[275] [236] = true;
		 borderLine[384] [237] = true;
		 borderLine[275] [237] = true;
		 borderLine[384] [238] = true;
		 borderLine[275] [238] = true;
		 borderLine[384] [239] = true;
		 borderLine[275] [239] = true;
		 borderLine[384] [240] = true;
		 borderLine[275] [240] = true;
		 borderLine[384] [241] = true;
		 borderLine[275] [241] = true;
		 borderLine[384] [242] = true;
		 borderLine[275] [242] = true;
		 borderLine[384] [243] = true;
		 borderLine[275] [243] = true;
		 borderLine[384] [244] = true;
		 borderLine[275] [244] = true;
		 borderLine[384] [245] = true;
		 borderLine[275] [245] = true;
		 borderLine[384] [246] = true;
		 borderLine[275] [246] = true;
		 borderLine[384] [247] = true;
		 borderLine[275] [247] = true;
		 borderLine[384] [248] = true;
		 borderLine[275] [248] = true;
		 borderLine[384] [249] = true;
		 borderLine[275] [249] = true;
		 borderLine[384] [250] = true;
		 borderLine[275] [250] = true;
		 borderLine[384] [251] = true;
		 borderLine[275] [251] = true;
		 borderLine[384] [252] = true;
		 borderLine[275] [252] = true;
		 borderLine[384] [253] = true;
		 borderLine[275] [253] = true;
		 borderLine[384] [254] = true;
		 borderLine[275] [254] = true;
		 borderLine[384] [255] = true;
		 borderLine[275] [255] = true;
		 borderLine[384] [256] = true;
		 borderLine[275] [256] = true;
		 borderLine[384] [257] = true;
		 borderLine[275] [257] = true;
		 borderLine[384] [258] = true;
		 borderLine[275] [258] = true;
		 borderLine[384] [259] = true;
		 borderLine[275] [259] = true;
		 borderLine[384] [260] = true;
		 borderLine[275] [260] = true;
		 borderLine[384] [261] = true;
		 borderLine[275] [261] = true;
		 borderLine[384] [262] = true;
		 borderLine[275] [262] = true;
		 borderLine[384] [263] = true;
		 borderLine[275] [263] = true;
		 borderLine[384] [264] = true;
		 borderLine[275] [264] = true;
		 borderLine[384] [265] = true;
		 borderLine[275] [265] = true;
		 borderLine[384] [266] = true;
		 borderLine[275] [266] = true;
		 borderLine[384] [267] = true;
		 borderLine[275] [267] = true;
		 borderLine[384] [268] = true;
		 borderLine[275] [268] = true;
		 borderLine[384] [269] = true;
		 borderLine[275] [269] = true;
		 borderLine[384] [270] = true;
		 borderLine[275] [270] = true;
		 borderLine[384] [271] = true;

		 }

	 private void Add2() {
		 borderLine[275] [271] = true;
		 borderLine[384] [272] = true;
		 borderLine[275] [272] = true;
		 borderLine[384] [273] = true;
		 borderLine[275] [273] = true;
		 borderLine[384] [274] = true;
		 borderLine[275] [274] = true;
		 borderLine[384] [275] = true;
		 borderLine[275] [275] = true;
		 borderLine[384] [276] = true;
		 borderLine[275] [276] = true;
		 borderLine[384] [277] = true;
		 borderLine[275] [277] = true;
		 borderLine[384] [278] = true;
		 borderLine[275] [278] = true;
		 borderLine[384] [279] = true;
		 borderLine[275] [279] = true;
		 borderLine[384] [280] = true;
		 borderLine[275] [280] = true;
		 borderLine[384] [281] = true;
		 borderLine[275] [281] = true;
		 borderLine[384] [282] = true;
		 borderLine[275] [282] = true;
		 borderLine[384] [283] = true;
		 borderLine[275] [283] = true;
		 borderLine[384] [284] = true;
		 borderLine[275] [284] = true;
		 borderLine[384] [285] = true;
		 borderLine[275] [285] = true;
		 borderLine[384] [286] = true;
		 borderLine[275] [286] = true;
		 borderLine[384] [287] = true;
		 borderLine[275] [287] = true;
		 borderLine[384] [288] = true;
		 borderLine[275] [288] = true;
		 borderLine[384] [289] = true;
		 borderLine[275] [289] = true;
		 borderLine[384] [290] = true;
		 borderLine[275] [290] = true;
		 borderLine[384] [291] = true;
		 borderLine[275] [291] = true;
		 borderLine[384] [292] = true;
		 borderLine[275] [292] = true;
		 borderLine[384] [293] = true;
		 borderLine[275] [293] = true;
		 borderLine[384] [294] = true;
		 borderLine[275] [294] = true;
		 borderLine[384] [295] = true;
		 borderLine[275] [295] = true;
		 borderLine[384] [296] = true;
		 borderLine[383] [296] = true;
		 borderLine[382] [296] = true;
		 borderLine[381] [296] = true;
		 borderLine[380] [296] = true;
		 borderLine[379] [296] = true;
		 borderLine[378] [296] = true;
		 borderLine[377] [296] = true;
		 borderLine[376] [296] = true;
		 borderLine[375] [296] = true;
		 borderLine[374] [296] = true;
		 borderLine[373] [296] = true;
		 borderLine[372] [296] = true;
		 borderLine[371] [296] = true;
		 borderLine[370] [296] = true;
		 borderLine[369] [296] = true;
		 borderLine[368] [296] = true;
		 borderLine[367] [296] = true;
		 borderLine[366] [296] = true;
		 borderLine[365] [296] = true;
		 borderLine[364] [296] = true;
		 borderLine[363] [296] = true;
		 borderLine[362] [296] = true;
		 borderLine[361] [296] = true;
		 borderLine[360] [296] = true;
		 borderLine[359] [296] = true;
		 borderLine[358] [296] = true;
		 borderLine[357] [296] = true;
		 borderLine[356] [296] = true;
		 borderLine[355] [296] = true;
		 borderLine[354] [296] = true;
		 borderLine[353] [296] = true;
		 borderLine[352] [296] = true;
		 borderLine[351] [296] = true;
		 borderLine[350] [296] = true;
		 borderLine[349] [296] = true;
		 borderLine[348] [296] = true;
		 borderLine[347] [296] = true;
		 borderLine[346] [296] = true;
		 borderLine[345] [296] = true;
		 borderLine[344] [296] = true;
		 borderLine[343] [296] = true;
		 borderLine[342] [296] = true;
		 borderLine[341] [296] = true;
		 borderLine[340] [296] = true;
		 borderLine[339] [296] = true;
		 borderLine[338] [296] = true;
		 borderLine[337] [296] = true;
		 borderLine[336] [296] = true;
		 borderLine[335] [296] = true;
		 borderLine[334] [296] = true;
		 borderLine[333] [296] = true;
		 borderLine[332] [296] = true;
		 borderLine[331] [296] = true;
		 borderLine[330] [296] = true;
		 borderLine[329] [296] = true;
		 borderLine[328] [296] = true;
		 borderLine[327] [296] = true;
		 borderLine[326] [296] = true;
		 borderLine[325] [296] = true;
		 borderLine[324] [296] = true;
		 borderLine[323] [296] = true;
		 borderLine[322] [296] = true;
		 borderLine[321] [296] = true;
		 borderLine[320] [296] = true;
		 borderLine[319] [296] = true;
		 borderLine[318] [296] = true;
		 borderLine[317] [296] = true;
		 borderLine[316] [296] = true;
		 borderLine[315] [296] = true;
		 borderLine[314] [296] = true;
		 borderLine[313] [296] = true;
		 borderLine[312] [296] = true;
		 borderLine[311] [296] = true;
		 borderLine[310] [296] = true;
		 borderLine[309] [296] = true;
		 borderLine[308] [296] = true;
		 borderLine[307] [296] = true;
		 borderLine[306] [296] = true;
		 borderLine[305] [296] = true;
		 borderLine[304] [296] = true;
		 borderLine[303] [296] = true;
		 borderLine[302] [296] = true;
		 borderLine[301] [296] = true;
		 borderLine[300] [296] = true;
		 borderLine[299] [296] = true;
		 borderLine[298] [296] = true;
		 borderLine[297] [296] = true;
		 borderLine[296] [296] = true;
		 borderLine[295] [296] = true;
		 borderLine[294] [296] = true;
		 borderLine[293] [296] = true;
		 borderLine[292] [296] = true;
		 borderLine[291] [296] = true;
		 borderLine[290] [296] = true;
		 borderLine[289] [296] = true;
		 borderLine[288] [296] = true;
		 borderLine[287] [296] = true;
		 borderLine[286] [296] = true;
		 borderLine[285] [296] = true;
		 borderLine[284] [296] = true;
		 borderLine[283] [296] = true;
		 borderLine[282] [296] = true;
		 borderLine[281] [296] = true;
		 borderLine[280] [296] = true;
		 borderLine[279] [296] = true;
		 borderLine[278] [296] = true;
		 borderLine[277] [296] = true;
		 borderLine[276] [296] = true;
		 borderLine[275] [296] = true;

		 }

}