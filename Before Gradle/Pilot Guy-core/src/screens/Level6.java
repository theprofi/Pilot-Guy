package screens;

import com.badlogic.gdx.graphics.Texture;
import com.elkadakh.others.AssetLoader;
import com.elkadakh.others.DifficultyLevels;
import com.elkadakh.others.Helicopter;
import com.elkadakh.others.canonBall;
import com.elkadakh.pilotguy.GameMainClass;

public class Level6 extends LevelBase {
	protected static final int PLAY_AR_WID = 460, PLAY_AR_HEI = 530;
	protected static final int targetX = 350, targetY = 470;
	private boolean zeroAtY;
	private boolean isFalling;
	private boolean nextSound;
	private float dropBallFreq;
	private canonBall balls[];
	boolean left;
	private float timer;
	Texture canonBall;
	int widthOfTarget;
	
	public Level6 (){
		timer = 0;
		heliPosX = 50;
		heliPosY = 30;
		super.CalculatePlayArRatio(PLAY_AR_WID, PLAY_AR_HEI); //Sets "lvsPlayAreaRatio"
        helicopter = new Helicopter(super.lvsPlayAreaRatio);
        super.SetScreenOptimizedLvsRes(PLAY_AR_WID, PLAY_AR_HEI); //Uses the ratio of screen/level
		zeroAtY = (phoneHeight - super.playArNewHeight <= phoneWidth - super.playArNewWidth); //Place the lvl at x=0 or y=0
        SetCenterCoords(); //To x or y
		helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
		borderLine = new boolean[PLAY_AR_HEI][PLAY_AR_WID];
		playArrWid = PLAY_AR_WID;
		playArrHeight = PLAY_AR_HEI;
		isFalling = false;
		nextSound = false;
		nextLevelSuspend = 0; //2 secs
		dropBallFreq = 0;
		balls = new canonBall[10];
		left = true;
		Add1();
		Add2();
		difLvls = new DifficultyLevels(drawToScreen,helicopter,phoneWidth,phoneHeight);
	}
	
	public void render(float delta){
		if(newStart){
			isFalling = false;
			newStart = false;
			difLvls.chosen = 2;
			helicopter.SetMedium();
			nextSound = false;
			super.nextLevelSuspend = 0;
		}
		super.isFalling = isFalling;
		super.render(delta);
		dropBallFreq+=delta;
		if(dropBallFreq > 1.7){
			AddBall();
			dropBallFreq = 0;
		}
		UpdateBalls(delta);
		if(nextLevelSuspend == 0)
			DrawBalls();
		DrawLevel();
		DrawTarget();
		DrawGlass();
		DrawBackButton();
		if(lvsPlayAreaRatio < 0.9f)
			widthOfTarget = (int)(28*lvsPlayAreaRatio/0.8);
		else
			widthOfTarget = (int)(35*lvsPlayAreaRatio);
		
		difLvls.DoThings(bgNum, startMovingHeli, widthOfTarget, (int)(targetX*lvsPlayAreaRatio + xToCen),(int)(targetY*lvsPlayAreaRatio + yToCen), delta, super.isFalling);
		
		float heliXtransed = (helicopter.GetX() - xToCen) / lvsPlayAreaRatio;
		float heliYtransed = (helicopter.GetY() - yToCen) / lvsPlayAreaRatio;
		//With the border
		if((isCollision(borderLine, heliXtransed, heliYtransed) || isFalling) && !newStart){
			timer+=delta;
			if(!super.isFalling){
				isFalling = true;
				AssetLoader.propellorSpin.stop();
				if(!GameMainClass.muteSound)
					AssetLoader.crash.play();
			}
			super.startMovingHeli = false;

			if(super.isFalling){
				helicopter.SetRotation(helicopter.GetRotation() + 600/lvsPlayAreaRatio*delta*lvsPlayAreaRatio);
				helicopter.SetPosition(helicopter.GetX(), helicopter.GetY() - (phoneHeight/3)*delta);
			}
			if(helicopter.GetY() + 34*lvsPlayAreaRatio < 0 && !AssetLoader.crash.isPlaying() && timer >= 3){ //34*lvsPlayAreaRatio: helis height in the level
				isFalling = false;
				timer = 0;
				helicopter.ResetVelocityRotation();
				helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
				nextSound = false;
			}
		}
		
		//With the landing area
		if(difLvls.chosen != 1 && isCollision(targetX,targetY, 35, 35, heliXtransed, heliYtransed)){
			if(!nextSound){
				AssetLoader.propellorSpin.stop();
				if(!GameMainClass.muteSound)
					AssetLoader.nextLevel.play();
				nextSound = true;
			}
			nextLevelSuspend += delta;
			if(super.nextLevelSuspend > 2){
				GameMainClass.setCurScreen(7);
				if(Menu.prefs.getInteger("lastPlayedLevel", 1) < 7)
					Menu.SaveLevel(7);
				super.SetStars(this);
				helicopter.ResetVelocityRotation();
				helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
				startMovingHeli = false;
				super.nextLevelSuspend = 0;
			}
		}	
		if(BallHeliColl(heliXtransed, heliYtransed)[0]!=-1 && !nextSound && nextLevelSuspend == 0){
			if(!super.isFalling){
				isFalling = true;
				AssetLoader.propellorSpin.stop();
				if(!GameMainClass.muteSound)
					AssetLoader.crash.play();
			}
			super.startMovingHeli = false;
		}
	}

	private void UpdateBalls (float delta){
		for(int i=0;i<balls.length;i++){
			if(balls[i] != null){
				balls[i].updateY(delta);
				if(balls[i].isUnderScreen())
					balls[i] = null;
			}
		}
	}
	
	private float[] BallHeliColl (float heliXtransed, float heliYtransed){
		boolean ballsMatter[][] = new boolean [PLAY_AR_HEI][PLAY_AR_WID];
		for(int i=0;i<balls.length;i++){
			if(balls[i] != null && balls[i].isInLevelBorders() && !isFalling ){
				AddToBallMatter(i, ballsMatter);
				if(isCollision(ballsMatter, heliXtransed, heliYtransed)){
					if(difLvls.chosen != 1)
						return new float[]{heliXtransed, heliYtransed};
					else if(difLvls.chosen == 1 && (balls[i].x - xToCen)/lvsPlayAreaRatio == 306){
						return new float[]{heliXtransed, heliYtransed};
					}
				}
			}
		}
		return new float[]{-1, -1}; // No collision
	}
	
	private void AddBall (){
		for(int i=0;i<balls.length;i++){
			if(balls[i] == null){
				if(left)
					balls[i] = new canonBall(xToCen + 306*lvsPlayAreaRatio, yToCen + 530*lvsPlayAreaRatio - 11*lvsPlayAreaRatio,
							100, lvsPlayAreaRatio,xToCen,yToCen,PLAY_AR_WID,PLAY_AR_HEI);
				else
					balls[i] = new canonBall(xToCen + 425*lvsPlayAreaRatio, yToCen + 530*lvsPlayAreaRatio - 11*lvsPlayAreaRatio,
							100, lvsPlayAreaRatio,xToCen,yToCen,PLAY_AR_WID,PLAY_AR_HEI);
			left = !left;
			break;
			}
		}
	}
		
	private boolean IsHeliNearBall (){
		for(int i=0;i<balls.length;i++){
			if(balls[i] != null && balls[i].isInLevelBorders()){
				if(helicopter.GetY()*lvsPlayAreaRatio + yToCen + 34*lvsPlayAreaRatio + yToCen >= balls[i].y*lvsPlayAreaRatio + yToCen && 
						helicopter.GetY()*lvsPlayAreaRatio + yToCen <= balls[i].y*lvsPlayAreaRatio + yToCen + 11*lvsPlayAreaRatio)
					return true;
			}
		}
		return false;
	}
	
	private void AddToBallMatter (int i,boolean ballsMatter[][]) {
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [0+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [0+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [0+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [0+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [0+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [1+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [2+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[10+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[0+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [3+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[10+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[0+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [4+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[10+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[0+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [5+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[10+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[0+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [6+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[10+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[0+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [7+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [8+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[9+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[8+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[2+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[1+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [9+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[7+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [10+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[6+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [10+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[5+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [10+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[4+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [10+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
		ballsMatter[3+(int)((balls[i].y - yToCen)/lvsPlayAreaRatio)] [10+(int)((balls[i].x - xToCen)/lvsPlayAreaRatio)] = true;
	}
	
	private void DrawBalls (){
		canonBall = AssetLoader.canonBall;
		if(bgNum == 2)
			canonBall = AssetLoader.canonBallWhite;
		drawToScreen.begin();
		for(int i=0;i<balls.length;i++){
			if(balls[i] != null){
				if(difLvls.chosen != 1)
					drawToScreen.draw(canonBall, (int)balls[i].x, (int)balls[i].y, (int)(11*lvsPlayAreaRatio), 
							(int)(11*lvsPlayAreaRatio));
				else if(difLvls.chosen == 1 && (balls[i].x - xToCen)/lvsPlayAreaRatio == 306)
					drawToScreen.draw(canonBall, (int)balls[i].x, (int)balls[i].y, (int)(11*lvsPlayAreaRatio), 
							(int)(11*lvsPlayAreaRatio));
			}
			
		}
		drawToScreen.end();
	}
	
	private void DrawLevel (){
		drawToScreen.begin();
		drawToScreen.draw(AssetLoader.level3, (int)xToCen, (int)yToCen, (int)(PLAY_AR_WID*lvsPlayAreaRatio), 
				(int)(PLAY_AR_HEI*lvsPlayAreaRatio), 0, 0, PLAY_AR_WID, PLAY_AR_HEI, false, false);
		drawToScreen.end();
	}
	
	private void DrawTarget (){
		drawToScreen.begin();
		if(lvsPlayAreaRatio < 0.9f)
		drawToScreen.draw(AssetLoader.targetSmall, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
				(int)(28*lvsPlayAreaRatio/0.8), (int)(28*lvsPlayAreaRatio/0.8),0,0,28,28,false,false);
		else
			drawToScreen.draw(AssetLoader.target, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
					(int)(35*lvsPlayAreaRatio), (int)(35*lvsPlayAreaRatio),0,0,35,35,false,false);//35 = texture width and height
		if(difLvls.chosen == 1){
			if(lvsPlayAreaRatio < 0.9f)
				drawToScreen.draw(AssetLoader.targetSmallDif1, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
						(int)(28*lvsPlayAreaRatio/0.8), (int)(28*lvsPlayAreaRatio/0.8),0,0,28,28,false,false);
				else
					drawToScreen.draw(AssetLoader.targetDif1, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
							(int)(35*lvsPlayAreaRatio), (int)(35*lvsPlayAreaRatio),0,0,35,35,false,false);//35 = texture width and height
		}
		drawToScreen.end();
	}
	
	private void SetCenterCoords (){
		if(zeroAtY){
			 yToCen = phoneHeight*(float)0.025;
			 xToCen = phoneWidth / 2 - PLAY_AR_WID * lvsPlayAreaRatio / 2;
			 
		}
		else{
			 xToCen = phoneWidth*(float)0.025;
			 yToCen = phoneHeight / 2 - PLAY_AR_HEI * lvsPlayAreaRatio / 2;
		}
	}
	 private void Add1() {
		 borderLine[134] [0] = true;
		 borderLine[133] [0] = true;
		 borderLine[132] [0] = true;
		 borderLine[131] [0] = true;
		 borderLine[130] [0] = true;
		 borderLine[129] [0] = true;
		 borderLine[128] [0] = true;
		 borderLine[127] [0] = true;
		 borderLine[126] [0] = true;
		 borderLine[125] [0] = true;
		 borderLine[124] [0] = true;
		 borderLine[123] [0] = true;
		 borderLine[122] [0] = true;
		 borderLine[121] [0] = true;
		 borderLine[120] [0] = true;
		 borderLine[119] [0] = true;
		 borderLine[118] [0] = true;
		 borderLine[117] [0] = true;
		 borderLine[116] [0] = true;
		 borderLine[115] [0] = true;
		 borderLine[114] [0] = true;
		 borderLine[113] [0] = true;
		 borderLine[112] [0] = true;
		 borderLine[111] [0] = true;
		 borderLine[110] [0] = true;
		 borderLine[109] [0] = true;
		 borderLine[108] [0] = true;
		 borderLine[107] [0] = true;
		 borderLine[106] [0] = true;
		 borderLine[105] [0] = true;
		 borderLine[104] [0] = true;
		 borderLine[103] [0] = true;
		 borderLine[102] [0] = true;
		 borderLine[101] [0] = true;
		 borderLine[100] [0] = true;
		 borderLine[99] [0] = true;
		 borderLine[98] [0] = true;
		 borderLine[97] [0] = true;
		 borderLine[96] [0] = true;
		 borderLine[95] [0] = true;
		 borderLine[94] [0] = true;
		 borderLine[93] [0] = true;
		 borderLine[92] [0] = true;
		 borderLine[91] [0] = true;
		 borderLine[90] [0] = true;
		 borderLine[89] [0] = true;
		 borderLine[88] [0] = true;
		 borderLine[87] [0] = true;
		 borderLine[86] [0] = true;
		 borderLine[85] [0] = true;
		 borderLine[84] [0] = true;
		 borderLine[83] [0] = true;
		 borderLine[82] [0] = true;
		 borderLine[81] [0] = true;
		 borderLine[80] [0] = true;
		 borderLine[79] [0] = true;
		 borderLine[78] [0] = true;
		 borderLine[77] [0] = true;
		 borderLine[76] [0] = true;
		 borderLine[75] [0] = true;
		 borderLine[74] [0] = true;
		 borderLine[73] [0] = true;
		 borderLine[72] [0] = true;
		 borderLine[71] [0] = true;
		 borderLine[70] [0] = true;
		 borderLine[69] [0] = true;
		 borderLine[68] [0] = true;
		 borderLine[67] [0] = true;
		 borderLine[66] [0] = true;
		 borderLine[65] [0] = true;
		 borderLine[64] [0] = true;
		 borderLine[63] [0] = true;
		 borderLine[62] [0] = true;
		 borderLine[61] [0] = true;
		 borderLine[60] [0] = true;
		 borderLine[59] [0] = true;
		 borderLine[58] [0] = true;
		 borderLine[57] [0] = true;
		 borderLine[56] [0] = true;
		 borderLine[55] [0] = true;
		 borderLine[54] [0] = true;
		 borderLine[53] [0] = true;
		 borderLine[52] [0] = true;
		 borderLine[51] [0] = true;
		 borderLine[50] [0] = true;
		 borderLine[49] [0] = true;
		 borderLine[48] [0] = true;
		 borderLine[47] [0] = true;
		 borderLine[46] [0] = true;
		 borderLine[45] [0] = true;
		 borderLine[44] [0] = true;
		 borderLine[43] [0] = true;
		 borderLine[42] [0] = true;
		 borderLine[41] [0] = true;
		 borderLine[40] [0] = true;
		 borderLine[39] [0] = true;
		 borderLine[38] [0] = true;
		 borderLine[37] [0] = true;
		 borderLine[36] [0] = true;
		 borderLine[35] [0] = true;
		 borderLine[34] [0] = true;
		 borderLine[33] [0] = true;
		 borderLine[32] [0] = true;
		 borderLine[31] [0] = true;
		 borderLine[30] [0] = true;
		 borderLine[29] [0] = true;
		 borderLine[28] [0] = true;
		 borderLine[27] [0] = true;
		 borderLine[26] [0] = true;
		 borderLine[25] [0] = true;
		 borderLine[24] [0] = true;
		 borderLine[23] [0] = true;
		 borderLine[22] [0] = true;
		 borderLine[21] [0] = true;
		 borderLine[20] [0] = true;
		 borderLine[19] [0] = true;
		 borderLine[18] [0] = true;
		 borderLine[17] [0] = true;
		 borderLine[16] [0] = true;
		 borderLine[15] [0] = true;
		 borderLine[14] [0] = true;
		 borderLine[13] [0] = true;
		 borderLine[12] [0] = true;
		 borderLine[11] [0] = true;
		 borderLine[10] [0] = true;
		 borderLine[9] [0] = true;
		 borderLine[8] [0] = true;
		 borderLine[7] [0] = true;
		 borderLine[6] [0] = true;
		 borderLine[5] [0] = true;
		 borderLine[4] [0] = true;
		 borderLine[3] [0] = true;
		 borderLine[2] [0] = true;
		 borderLine[1] [0] = true;
		 borderLine[0] [0] = true;
		 borderLine[135] [1] = true;
		 borderLine[0] [1] = true;
		 borderLine[135] [2] = true;
		 borderLine[0] [2] = true;
		 borderLine[135] [3] = true;
		 borderLine[0] [3] = true;
		 borderLine[135] [4] = true;
		 borderLine[0] [4] = true;
		 borderLine[135] [5] = true;
		 borderLine[0] [5] = true;
		 borderLine[135] [6] = true;
		 borderLine[0] [6] = true;
		 borderLine[135] [7] = true;
		 borderLine[0] [7] = true;
		 borderLine[135] [8] = true;
		 borderLine[0] [8] = true;
		 borderLine[135] [9] = true;
		 borderLine[0] [9] = true;
		 borderLine[135] [10] = true;
		 borderLine[0] [10] = true;
		 borderLine[135] [11] = true;
		 borderLine[0] [11] = true;
		 borderLine[135] [12] = true;
		 borderLine[0] [12] = true;
		 borderLine[135] [13] = true;
		 borderLine[0] [13] = true;
		 borderLine[135] [14] = true;
		 borderLine[0] [14] = true;
		 borderLine[135] [15] = true;
		 borderLine[0] [15] = true;
		 borderLine[135] [16] = true;
		 borderLine[0] [16] = true;
		 borderLine[135] [17] = true;
		 borderLine[0] [17] = true;
		 borderLine[135] [18] = true;
		 borderLine[0] [18] = true;
		 borderLine[135] [19] = true;
		 borderLine[0] [19] = true;
		 borderLine[135] [20] = true;
		 borderLine[0] [20] = true;
		 borderLine[135] [21] = true;
		 borderLine[0] [21] = true;
		 borderLine[135] [22] = true;
		 borderLine[0] [22] = true;
		 borderLine[135] [23] = true;
		 borderLine[0] [23] = true;
		 borderLine[135] [24] = true;
		 borderLine[0] [24] = true;
		 borderLine[135] [25] = true;
		 borderLine[0] [25] = true;
		 borderLine[135] [26] = true;
		 borderLine[0] [26] = true;
		 borderLine[135] [27] = true;
		 borderLine[0] [27] = true;
		 borderLine[135] [28] = true;
		 borderLine[0] [28] = true;
		 borderLine[135] [29] = true;
		 borderLine[0] [29] = true;
		 borderLine[135] [30] = true;
		 borderLine[0] [30] = true;
		 borderLine[135] [31] = true;
		 borderLine[0] [31] = true;
		 borderLine[135] [32] = true;
		 borderLine[0] [32] = true;
		 borderLine[135] [33] = true;
		 borderLine[0] [33] = true;
		 borderLine[135] [34] = true;
		 borderLine[0] [34] = true;
		 borderLine[135] [35] = true;
		 borderLine[0] [35] = true;
		 borderLine[135] [36] = true;
		 borderLine[0] [36] = true;
		 borderLine[135] [37] = true;
		 borderLine[0] [37] = true;
		 borderLine[135] [38] = true;
		 borderLine[0] [38] = true;
		 borderLine[135] [39] = true;
		 borderLine[0] [39] = true;
		 borderLine[135] [40] = true;
		 borderLine[0] [40] = true;
		 borderLine[135] [41] = true;
		 borderLine[0] [41] = true;
		 borderLine[135] [42] = true;
		 borderLine[0] [42] = true;
		 borderLine[135] [43] = true;
		 borderLine[0] [43] = true;
		 borderLine[135] [44] = true;
		 borderLine[0] [44] = true;
		 borderLine[135] [45] = true;
		 borderLine[0] [45] = true;
		 borderLine[135] [46] = true;
		 borderLine[0] [46] = true;
		 borderLine[135] [47] = true;
		 borderLine[0] [47] = true;
		 borderLine[135] [48] = true;
		 borderLine[0] [48] = true;
		 borderLine[135] [49] = true;
		 borderLine[0] [49] = true;
		 borderLine[135] [50] = true;
		 borderLine[0] [50] = true;
		 borderLine[135] [51] = true;
		 borderLine[0] [51] = true;
		 borderLine[135] [52] = true;
		 borderLine[0] [52] = true;
		 borderLine[135] [53] = true;
		 borderLine[0] [53] = true;
		 borderLine[135] [54] = true;
		 borderLine[0] [54] = true;
		 borderLine[135] [55] = true;
		 borderLine[0] [55] = true;
		 borderLine[135] [56] = true;
		 borderLine[0] [56] = true;
		 borderLine[135] [57] = true;
		 borderLine[0] [57] = true;
		 borderLine[135] [58] = true;
		 borderLine[0] [58] = true;
		 borderLine[135] [59] = true;
		 borderLine[0] [59] = true;
		 borderLine[135] [60] = true;
		 borderLine[0] [60] = true;
		 borderLine[135] [61] = true;
		 borderLine[0] [61] = true;
		 borderLine[135] [62] = true;
		 borderLine[0] [62] = true;
		 borderLine[135] [63] = true;
		 borderLine[0] [63] = true;
		 borderLine[135] [64] = true;
		 borderLine[0] [64] = true;
		 borderLine[135] [65] = true;
		 borderLine[0] [65] = true;
		 borderLine[135] [66] = true;
		 borderLine[0] [66] = true;
		 borderLine[135] [67] = true;
		 borderLine[0] [67] = true;
		 borderLine[135] [68] = true;
		 borderLine[0] [68] = true;
		 borderLine[135] [69] = true;
		 borderLine[0] [69] = true;
		 borderLine[135] [70] = true;
		 borderLine[0] [70] = true;
		 borderLine[135] [71] = true;
		 borderLine[0] [71] = true;
		 borderLine[135] [72] = true;
		 borderLine[0] [72] = true;
		 borderLine[135] [73] = true;
		 borderLine[0] [73] = true;
		 borderLine[135] [74] = true;
		 borderLine[0] [74] = true;
		 borderLine[135] [75] = true;
		 borderLine[0] [75] = true;
		 borderLine[135] [76] = true;
		 borderLine[0] [76] = true;
		 borderLine[135] [77] = true;
		 borderLine[0] [77] = true;
		 borderLine[135] [78] = true;
		 borderLine[0] [78] = true;
		 borderLine[135] [79] = true;
		 borderLine[0] [79] = true;
		 borderLine[135] [80] = true;
		 borderLine[0] [80] = true;
		 borderLine[135] [81] = true;
		 borderLine[0] [81] = true;
		 borderLine[135] [82] = true;
		 borderLine[0] [82] = true;
		 borderLine[135] [83] = true;
		 borderLine[0] [83] = true;
		 borderLine[135] [84] = true;
		 borderLine[0] [84] = true;
		 borderLine[135] [85] = true;
		 borderLine[0] [85] = true;
		 borderLine[135] [86] = true;
		 borderLine[0] [86] = true;
		 borderLine[135] [87] = true;
		 borderLine[0] [87] = true;
		 borderLine[135] [88] = true;
		 borderLine[0] [88] = true;
		 borderLine[135] [89] = true;
		 borderLine[0] [89] = true;
		 borderLine[135] [90] = true;
		 borderLine[0] [90] = true;
		 borderLine[135] [91] = true;
		 borderLine[0] [91] = true;
		 borderLine[135] [92] = true;
		 borderLine[0] [92] = true;
		 borderLine[135] [93] = true;
		 borderLine[0] [93] = true;
		 borderLine[135] [94] = true;
		 borderLine[0] [94] = true;
		 borderLine[135] [95] = true;
		 borderLine[0] [95] = true;
		 borderLine[135] [96] = true;
		 borderLine[0] [96] = true;
		 borderLine[135] [97] = true;
		 borderLine[0] [97] = true;
		 borderLine[135] [98] = true;
		 borderLine[0] [98] = true;
		 borderLine[135] [99] = true;
		 borderLine[0] [99] = true;
		 borderLine[135] [100] = true;
		 borderLine[0] [100] = true;
		 borderLine[135] [101] = true;
		 borderLine[0] [101] = true;
		 borderLine[135] [102] = true;
		 borderLine[0] [102] = true;
		 borderLine[135] [103] = true;
		 borderLine[0] [103] = true;
		 borderLine[135] [104] = true;
		 borderLine[0] [104] = true;
		 borderLine[135] [105] = true;
		 borderLine[0] [105] = true;
		 borderLine[135] [106] = true;
		 borderLine[0] [106] = true;
		 borderLine[135] [107] = true;
		 borderLine[0] [107] = true;
		 borderLine[135] [108] = true;
		 borderLine[0] [108] = true;
		 borderLine[135] [109] = true;
		 borderLine[0] [109] = true;
		 borderLine[135] [110] = true;
		 borderLine[0] [110] = true;
		 borderLine[135] [111] = true;
		 borderLine[0] [111] = true;
		 borderLine[135] [112] = true;
		 borderLine[0] [112] = true;
		 borderLine[135] [113] = true;
		 borderLine[0] [113] = true;
		 borderLine[135] [114] = true;
		 borderLine[0] [114] = true;
		 borderLine[135] [115] = true;
		 borderLine[0] [115] = true;
		 borderLine[135] [116] = true;
		 borderLine[0] [116] = true;
		 borderLine[135] [117] = true;
		 borderLine[0] [117] = true;
		 borderLine[135] [118] = true;
		 borderLine[0] [118] = true;
		 borderLine[135] [119] = true;
		 borderLine[0] [119] = true;
		 borderLine[135] [120] = true;
		 borderLine[0] [120] = true;
		 borderLine[135] [121] = true;
		 borderLine[0] [121] = true;
		 borderLine[135] [122] = true;
		 borderLine[0] [122] = true;
		 borderLine[135] [123] = true;
		 borderLine[0] [123] = true;
		 borderLine[135] [124] = true;
		 borderLine[0] [124] = true;
		 borderLine[135] [125] = true;
		 borderLine[0] [125] = true;
		 borderLine[135] [126] = true;
		 borderLine[0] [126] = true;
		 borderLine[135] [127] = true;
		 borderLine[0] [127] = true;
		 borderLine[135] [128] = true;
		 borderLine[0] [128] = true;
		 borderLine[135] [129] = true;
		 borderLine[0] [129] = true;
		 borderLine[135] [130] = true;
		 borderLine[0] [130] = true;
		 borderLine[135] [131] = true;
		 borderLine[0] [131] = true;
		 borderLine[135] [132] = true;
		 borderLine[0] [132] = true;
		 borderLine[135] [133] = true;
		 borderLine[0] [133] = true;
		 borderLine[135] [134] = true;
		 borderLine[0] [134] = true;
		 borderLine[135] [135] = true;
		 borderLine[0] [135] = true;
		 borderLine[135] [136] = true;
		 borderLine[0] [136] = true;
		 borderLine[135] [137] = true;
		 borderLine[0] [137] = true;
		 borderLine[135] [138] = true;
		 borderLine[0] [138] = true;
		 borderLine[135] [139] = true;
		 borderLine[0] [139] = true;
		 borderLine[135] [140] = true;
		 borderLine[0] [140] = true;
		 borderLine[135] [141] = true;
		 borderLine[0] [141] = true;
		 borderLine[135] [142] = true;
		 borderLine[0] [142] = true;
		 borderLine[135] [143] = true;
		 borderLine[0] [143] = true;
		 borderLine[135] [144] = true;
		 borderLine[0] [144] = true;
		 borderLine[135] [145] = true;
		 borderLine[0] [145] = true;
		 borderLine[135] [146] = true;
		 borderLine[0] [146] = true;
		 borderLine[135] [147] = true;
		 borderLine[0] [147] = true;
		 borderLine[135] [148] = true;
		 borderLine[0] [148] = true;
		 borderLine[135] [149] = true;
		 borderLine[0] [149] = true;
		 borderLine[135] [150] = true;
		 borderLine[0] [150] = true;
		 borderLine[135] [151] = true;
		 borderLine[0] [151] = true;
		 borderLine[135] [152] = true;
		 borderLine[0] [152] = true;
		 borderLine[135] [153] = true;
		 borderLine[0] [153] = true;
		 borderLine[135] [154] = true;
		 borderLine[0] [154] = true;
		 borderLine[135] [155] = true;
		 borderLine[0] [155] = true;
		 borderLine[135] [156] = true;
		 borderLine[0] [156] = true;
		 borderLine[135] [157] = true;
		 borderLine[0] [157] = true;
		 borderLine[135] [158] = true;
		 borderLine[0] [158] = true;
		 borderLine[135] [159] = true;
		 borderLine[0] [159] = true;
		 borderLine[135] [160] = true;
		 borderLine[0] [160] = true;
		 borderLine[135] [161] = true;
		 borderLine[0] [161] = true;
		 borderLine[135] [162] = true;
		 borderLine[0] [162] = true;
		 borderLine[135] [163] = true;
		 borderLine[0] [163] = true;
		 borderLine[135] [164] = true;
		 borderLine[0] [164] = true;
		 borderLine[135] [165] = true;
		 borderLine[0] [165] = true;
		 borderLine[135] [166] = true;
		 borderLine[0] [166] = true;
		 borderLine[135] [167] = true;
		 borderLine[0] [167] = true;
		 borderLine[135] [168] = true;
		 borderLine[0] [168] = true;
		 borderLine[135] [169] = true;
		 borderLine[0] [169] = true;
		 borderLine[135] [170] = true;
		 borderLine[0] [170] = true;
		 borderLine[135] [171] = true;
		 borderLine[0] [171] = true;
		 borderLine[135] [172] = true;
		 borderLine[0] [172] = true;
		 borderLine[135] [173] = true;
		 borderLine[0] [173] = true;
		 borderLine[135] [174] = true;
		 borderLine[0] [174] = true;
		 borderLine[135] [175] = true;
		 borderLine[0] [175] = true;
		 borderLine[135] [176] = true;
		 borderLine[0] [176] = true;
		 borderLine[135] [177] = true;
		 borderLine[0] [177] = true;
		 borderLine[135] [178] = true;
		 borderLine[0] [178] = true;
		 borderLine[135] [179] = true;
		 borderLine[0] [179] = true;
		 borderLine[135] [180] = true;
		 borderLine[0] [180] = true;
		 borderLine[135] [181] = true;
		 borderLine[0] [181] = true;
		 borderLine[135] [182] = true;
		 borderLine[0] [182] = true;
		 borderLine[135] [183] = true;
		 borderLine[0] [183] = true;
		 borderLine[135] [184] = true;
		 borderLine[0] [184] = true;
		 borderLine[135] [185] = true;
		 borderLine[0] [185] = true;
		 borderLine[135] [186] = true;
		 borderLine[0] [186] = true;
		 borderLine[135] [187] = true;
		 borderLine[0] [187] = true;
		 borderLine[135] [188] = true;
		 borderLine[0] [188] = true;
		 borderLine[135] [189] = true;
		 borderLine[0] [189] = true;
		 borderLine[135] [190] = true;
		 borderLine[0] [190] = true;
		 borderLine[135] [191] = true;
		 borderLine[0] [191] = true;
		 borderLine[135] [192] = true;
		 borderLine[0] [192] = true;
		 borderLine[135] [193] = true;
		 borderLine[0] [193] = true;
		 borderLine[135] [194] = true;
		 borderLine[0] [194] = true;
		 borderLine[135] [195] = true;
		 borderLine[0] [195] = true;
		 borderLine[135] [196] = true;
		 borderLine[0] [196] = true;
		 borderLine[135] [197] = true;
		 borderLine[0] [197] = true;
		 borderLine[135] [198] = true;
		 borderLine[0] [198] = true;
		 borderLine[135] [199] = true;
		 borderLine[0] [199] = true;
		 borderLine[135] [200] = true;
		 borderLine[0] [200] = true;
		 borderLine[135] [201] = true;
		 borderLine[0] [201] = true;
		 borderLine[135] [202] = true;
		 borderLine[0] [202] = true;
		 borderLine[135] [203] = true;
		 borderLine[0] [203] = true;
		 borderLine[135] [204] = true;
		 borderLine[0] [204] = true;
		 borderLine[135] [205] = true;
		 borderLine[0] [205] = true;
		 borderLine[135] [206] = true;
		 borderLine[0] [206] = true;
		 borderLine[135] [207] = true;
		 borderLine[0] [207] = true;
		 borderLine[135] [208] = true;
		 borderLine[0] [208] = true;
		 borderLine[135] [209] = true;
		 borderLine[0] [209] = true;
		 borderLine[135] [210] = true;
		 borderLine[0] [210] = true;
		 borderLine[135] [211] = true;
		 borderLine[0] [211] = true;
		 borderLine[135] [212] = true;
		 borderLine[0] [212] = true;
		 borderLine[135] [213] = true;
		 borderLine[0] [213] = true;
		 borderLine[135] [214] = true;
		 borderLine[0] [214] = true;
		 borderLine[135] [215] = true;
		 borderLine[0] [215] = true;
		 borderLine[135] [216] = true;
		 borderLine[0] [216] = true;
		 borderLine[135] [217] = true;
		 borderLine[0] [217] = true;
		 borderLine[135] [218] = true;
		 borderLine[0] [218] = true;
		 borderLine[135] [219] = true;
		 borderLine[0] [219] = true;
		 borderLine[135] [220] = true;
		 borderLine[0] [220] = true;
		 borderLine[135] [221] = true;
		 borderLine[0] [221] = true;
		 borderLine[135] [222] = true;
		 borderLine[0] [222] = true;
		 borderLine[135] [223] = true;
		 borderLine[0] [223] = true;
		 borderLine[135] [224] = true;
		 borderLine[0] [224] = true;
		 borderLine[135] [225] = true;
		 borderLine[0] [225] = true;
		 borderLine[135] [226] = true;
		 borderLine[0] [226] = true;
		 borderLine[135] [227] = true;
		 borderLine[0] [227] = true;
		 borderLine[135] [228] = true;
		 borderLine[0] [228] = true;
		 borderLine[135] [229] = true;
		 borderLine[0] [229] = true;
		 borderLine[135] [230] = true;
		 borderLine[0] [230] = true;
		 borderLine[135] [231] = true;
		 borderLine[0] [231] = true;
		 borderLine[135] [232] = true;
		 borderLine[0] [232] = true;
		 borderLine[135] [233] = true;
		 borderLine[0] [233] = true;
		 borderLine[135] [234] = true;
		 borderLine[0] [234] = true;
		 borderLine[135] [235] = true;
		 borderLine[0] [235] = true;
		 borderLine[135] [236] = true;
		 borderLine[0] [236] = true;
		 borderLine[135] [237] = true;
		 borderLine[0] [237] = true;
		 borderLine[135] [238] = true;
		 borderLine[0] [238] = true;
		 borderLine[135] [239] = true;
		 borderLine[0] [239] = true;
		 borderLine[135] [240] = true;
		 borderLine[0] [240] = true;
		 borderLine[135] [241] = true;
		 borderLine[0] [241] = true;
		 borderLine[135] [242] = true;
		 borderLine[0] [242] = true;
		 borderLine[135] [243] = true;
		 borderLine[0] [243] = true;
		 borderLine[135] [244] = true;
		 borderLine[0] [244] = true;
		 borderLine[135] [245] = true;
		 borderLine[0] [245] = true;
		 borderLine[135] [246] = true;
		 borderLine[0] [246] = true;
		 borderLine[135] [247] = true;
		 borderLine[0] [247] = true;
		 borderLine[135] [248] = true;
		 borderLine[0] [248] = true;
		 borderLine[135] [249] = true;
		 borderLine[0] [249] = true;
		 borderLine[135] [250] = true;
		 borderLine[0] [250] = true;
		 borderLine[135] [251] = true;
		 borderLine[0] [251] = true;
		 borderLine[135] [252] = true;
		 borderLine[0] [252] = true;
		 borderLine[135] [253] = true;
		 borderLine[0] [253] = true;
		 borderLine[135] [254] = true;
		 borderLine[0] [254] = true;
		 borderLine[135] [255] = true;
		 borderLine[0] [255] = true;
		 borderLine[135] [256] = true;
		 borderLine[0] [256] = true;
		 borderLine[135] [257] = true;
		 borderLine[0] [257] = true;
		 borderLine[135] [258] = true;
		 borderLine[0] [258] = true;
		 borderLine[135] [259] = true;
		 borderLine[0] [259] = true;
		 borderLine[135] [260] = true;
		 borderLine[0] [260] = true;
		 borderLine[135] [261] = true;
		 borderLine[0] [261] = true;
		 borderLine[135] [262] = true;
		 borderLine[0] [262] = true;
		 borderLine[135] [263] = true;
		 borderLine[0] [263] = true;
		 borderLine[135] [264] = true;
		 borderLine[0] [264] = true;
		 borderLine[135] [265] = true;
		 borderLine[0] [265] = true;
		 borderLine[135] [266] = true;
		 borderLine[0] [266] = true;
		 borderLine[135] [267] = true;
		 borderLine[0] [267] = true;
		 borderLine[135] [268] = true;
		 borderLine[0] [268] = true;
		 borderLine[135] [269] = true;
		 borderLine[0] [269] = true;
		 borderLine[135] [270] = true;
		 borderLine[0] [270] = true;
		 borderLine[135] [271] = true;
		 borderLine[0] [271] = true;
		 borderLine[135] [272] = true;
		 borderLine[0] [272] = true;
		 borderLine[135] [273] = true;
		 borderLine[0] [273] = true;
		 borderLine[135] [274] = true;
		 borderLine[0] [274] = true;
		 borderLine[135] [275] = true;
		 borderLine[0] [275] = true;
		 borderLine[135] [276] = true;
		 borderLine[0] [276] = true;
		 borderLine[135] [277] = true;
		 borderLine[0] [277] = true;
		 borderLine[135] [278] = true;
		 borderLine[0] [278] = true;
		 borderLine[529] [279] = true;
		 borderLine[527] [279] = true;
		 borderLine[526] [279] = true;
		 borderLine[525] [279] = true;
		 borderLine[524] [279] = true;
		 borderLine[523] [279] = true;
		 borderLine[522] [279] = true;
		 borderLine[521] [279] = true;
		 borderLine[520] [279] = true;
		 borderLine[519] [279] = true;
		 borderLine[518] [279] = true;
		 borderLine[517] [279] = true;
		 borderLine[516] [279] = true;
		 borderLine[515] [279] = true;
		 borderLine[514] [279] = true;
		 borderLine[513] [279] = true;
		 borderLine[512] [279] = true;
		 borderLine[511] [279] = true;
		 borderLine[510] [279] = true;
		 borderLine[509] [279] = true;
		 borderLine[508] [279] = true;
		 borderLine[507] [279] = true;
		 borderLine[506] [279] = true;
		 borderLine[505] [279] = true;
		 borderLine[504] [279] = true;
		 borderLine[503] [279] = true;
		 borderLine[502] [279] = true;
		 borderLine[501] [279] = true;
		 borderLine[500] [279] = true;
		 borderLine[499] [279] = true;
		 borderLine[498] [279] = true;
		 borderLine[497] [279] = true;
		 borderLine[496] [279] = true;
		 borderLine[495] [279] = true;
		 borderLine[494] [279] = true;
		 borderLine[493] [279] = true;
		 borderLine[492] [279] = true;
		 borderLine[491] [279] = true;
		 borderLine[490] [279] = true;
		 borderLine[489] [279] = true;
		 borderLine[488] [279] = true;
		 borderLine[487] [279] = true;
		 borderLine[486] [279] = true;
		 borderLine[485] [279] = true;
		 borderLine[484] [279] = true;
		 borderLine[483] [279] = true;
		 borderLine[482] [279] = true;
		 borderLine[481] [279] = true;
		 borderLine[480] [279] = true;
		 borderLine[479] [279] = true;
		 borderLine[478] [279] = true;
		 borderLine[477] [279] = true;
		 borderLine[476] [279] = true;
		 borderLine[475] [279] = true;
		 borderLine[474] [279] = true;
		 borderLine[473] [279] = true;
		 borderLine[472] [279] = true;
		 borderLine[471] [279] = true;
		 borderLine[470] [279] = true;
		 borderLine[469] [279] = true;
		 borderLine[468] [279] = true;
		 borderLine[467] [279] = true;
		 borderLine[466] [279] = true;
		 borderLine[465] [279] = true;
		 borderLine[464] [279] = true;
		 borderLine[463] [279] = true;
		 borderLine[462] [279] = true;
		 borderLine[461] [279] = true;
		 borderLine[460] [279] = true;
		 borderLine[459] [279] = true;
		 borderLine[458] [279] = true;
		 borderLine[457] [279] = true;
		 borderLine[456] [279] = true;
		 borderLine[455] [279] = true;
		 borderLine[454] [279] = true;
		 borderLine[453] [279] = true;
		 borderLine[452] [279] = true;
		 borderLine[451] [279] = true;
		 borderLine[450] [279] = true;
		 borderLine[449] [279] = true;
		 borderLine[448] [279] = true;
		 borderLine[447] [279] = true;
		 borderLine[446] [279] = true;
		 borderLine[445] [279] = true;
		 borderLine[444] [279] = true;
		 borderLine[443] [279] = true;
		 borderLine[442] [279] = true;
		 borderLine[441] [279] = true;
		 borderLine[440] [279] = true;
		 borderLine[439] [279] = true;
		 borderLine[438] [279] = true;
		 borderLine[437] [279] = true;
		 borderLine[436] [279] = true;
		 borderLine[435] [279] = true;
		 borderLine[434] [279] = true;
		 borderLine[433] [279] = true;
		 borderLine[432] [279] = true;
		 borderLine[431] [279] = true;
		 borderLine[430] [279] = true;
		 borderLine[429] [279] = true;
		 borderLine[428] [279] = true;
		 borderLine[427] [279] = true;
		 borderLine[426] [279] = true;
		 borderLine[425] [279] = true;
		 borderLine[424] [279] = true;
		 borderLine[423] [279] = true;
		 borderLine[422] [279] = true;
		 borderLine[421] [279] = true;
		 borderLine[420] [279] = true;
		 borderLine[419] [279] = true;
		 borderLine[418] [279] = true;
		 borderLine[417] [279] = true;
		 borderLine[416] [279] = true;
		 borderLine[415] [279] = true;
		 borderLine[414] [279] = true;
		 borderLine[413] [279] = true;
		 borderLine[412] [279] = true;
		 borderLine[411] [279] = true;
		 borderLine[410] [279] = true;
		 borderLine[409] [279] = true;
		 borderLine[408] [279] = true;
		 borderLine[407] [279] = true;
		 borderLine[406] [279] = true;
		 borderLine[405] [279] = true;
		 borderLine[404] [279] = true;
		 borderLine[403] [279] = true;
		 borderLine[402] [279] = true;
		 borderLine[401] [279] = true;
		 borderLine[400] [279] = true;
		 borderLine[399] [279] = true;
		 borderLine[398] [279] = true;
		 borderLine[397] [279] = true;
		 borderLine[396] [279] = true;
		 borderLine[395] [279] = true;
		 borderLine[394] [279] = true;
		 borderLine[393] [279] = true;
		 borderLine[392] [279] = true;
		 borderLine[391] [279] = true;
		 borderLine[390] [279] = true;
		 borderLine[389] [279] = true;
		 borderLine[388] [279] = true;
		 borderLine[387] [279] = true;
		 borderLine[386] [279] = true;
		 borderLine[385] [279] = true;
		 borderLine[384] [279] = true;
		 borderLine[383] [279] = true;
		 borderLine[382] [279] = true;
		 borderLine[381] [279] = true;
		 borderLine[380] [279] = true;
		 borderLine[379] [279] = true;
		 borderLine[378] [279] = true;
		 borderLine[377] [279] = true;
		 borderLine[376] [279] = true;
		 borderLine[375] [279] = true;
		 borderLine[374] [279] = true;
		 borderLine[373] [279] = true;
		 borderLine[372] [279] = true;
		 borderLine[371] [279] = true;
		 borderLine[370] [279] = true;
		 borderLine[369] [279] = true;
		 borderLine[368] [279] = true;
		 borderLine[367] [279] = true;
		 borderLine[366] [279] = true;
		 borderLine[365] [279] = true;
		 borderLine[364] [279] = true;
		 borderLine[363] [279] = true;
		 borderLine[362] [279] = true;
		 borderLine[361] [279] = true;
		 borderLine[360] [279] = true;
		 borderLine[359] [279] = true;
		 borderLine[358] [279] = true;
		 borderLine[357] [279] = true;
		 borderLine[356] [279] = true;
		 borderLine[355] [279] = true;
		 borderLine[354] [279] = true;
		 borderLine[353] [279] = true;
		 borderLine[352] [279] = true;
		 borderLine[351] [279] = true;
		 borderLine[350] [279] = true;
		 borderLine[349] [279] = true;
		 borderLine[348] [279] = true;
		 borderLine[347] [279] = true;
		 borderLine[346] [279] = true;
		 borderLine[345] [279] = true;
		 borderLine[344] [279] = true;
		 borderLine[343] [279] = true;
		 borderLine[342] [279] = true;
		 borderLine[341] [279] = true;
		 borderLine[340] [279] = true;
		 borderLine[339] [279] = true;
		 borderLine[338] [279] = true;
		 borderLine[337] [279] = true;
		 borderLine[336] [279] = true;
		 borderLine[335] [279] = true;
		 borderLine[334] [279] = true;
		 borderLine[333] [279] = true;
		 borderLine[332] [279] = true;
		 borderLine[331] [279] = true;
		 borderLine[330] [279] = true;
		 borderLine[329] [279] = true;
		 borderLine[328] [279] = true;
		 borderLine[327] [279] = true;
		 borderLine[326] [279] = true;
		 borderLine[325] [279] = true;
		 borderLine[324] [279] = true;
		 borderLine[323] [279] = true;
		 borderLine[322] [279] = true;
		 borderLine[321] [279] = true;
		 borderLine[320] [279] = true;
		 borderLine[319] [279] = true;
		 borderLine[318] [279] = true;
		 borderLine[317] [279] = true;
		 borderLine[316] [279] = true;
		 borderLine[315] [279] = true;
		 borderLine[314] [279] = true;
		 borderLine[313] [279] = true;
		 borderLine[312] [279] = true;
		 borderLine[311] [279] = true;
		 borderLine[310] [279] = true;
		 borderLine[309] [279] = true;
		 borderLine[308] [279] = true;
		 borderLine[307] [279] = true;
		 borderLine[306] [279] = true;
		 borderLine[305] [279] = true;
		 borderLine[304] [279] = true;
		 borderLine[303] [279] = true;
		 borderLine[302] [279] = true;
		 borderLine[301] [279] = true;
		 borderLine[300] [279] = true;
		 borderLine[299] [279] = true;
		 borderLine[298] [279] = true;
		 borderLine[297] [279] = true;
		 borderLine[296] [279] = true;
		 borderLine[295] [279] = true;
		 borderLine[294] [279] = true;
		 borderLine[293] [279] = true;
		 borderLine[292] [279] = true;
		 borderLine[291] [279] = true;
		 borderLine[290] [279] = true;
		 borderLine[289] [279] = true;
		 borderLine[288] [279] = true;
		 borderLine[287] [279] = true;
		 borderLine[286] [279] = true;
		 borderLine[285] [279] = true;
		 borderLine[284] [279] = true;
		 borderLine[283] [279] = true;
		 borderLine[282] [279] = true;
		 borderLine[281] [279] = true;
		 borderLine[280] [279] = true;
		 borderLine[279] [279] = true;
		 borderLine[278] [279] = true;
		 borderLine[277] [279] = true;
		 borderLine[276] [279] = true;
		 borderLine[275] [279] = true;
		 borderLine[274] [279] = true;
		 borderLine[273] [279] = true;
		 borderLine[272] [279] = true;
		 borderLine[271] [279] = true;
		 borderLine[270] [279] = true;
		 borderLine[269] [279] = true;
		 borderLine[268] [279] = true;
		 borderLine[267] [279] = true;
		 borderLine[266] [279] = true;
		 borderLine[265] [279] = true;
		 borderLine[264] [279] = true;
		 borderLine[263] [279] = true;
		 borderLine[262] [279] = true;
		 borderLine[261] [279] = true;
		 borderLine[260] [279] = true;
		 borderLine[259] [279] = true;
		 borderLine[258] [279] = true;
		 borderLine[257] [279] = true;
		 borderLine[256] [279] = true;
		 borderLine[255] [279] = true;
		 borderLine[254] [279] = true;
		 borderLine[253] [279] = true;
		 borderLine[252] [279] = true;
		 borderLine[251] [279] = true;
		 borderLine[250] [279] = true;
		 borderLine[249] [279] = true;
		 borderLine[248] [279] = true;
		 borderLine[247] [279] = true;
		 borderLine[246] [279] = true;
		 borderLine[245] [279] = true;
		 borderLine[244] [279] = true;
		 borderLine[243] [279] = true;
		 borderLine[242] [279] = true;
		 borderLine[241] [279] = true;
		 borderLine[240] [279] = true;
		 borderLine[239] [279] = true;
		 borderLine[238] [279] = true;
		 borderLine[237] [279] = true;
		 borderLine[236] [279] = true;
		 borderLine[235] [279] = true;
		 borderLine[234] [279] = true;
		 borderLine[233] [279] = true;
		 borderLine[232] [279] = true;
		 borderLine[231] [279] = true;
		 borderLine[230] [279] = true;
		 borderLine[229] [279] = true;
		 borderLine[228] [279] = true;
		 borderLine[227] [279] = true;
		 borderLine[226] [279] = true;
		 borderLine[225] [279] = true;
		 borderLine[224] [279] = true;
		 borderLine[223] [279] = true;
		 borderLine[222] [279] = true;
		 borderLine[221] [279] = true;
		 borderLine[220] [279] = true;
		 borderLine[219] [279] = true;
		 borderLine[218] [279] = true;
		 borderLine[217] [279] = true;
		 borderLine[216] [279] = true;
		 borderLine[215] [279] = true;
		 borderLine[214] [279] = true;
		 borderLine[213] [279] = true;
		 borderLine[212] [279] = true;
		 borderLine[211] [279] = true;
		 borderLine[210] [279] = true;
		 borderLine[209] [279] = true;
		 borderLine[208] [279] = true;
		 borderLine[207] [279] = true;
		 borderLine[206] [279] = true;
		 borderLine[205] [279] = true;
		 borderLine[204] [279] = true;
		 borderLine[203] [279] = true;
		 borderLine[202] [279] = true;
		 borderLine[201] [279] = true;
		 borderLine[200] [279] = true;
		 borderLine[199] [279] = true;
		 borderLine[198] [279] = true;
		 borderLine[197] [279] = true;
		 borderLine[196] [279] = true;
		 borderLine[195] [279] = true;
		 borderLine[194] [279] = true;
		 borderLine[193] [279] = true;
		 borderLine[192] [279] = true;
		 borderLine[191] [279] = true;
		 borderLine[190] [279] = true;
		 borderLine[189] [279] = true;
		 borderLine[188] [279] = true;
		 borderLine[187] [279] = true;
		 borderLine[186] [279] = true;
		 borderLine[185] [279] = true;
		 borderLine[184] [279] = true;
		 borderLine[183] [279] = true;
		 borderLine[182] [279] = true;
		 borderLine[181] [279] = true;
		 borderLine[180] [279] = true;
		 borderLine[179] [279] = true;
		 borderLine[178] [279] = true;
		 borderLine[177] [279] = true;
		 borderLine[176] [279] = true;
		 borderLine[175] [279] = true;
		 borderLine[174] [279] = true;
		 borderLine[173] [279] = true;
		 borderLine[172] [279] = true;
		 borderLine[171] [279] = true;
		 borderLine[170] [279] = true;
		 borderLine[169] [279] = true;
		 borderLine[168] [279] = true;
		 borderLine[167] [279] = true;
		 borderLine[166] [279] = true;
		 borderLine[165] [279] = true;
		 borderLine[164] [279] = true;
		 borderLine[163] [279] = true;
		 borderLine[162] [279] = true;
		 borderLine[161] [279] = true;
		 borderLine[160] [279] = true;
		 borderLine[159] [279] = true;
		 borderLine[158] [279] = true;
		 borderLine[157] [279] = true;
		 borderLine[156] [279] = true;
		 borderLine[155] [279] = true;
		 borderLine[154] [279] = true;
		 borderLine[153] [279] = true;
		 borderLine[152] [279] = true;
		 borderLine[151] [279] = true;
		 borderLine[150] [279] = true;
		 borderLine[149] [279] = true;
		 borderLine[148] [279] = true;
		 borderLine[147] [279] = true;
		 borderLine[146] [279] = true;
		 borderLine[145] [279] = true;
		 borderLine[144] [279] = true;
		 borderLine[143] [279] = true;
		 borderLine[142] [279] = true;
		 borderLine[141] [279] = true;
		 borderLine[140] [279] = true;
		 borderLine[139] [279] = true;
		 borderLine[138] [279] = true;
		 borderLine[137] [279] = true;
		 borderLine[136] [279] = true;
		 borderLine[135] [279] = true;
		 borderLine[0] [279] = true;
		 borderLine[529] [280] = true;
		 borderLine[0] [280] = true;
		 borderLine[529] [281] = true;
		 borderLine[0] [281] = true;
		 borderLine[529] [282] = true;
		 borderLine[0] [282] = true;
		 borderLine[529] [283] = true;
		 borderLine[0] [283] = true;
		 borderLine[529] [284] = true;
		 borderLine[0] [284] = true;
		 borderLine[529] [285] = true;
		 borderLine[0] [285] = true;
		 borderLine[529] [286] = true;
		 borderLine[0] [286] = true;
		 borderLine[529] [287] = true;
		 borderLine[0] [287] = true;
		 borderLine[529] [288] = true;
		 borderLine[0] [288] = true;
		 borderLine[529] [289] = true;
		 borderLine[0] [289] = true;
		 borderLine[529] [290] = true;
		 borderLine[0] [290] = true;
		 borderLine[529] [291] = true;
		 borderLine[0] [291] = true;
		 borderLine[529] [292] = true;
		 borderLine[0] [292] = true;
		 borderLine[529] [293] = true;
		 borderLine[0] [293] = true;
		 borderLine[529] [294] = true;
		 borderLine[0] [294] = true;
		 borderLine[529] [295] = true;
		 borderLine[0] [295] = true;
		 borderLine[529] [296] = true;
		 borderLine[0] [296] = true;
		 borderLine[529] [297] = true;
		 borderLine[0] [297] = true;
		 borderLine[529] [298] = true;
		 borderLine[0] [298] = true;
		 borderLine[529] [299] = true;
		 borderLine[0] [299] = true;
		 borderLine[529] [300] = true;
		 borderLine[0] [300] = true;
		 borderLine[529] [301] = true;
		 borderLine[0] [301] = true;
		 borderLine[529] [302] = true;
		 borderLine[0] [302] = true;
		 borderLine[529] [303] = true;
		 borderLine[0] [303] = true;
		 borderLine[529] [304] = true;
		 borderLine[0] [304] = true;
		 borderLine[529] [305] = true;
		 borderLine[0] [305] = true;
		 borderLine[529] [306] = true;
		 borderLine[0] [306] = true;
		 borderLine[529] [307] = true;
		 borderLine[0] [307] = true;
		 borderLine[529] [308] = true;
		 borderLine[0] [308] = true;
		 borderLine[529] [309] = true;
		 borderLine[0] [309] = true;
		 borderLine[529] [310] = true;
		 borderLine[0] [310] = true;
		 borderLine[529] [311] = true;
		 borderLine[0] [311] = true;
		 borderLine[529] [312] = true;
		 borderLine[0] [312] = true;
		 borderLine[529] [313] = true;
		 borderLine[0] [313] = true;
		 borderLine[529] [314] = true;
		 borderLine[0] [314] = true;
		 borderLine[529] [315] = true;
		 borderLine[0] [315] = true;
		 borderLine[529] [316] = true;
		 borderLine[0] [316] = true;
		 borderLine[529] [317] = true;
		 borderLine[0] [317] = true;
		 borderLine[529] [318] = true;
		 borderLine[0] [318] = true;
		 borderLine[529] [319] = true;
		 borderLine[0] [319] = true;
		 borderLine[529] [320] = true;
		 borderLine[0] [320] = true;
		 borderLine[529] [321] = true;
		 borderLine[0] [321] = true;
		 borderLine[529] [322] = true;
		 borderLine[0] [322] = true;
		 borderLine[529] [323] = true;
		 borderLine[0] [323] = true;
		 borderLine[529] [324] = true;
		 borderLine[0] [324] = true;
		 borderLine[529] [325] = true;
		 borderLine[0] [325] = true;
		 borderLine[529] [326] = true;
		 borderLine[0] [326] = true;
		 borderLine[529] [327] = true;
		 borderLine[0] [327] = true;
		 borderLine[529] [328] = true;
		 borderLine[0] [328] = true;
		 borderLine[529] [329] = true;
		 borderLine[0] [329] = true;
		 borderLine[529] [330] = true;
		 borderLine[0] [330] = true;
		 borderLine[529] [331] = true;
		 borderLine[0] [331] = true;
		 borderLine[529] [332] = true;
		 borderLine[0] [332] = true;
		 borderLine[529] [333] = true;
		 borderLine[0] [333] = true;
		 borderLine[529] [334] = true;
		 borderLine[0] [334] = true;
		 borderLine[529] [335] = true;
		 borderLine[0] [335] = true;
		 borderLine[529] [336] = true;
		 borderLine[0] [336] = true;
		 borderLine[529] [337] = true;

		 }

	 private void Add2() {
		 borderLine[0] [337] = true;
		 borderLine[529] [338] = true;
		 borderLine[0] [338] = true;
		 borderLine[529] [339] = true;
		 borderLine[0] [339] = true;
		 borderLine[529] [340] = true;
		 borderLine[0] [340] = true;
		 borderLine[529] [341] = true;
		 borderLine[0] [341] = true;
		 borderLine[529] [342] = true;
		 borderLine[0] [342] = true;
		 borderLine[529] [343] = true;
		 borderLine[0] [343] = true;
		 borderLine[529] [344] = true;
		 borderLine[0] [344] = true;
		 borderLine[529] [345] = true;
		 borderLine[0] [345] = true;
		 borderLine[529] [346] = true;
		 borderLine[0] [346] = true;
		 borderLine[529] [347] = true;
		 borderLine[0] [347] = true;
		 borderLine[529] [348] = true;
		 borderLine[0] [348] = true;
		 borderLine[529] [349] = true;
		 borderLine[0] [349] = true;
		 borderLine[529] [350] = true;
		 borderLine[0] [350] = true;
		 borderLine[529] [351] = true;
		 borderLine[0] [351] = true;
		 borderLine[529] [352] = true;
		 borderLine[0] [352] = true;
		 borderLine[529] [353] = true;
		 borderLine[0] [353] = true;
		 borderLine[529] [354] = true;
		 borderLine[0] [354] = true;
		 borderLine[529] [355] = true;
		 borderLine[0] [355] = true;
		 borderLine[529] [356] = true;
		 borderLine[0] [356] = true;
		 borderLine[529] [357] = true;
		 borderLine[0] [357] = true;
		 borderLine[529] [358] = true;
		 borderLine[0] [358] = true;
		 borderLine[529] [359] = true;
		 borderLine[0] [359] = true;
		 borderLine[529] [360] = true;
		 borderLine[0] [360] = true;
		 borderLine[529] [361] = true;
		 borderLine[0] [361] = true;
		 borderLine[529] [362] = true;
		 borderLine[0] [362] = true;
		 borderLine[529] [363] = true;
		 borderLine[0] [363] = true;
		 borderLine[529] [364] = true;
		 borderLine[0] [364] = true;
		 borderLine[529] [365] = true;
		 borderLine[0] [365] = true;
		 borderLine[529] [366] = true;
		 borderLine[0] [366] = true;
		 borderLine[529] [367] = true;
		 borderLine[0] [367] = true;
		 borderLine[529] [368] = true;
		 borderLine[0] [368] = true;
		 borderLine[529] [369] = true;
		 borderLine[0] [369] = true;
		 borderLine[529] [370] = true;
		 borderLine[0] [370] = true;
		 borderLine[529] [371] = true;
		 borderLine[0] [371] = true;
		 borderLine[529] [372] = true;
		 borderLine[0] [372] = true;
		 borderLine[529] [373] = true;
		 borderLine[0] [373] = true;
		 borderLine[529] [374] = true;
		 borderLine[0] [374] = true;
		 borderLine[529] [375] = true;
		 borderLine[0] [375] = true;
		 borderLine[529] [376] = true;
		 borderLine[0] [376] = true;
		 borderLine[529] [377] = true;
		 borderLine[0] [377] = true;
		 borderLine[529] [378] = true;
		 borderLine[0] [378] = true;
		 borderLine[529] [379] = true;
		 borderLine[0] [379] = true;
		 borderLine[529] [380] = true;
		 borderLine[0] [380] = true;
		 borderLine[529] [381] = true;
		 borderLine[0] [381] = true;
		 borderLine[529] [382] = true;
		 borderLine[0] [382] = true;
		 borderLine[529] [383] = true;
		 borderLine[0] [383] = true;
		 borderLine[529] [384] = true;
		 borderLine[0] [384] = true;
		 borderLine[529] [385] = true;
		 borderLine[0] [385] = true;
		 borderLine[529] [386] = true;
		 borderLine[0] [386] = true;
		 borderLine[529] [387] = true;
		 borderLine[0] [387] = true;
		 borderLine[529] [388] = true;
		 borderLine[0] [388] = true;
		 borderLine[529] [389] = true;
		 borderLine[0] [389] = true;
		 borderLine[529] [390] = true;
		 borderLine[0] [390] = true;
		 borderLine[529] [391] = true;
		 borderLine[0] [391] = true;
		 borderLine[529] [392] = true;
		 borderLine[0] [392] = true;
		 borderLine[529] [393] = true;
		 borderLine[0] [393] = true;
		 borderLine[529] [394] = true;
		 borderLine[0] [394] = true;
		 borderLine[529] [395] = true;
		 borderLine[0] [395] = true;
		 borderLine[529] [396] = true;
		 borderLine[0] [396] = true;
		 borderLine[529] [397] = true;
		 borderLine[0] [397] = true;
		 borderLine[529] [398] = true;
		 borderLine[0] [398] = true;
		 borderLine[529] [399] = true;
		 borderLine[0] [399] = true;
		 borderLine[529] [400] = true;
		 borderLine[0] [400] = true;
		 borderLine[529] [401] = true;
		 borderLine[0] [401] = true;
		 borderLine[529] [402] = true;
		 borderLine[0] [402] = true;
		 borderLine[529] [403] = true;
		 borderLine[0] [403] = true;
		 borderLine[529] [404] = true;
		 borderLine[0] [404] = true;
		 borderLine[529] [405] = true;
		 borderLine[0] [405] = true;
		 borderLine[529] [406] = true;
		 borderLine[0] [406] = true;
		 borderLine[529] [407] = true;
		 borderLine[0] [407] = true;
		 borderLine[529] [408] = true;
		 borderLine[0] [408] = true;
		 borderLine[529] [409] = true;
		 borderLine[0] [409] = true;
		 borderLine[529] [410] = true;
		 borderLine[0] [410] = true;
		 borderLine[529] [411] = true;
		 borderLine[0] [411] = true;
		 borderLine[529] [412] = true;
		 borderLine[0] [412] = true;
		 borderLine[529] [413] = true;
		 borderLine[0] [413] = true;
		 borderLine[529] [414] = true;
		 borderLine[0] [414] = true;
		 borderLine[529] [415] = true;
		 borderLine[0] [415] = true;
		 borderLine[529] [416] = true;
		 borderLine[0] [416] = true;
		 borderLine[529] [417] = true;
		 borderLine[0] [417] = true;
		 borderLine[529] [418] = true;
		 borderLine[0] [418] = true;
		 borderLine[529] [419] = true;
		 borderLine[0] [419] = true;
		 borderLine[529] [420] = true;
		 borderLine[0] [420] = true;
		 borderLine[529] [421] = true;
		 borderLine[0] [421] = true;
		 borderLine[529] [422] = true;
		 borderLine[0] [422] = true;
		 borderLine[529] [423] = true;
		 borderLine[0] [423] = true;
		 borderLine[529] [424] = true;
		 borderLine[0] [424] = true;
		 borderLine[529] [425] = true;
		 borderLine[0] [425] = true;
		 borderLine[529] [426] = true;
		 borderLine[0] [426] = true;
		 borderLine[529] [427] = true;
		 borderLine[0] [427] = true;
		 borderLine[529] [428] = true;
		 borderLine[0] [428] = true;
		 borderLine[529] [429] = true;
		 borderLine[0] [429] = true;
		 borderLine[529] [430] = true;
		 borderLine[0] [430] = true;
		 borderLine[529] [431] = true;
		 borderLine[0] [431] = true;
		 borderLine[529] [432] = true;
		 borderLine[0] [432] = true;
		 borderLine[529] [433] = true;
		 borderLine[0] [433] = true;
		 borderLine[529] [434] = true;
		 borderLine[0] [434] = true;
		 borderLine[529] [435] = true;
		 borderLine[0] [435] = true;
		 borderLine[529] [436] = true;
		 borderLine[0] [436] = true;
		 borderLine[529] [437] = true;
		 borderLine[0] [437] = true;
		 borderLine[529] [438] = true;
		 borderLine[0] [438] = true;
		 borderLine[529] [439] = true;
		 borderLine[0] [439] = true;
		 borderLine[529] [440] = true;
		 borderLine[0] [440] = true;
		 borderLine[529] [441] = true;
		 borderLine[0] [441] = true;
		 borderLine[529] [442] = true;
		 borderLine[0] [442] = true;
		 borderLine[529] [443] = true;
		 borderLine[0] [443] = true;
		 borderLine[529] [444] = true;
		 borderLine[0] [444] = true;
		 borderLine[529] [445] = true;
		 borderLine[0] [445] = true;
		 borderLine[529] [446] = true;
		 borderLine[0] [446] = true;
		 borderLine[529] [447] = true;
		 borderLine[0] [447] = true;
		 borderLine[529] [448] = true;
		 borderLine[0] [448] = true;
		 borderLine[529] [449] = true;
		 borderLine[0] [449] = true;
		 borderLine[529] [450] = true;
		 borderLine[0] [450] = true;
		 borderLine[529] [451] = true;
		 borderLine[0] [451] = true;
		 borderLine[529] [452] = true;
		 borderLine[0] [452] = true;
		 borderLine[529] [453] = true;
		 borderLine[0] [453] = true;
		 borderLine[529] [454] = true;
		 borderLine[0] [454] = true;
		 borderLine[529] [455] = true;
		 borderLine[0] [455] = true;
		 borderLine[529] [456] = true;
		 borderLine[0] [456] = true;
		 borderLine[529] [457] = true;
		 borderLine[0] [457] = true;
		 borderLine[529] [458] = true;
		 borderLine[0] [458] = true;
		 borderLine[529] [459] = true;
		 borderLine[528] [459] = true;
		 borderLine[527] [459] = true;
		 borderLine[526] [459] = true;
		 borderLine[525] [459] = true;
		 borderLine[524] [459] = true;
		 borderLine[523] [459] = true;
		 borderLine[522] [459] = true;
		 borderLine[521] [459] = true;
		 borderLine[520] [459] = true;
		 borderLine[519] [459] = true;
		 borderLine[518] [459] = true;
		 borderLine[517] [459] = true;
		 borderLine[516] [459] = true;
		 borderLine[515] [459] = true;
		 borderLine[514] [459] = true;
		 borderLine[513] [459] = true;
		 borderLine[512] [459] = true;
		 borderLine[511] [459] = true;
		 borderLine[510] [459] = true;
		 borderLine[509] [459] = true;
		 borderLine[508] [459] = true;
		 borderLine[507] [459] = true;
		 borderLine[506] [459] = true;
		 borderLine[505] [459] = true;
		 borderLine[504] [459] = true;
		 borderLine[503] [459] = true;
		 borderLine[502] [459] = true;
		 borderLine[501] [459] = true;
		 borderLine[500] [459] = true;
		 borderLine[499] [459] = true;
		 borderLine[498] [459] = true;
		 borderLine[497] [459] = true;
		 borderLine[496] [459] = true;
		 borderLine[495] [459] = true;
		 borderLine[494] [459] = true;
		 borderLine[493] [459] = true;
		 borderLine[492] [459] = true;
		 borderLine[491] [459] = true;
		 borderLine[490] [459] = true;
		 borderLine[489] [459] = true;
		 borderLine[488] [459] = true;
		 borderLine[487] [459] = true;
		 borderLine[486] [459] = true;
		 borderLine[485] [459] = true;
		 borderLine[484] [459] = true;
		 borderLine[483] [459] = true;
		 borderLine[482] [459] = true;
		 borderLine[481] [459] = true;
		 borderLine[480] [459] = true;
		 borderLine[479] [459] = true;
		 borderLine[478] [459] = true;
		 borderLine[477] [459] = true;
		 borderLine[476] [459] = true;
		 borderLine[475] [459] = true;
		 borderLine[474] [459] = true;
		 borderLine[473] [459] = true;
		 borderLine[472] [459] = true;
		 borderLine[471] [459] = true;
		 borderLine[470] [459] = true;
		 borderLine[469] [459] = true;
		 borderLine[468] [459] = true;
		 borderLine[467] [459] = true;
		 borderLine[466] [459] = true;
		 borderLine[465] [459] = true;
		 borderLine[464] [459] = true;
		 borderLine[463] [459] = true;
		 borderLine[462] [459] = true;
		 borderLine[461] [459] = true;
		 borderLine[460] [459] = true;
		 borderLine[459] [459] = true;
		 borderLine[458] [459] = true;
		 borderLine[457] [459] = true;
		 borderLine[456] [459] = true;
		 borderLine[455] [459] = true;
		 borderLine[454] [459] = true;
		 borderLine[453] [459] = true;
		 borderLine[452] [459] = true;
		 borderLine[451] [459] = true;
		 borderLine[450] [459] = true;
		 borderLine[449] [459] = true;
		 borderLine[448] [459] = true;
		 borderLine[447] [459] = true;
		 borderLine[446] [459] = true;
		 borderLine[445] [459] = true;
		 borderLine[444] [459] = true;
		 borderLine[443] [459] = true;
		 borderLine[442] [459] = true;
		 borderLine[441] [459] = true;
		 borderLine[440] [459] = true;
		 borderLine[439] [459] = true;
		 borderLine[438] [459] = true;
		 borderLine[437] [459] = true;
		 borderLine[436] [459] = true;
		 borderLine[435] [459] = true;
		 borderLine[434] [459] = true;
		 borderLine[433] [459] = true;
		 borderLine[432] [459] = true;
		 borderLine[431] [459] = true;
		 borderLine[430] [459] = true;
		 borderLine[429] [459] = true;
		 borderLine[428] [459] = true;
		 borderLine[427] [459] = true;
		 borderLine[426] [459] = true;
		 borderLine[425] [459] = true;
		 borderLine[424] [459] = true;
		 borderLine[423] [459] = true;
		 borderLine[422] [459] = true;
		 borderLine[421] [459] = true;
		 borderLine[420] [459] = true;
		 borderLine[419] [459] = true;
		 borderLine[418] [459] = true;
		 borderLine[417] [459] = true;
		 borderLine[416] [459] = true;
		 borderLine[415] [459] = true;
		 borderLine[414] [459] = true;
		 borderLine[413] [459] = true;
		 borderLine[412] [459] = true;
		 borderLine[411] [459] = true;
		 borderLine[410] [459] = true;
		 borderLine[409] [459] = true;
		 borderLine[408] [459] = true;
		 borderLine[407] [459] = true;
		 borderLine[406] [459] = true;
		 borderLine[405] [459] = true;
		 borderLine[404] [459] = true;
		 borderLine[403] [459] = true;
		 borderLine[402] [459] = true;
		 borderLine[401] [459] = true;
		 borderLine[400] [459] = true;
		 borderLine[399] [459] = true;
		 borderLine[398] [459] = true;
		 borderLine[397] [459] = true;
		 borderLine[396] [459] = true;
		 borderLine[395] [459] = true;
		 borderLine[394] [459] = true;
		 borderLine[393] [459] = true;
		 borderLine[392] [459] = true;
		 borderLine[391] [459] = true;
		 borderLine[390] [459] = true;
		 borderLine[389] [459] = true;
		 borderLine[388] [459] = true;
		 borderLine[387] [459] = true;
		 borderLine[386] [459] = true;
		 borderLine[385] [459] = true;
		 borderLine[384] [459] = true;
		 borderLine[383] [459] = true;
		 borderLine[382] [459] = true;
		 borderLine[381] [459] = true;
		 borderLine[380] [459] = true;
		 borderLine[379] [459] = true;
		 borderLine[378] [459] = true;
		 borderLine[377] [459] = true;
		 borderLine[376] [459] = true;
		 borderLine[375] [459] = true;
		 borderLine[374] [459] = true;
		 borderLine[373] [459] = true;
		 borderLine[372] [459] = true;
		 borderLine[371] [459] = true;
		 borderLine[370] [459] = true;
		 borderLine[369] [459] = true;
		 borderLine[368] [459] = true;
		 borderLine[367] [459] = true;
		 borderLine[366] [459] = true;
		 borderLine[365] [459] = true;
		 borderLine[364] [459] = true;
		 borderLine[363] [459] = true;
		 borderLine[362] [459] = true;
		 borderLine[361] [459] = true;
		 borderLine[360] [459] = true;
		 borderLine[359] [459] = true;
		 borderLine[358] [459] = true;
		 borderLine[357] [459] = true;
		 borderLine[356] [459] = true;
		 borderLine[355] [459] = true;
		 borderLine[354] [459] = true;
		 borderLine[353] [459] = true;
		 borderLine[352] [459] = true;
		 borderLine[351] [459] = true;
		 borderLine[350] [459] = true;
		 borderLine[349] [459] = true;
		 borderLine[348] [459] = true;
		 borderLine[347] [459] = true;
		 borderLine[346] [459] = true;
		 borderLine[345] [459] = true;
		 borderLine[344] [459] = true;
		 borderLine[343] [459] = true;
		 borderLine[342] [459] = true;
		 borderLine[341] [459] = true;
		 borderLine[340] [459] = true;
		 borderLine[339] [459] = true;
		 borderLine[338] [459] = true;
		 borderLine[337] [459] = true;
		 borderLine[336] [459] = true;
		 borderLine[335] [459] = true;
		 borderLine[334] [459] = true;
		 borderLine[333] [459] = true;
		 borderLine[332] [459] = true;
		 borderLine[331] [459] = true;
		 borderLine[330] [459] = true;
		 borderLine[329] [459] = true;
		 borderLine[328] [459] = true;
		 borderLine[327] [459] = true;
		 borderLine[326] [459] = true;
		 borderLine[325] [459] = true;
		 borderLine[324] [459] = true;
		 borderLine[323] [459] = true;
		 borderLine[322] [459] = true;
		 borderLine[321] [459] = true;
		 borderLine[320] [459] = true;
		 borderLine[319] [459] = true;
		 borderLine[318] [459] = true;
		 borderLine[317] [459] = true;
		 borderLine[316] [459] = true;
		 borderLine[315] [459] = true;
		 borderLine[314] [459] = true;
		 borderLine[313] [459] = true;
		 borderLine[312] [459] = true;
		 borderLine[311] [459] = true;
		 borderLine[310] [459] = true;
		 borderLine[309] [459] = true;
		 borderLine[308] [459] = true;
		 borderLine[307] [459] = true;
		 borderLine[306] [459] = true;
		 borderLine[305] [459] = true;
		 borderLine[304] [459] = true;
		 borderLine[303] [459] = true;
		 borderLine[302] [459] = true;
		 borderLine[301] [459] = true;
		 borderLine[300] [459] = true;
		 borderLine[299] [459] = true;
		 borderLine[298] [459] = true;
		 borderLine[297] [459] = true;
		 borderLine[296] [459] = true;
		 borderLine[295] [459] = true;
		 borderLine[294] [459] = true;
		 borderLine[293] [459] = true;
		 borderLine[292] [459] = true;
		 borderLine[291] [459] = true;
		 borderLine[290] [459] = true;
		 borderLine[289] [459] = true;
		 borderLine[288] [459] = true;
		 borderLine[287] [459] = true;
		 borderLine[286] [459] = true;
		 borderLine[285] [459] = true;
		 borderLine[284] [459] = true;
		 borderLine[283] [459] = true;
		 borderLine[282] [459] = true;
		 borderLine[281] [459] = true;
		 borderLine[280] [459] = true;
		 borderLine[279] [459] = true;
		 borderLine[278] [459] = true;
		 borderLine[277] [459] = true;
		 borderLine[276] [459] = true;
		 borderLine[275] [459] = true;
		 borderLine[274] [459] = true;
		 borderLine[273] [459] = true;
		 borderLine[272] [459] = true;
		 borderLine[271] [459] = true;
		 borderLine[270] [459] = true;
		 borderLine[269] [459] = true;
		 borderLine[268] [459] = true;
		 borderLine[267] [459] = true;
		 borderLine[266] [459] = true;
		 borderLine[265] [459] = true;
		 borderLine[264] [459] = true;
		 borderLine[263] [459] = true;
		 borderLine[262] [459] = true;
		 borderLine[261] [459] = true;
		 borderLine[260] [459] = true;
		 borderLine[259] [459] = true;
		 borderLine[258] [459] = true;
		 borderLine[257] [459] = true;
		 borderLine[256] [459] = true;
		 borderLine[255] [459] = true;
		 borderLine[254] [459] = true;
		 borderLine[253] [459] = true;
		 borderLine[252] [459] = true;
		 borderLine[251] [459] = true;
		 borderLine[250] [459] = true;
		 borderLine[249] [459] = true;
		 borderLine[248] [459] = true;
		 borderLine[247] [459] = true;
		 borderLine[246] [459] = true;
		 borderLine[245] [459] = true;
		 borderLine[244] [459] = true;
		 borderLine[243] [459] = true;
		 borderLine[242] [459] = true;
		 borderLine[241] [459] = true;
		 borderLine[240] [459] = true;
		 borderLine[239] [459] = true;
		 borderLine[238] [459] = true;
		 borderLine[237] [459] = true;
		 borderLine[236] [459] = true;
		 borderLine[235] [459] = true;
		 borderLine[234] [459] = true;
		 borderLine[233] [459] = true;
		 borderLine[232] [459] = true;
		 borderLine[231] [459] = true;
		 borderLine[230] [459] = true;
		 borderLine[229] [459] = true;
		 borderLine[228] [459] = true;
		 borderLine[227] [459] = true;
		 borderLine[226] [459] = true;
		 borderLine[225] [459] = true;
		 borderLine[224] [459] = true;
		 borderLine[223] [459] = true;
		 borderLine[222] [459] = true;
		 borderLine[221] [459] = true;
		 borderLine[220] [459] = true;
		 borderLine[219] [459] = true;
		 borderLine[218] [459] = true;
		 borderLine[217] [459] = true;
		 borderLine[216] [459] = true;
		 borderLine[215] [459] = true;
		 borderLine[214] [459] = true;
		 borderLine[213] [459] = true;
		 borderLine[212] [459] = true;
		 borderLine[211] [459] = true;
		 borderLine[210] [459] = true;
		 borderLine[209] [459] = true;
		 borderLine[208] [459] = true;
		 borderLine[207] [459] = true;
		 borderLine[206] [459] = true;
		 borderLine[205] [459] = true;
		 borderLine[204] [459] = true;
		 borderLine[203] [459] = true;
		 borderLine[202] [459] = true;
		 borderLine[201] [459] = true;
		 borderLine[200] [459] = true;
		 borderLine[199] [459] = true;
		 borderLine[198] [459] = true;
		 borderLine[197] [459] = true;
		 borderLine[196] [459] = true;
		 borderLine[195] [459] = true;
		 borderLine[194] [459] = true;
		 borderLine[193] [459] = true;
		 borderLine[192] [459] = true;
		 borderLine[191] [459] = true;
		 borderLine[190] [459] = true;
		 borderLine[189] [459] = true;
		 borderLine[188] [459] = true;
		 borderLine[187] [459] = true;
		 borderLine[186] [459] = true;
		 borderLine[185] [459] = true;
		 borderLine[184] [459] = true;
		 borderLine[183] [459] = true;
		 borderLine[182] [459] = true;
		 borderLine[181] [459] = true;
		 borderLine[180] [459] = true;
		 borderLine[179] [459] = true;
		 borderLine[178] [459] = true;
		 borderLine[177] [459] = true;
		 borderLine[176] [459] = true;
		 borderLine[175] [459] = true;
		 borderLine[174] [459] = true;
		 borderLine[173] [459] = true;
		 borderLine[172] [459] = true;
		 borderLine[171] [459] = true;
		 borderLine[170] [459] = true;
		 borderLine[169] [459] = true;
		 borderLine[168] [459] = true;
		 borderLine[167] [459] = true;
		 borderLine[166] [459] = true;
		 borderLine[165] [459] = true;
		 borderLine[164] [459] = true;
		 borderLine[163] [459] = true;
		 borderLine[162] [459] = true;
		 borderLine[161] [459] = true;
		 borderLine[160] [459] = true;
		 borderLine[159] [459] = true;
		 borderLine[158] [459] = true;
		 borderLine[157] [459] = true;
		 borderLine[156] [459] = true;
		 borderLine[155] [459] = true;
		 borderLine[154] [459] = true;
		 borderLine[153] [459] = true;
		 borderLine[152] [459] = true;
		 borderLine[151] [459] = true;
		 borderLine[150] [459] = true;
		 borderLine[149] [459] = true;
		 borderLine[148] [459] = true;
		 borderLine[147] [459] = true;
		 borderLine[146] [459] = true;
		 borderLine[145] [459] = true;
		 borderLine[144] [459] = true;
		 borderLine[143] [459] = true;
		 borderLine[142] [459] = true;
		 borderLine[141] [459] = true;
		 borderLine[140] [459] = true;
		 borderLine[139] [459] = true;
		 borderLine[138] [459] = true;
		 borderLine[137] [459] = true;
		 borderLine[136] [459] = true;
		 borderLine[135] [459] = true;
		 borderLine[134] [459] = true;
		 borderLine[133] [459] = true;
		 borderLine[132] [459] = true;
		 borderLine[131] [459] = true;
		 borderLine[130] [459] = true;
		 borderLine[129] [459] = true;
		 borderLine[128] [459] = true;
		 borderLine[127] [459] = true;
		 borderLine[126] [459] = true;
		 borderLine[125] [459] = true;
		 borderLine[124] [459] = true;
		 borderLine[123] [459] = true;
		 borderLine[122] [459] = true;
		 borderLine[121] [459] = true;
		 borderLine[120] [459] = true;
		 borderLine[119] [459] = true;
		 borderLine[118] [459] = true;
		 borderLine[117] [459] = true;
		 borderLine[116] [459] = true;
		 borderLine[115] [459] = true;
		 borderLine[114] [459] = true;
		 borderLine[113] [459] = true;
		 borderLine[112] [459] = true;
		 borderLine[111] [459] = true;
		 borderLine[110] [459] = true;
		 borderLine[109] [459] = true;
		 borderLine[108] [459] = true;
		 borderLine[107] [459] = true;
		 borderLine[106] [459] = true;
		 borderLine[105] [459] = true;
		 borderLine[104] [459] = true;
		 borderLine[103] [459] = true;
		 borderLine[102] [459] = true;
		 borderLine[101] [459] = true;
		 borderLine[100] [459] = true;
		 borderLine[99] [459] = true;
		 borderLine[98] [459] = true;
		 borderLine[97] [459] = true;
		 borderLine[96] [459] = true;
		 borderLine[95] [459] = true;
		 borderLine[94] [459] = true;
		 borderLine[93] [459] = true;
		 borderLine[92] [459] = true;
		 borderLine[91] [459] = true;
		 borderLine[90] [459] = true;
		 borderLine[89] [459] = true;
		 borderLine[88] [459] = true;
		 borderLine[87] [459] = true;
		 borderLine[86] [459] = true;
		 borderLine[85] [459] = true;
		 borderLine[84] [459] = true;
		 borderLine[83] [459] = true;
		 borderLine[82] [459] = true;
		 borderLine[81] [459] = true;
		 borderLine[80] [459] = true;
		 borderLine[79] [459] = true;
		 borderLine[78] [459] = true;
		 borderLine[77] [459] = true;
		 borderLine[76] [459] = true;
		 borderLine[75] [459] = true;
		 borderLine[74] [459] = true;
		 borderLine[73] [459] = true;
		 borderLine[72] [459] = true;
		 borderLine[71] [459] = true;
		 borderLine[70] [459] = true;
		 borderLine[69] [459] = true;
		 borderLine[68] [459] = true;
		 borderLine[67] [459] = true;
		 borderLine[66] [459] = true;
		 borderLine[65] [459] = true;
		 borderLine[64] [459] = true;
		 borderLine[63] [459] = true;
		 borderLine[62] [459] = true;
		 borderLine[61] [459] = true;
		 borderLine[60] [459] = true;
		 borderLine[59] [459] = true;
		 borderLine[58] [459] = true;
		 borderLine[57] [459] = true;
		 borderLine[56] [459] = true;
		 borderLine[55] [459] = true;
		 borderLine[54] [459] = true;
		 borderLine[53] [459] = true;
		 borderLine[52] [459] = true;
		 borderLine[51] [459] = true;
		 borderLine[50] [459] = true;
		 borderLine[49] [459] = true;
		 borderLine[48] [459] = true;
		 borderLine[47] [459] = true;
		 borderLine[46] [459] = true;
		 borderLine[45] [459] = true;
		 borderLine[44] [459] = true;
		 borderLine[43] [459] = true;
		 borderLine[42] [459] = true;
		 borderLine[41] [459] = true;
		 borderLine[40] [459] = true;
		 borderLine[39] [459] = true;
		 borderLine[38] [459] = true;
		 borderLine[37] [459] = true;
		 borderLine[36] [459] = true;
		 borderLine[35] [459] = true;
		 borderLine[34] [459] = true;
		 borderLine[33] [459] = true;
		 borderLine[32] [459] = true;
		 borderLine[31] [459] = true;
		 borderLine[30] [459] = true;
		 borderLine[29] [459] = true;
		 borderLine[28] [459] = true;
		 borderLine[27] [459] = true;
		 borderLine[26] [459] = true;
		 borderLine[25] [459] = true;
		 borderLine[24] [459] = true;
		 borderLine[23] [459] = true;
		 borderLine[22] [459] = true;
		 borderLine[21] [459] = true;
		 borderLine[20] [459] = true;
		 borderLine[19] [459] = true;
		 borderLine[18] [459] = true;
		 borderLine[17] [459] = true;
		 borderLine[16] [459] = true;
		 borderLine[15] [459] = true;
		 borderLine[14] [459] = true;
		 borderLine[13] [459] = true;
		 borderLine[12] [459] = true;
		 borderLine[11] [459] = true;
		 borderLine[10] [459] = true;
		 borderLine[9] [459] = true;
		 borderLine[8] [459] = true;
		 borderLine[7] [459] = true;
		 borderLine[6] [459] = true;
		 borderLine[5] [459] = true;
		 borderLine[4] [459] = true;
		 borderLine[3] [459] = true;
		 borderLine[2] [459] = true;
		 borderLine[1] [459] = true;
		 borderLine[0] [459] = true;

		 }

}