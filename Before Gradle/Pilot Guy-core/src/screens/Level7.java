package screens;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.elkadakh.others.AssetLoader;
import com.elkadakh.others.DifficultyLevels;
import com.elkadakh.others.Helicopter;
import com.elkadakh.others.MovingLines;
import com.elkadakh.pilotguy.GameMainClass;

public class Level7 extends LevelBase {
	protected static final int PLAY_AR_WID = 603, PLAY_AR_HEI = 440;
	protected static final int targetX = 565, targetY = 368;
	private boolean zeroAtY;
	private boolean isFalling;
	private boolean nextSound;
	private MovingLines[] horLines;
	private MovingLines[] horLinesDif1;
	private MovingLines[] verLines;
	private ShapeRenderer linesRenderer;
	private float timer;
	int widthOfTarget;

	public Level7 (){
		timer = 0;
		heliPosX = 50;
		heliPosY = 30;
		super.CalculatePlayArRatio(PLAY_AR_WID, PLAY_AR_HEI); //Sets "lvsPlayAreaRatio"
        helicopter = new Helicopter(super.lvsPlayAreaRatio);
        super.SetScreenOptimizedLvsRes(PLAY_AR_WID, PLAY_AR_HEI); //Uses the ratio of screen/level
		zeroAtY = (phoneHeight - super.playArNewHeight <= phoneWidth - super.playArNewWidth); //Place the lvl at x=0 or y=0
        SetCenterCoords(); //To x or y
		helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
		borderLine = new boolean[PLAY_AR_HEI][PLAY_AR_WID];
		playArrWid = PLAY_AR_WID;
		playArrHeight = PLAY_AR_HEI;
		isFalling = false;
		nextSound = false;
		nextLevelSuspend = 0; //2 secs
		horLines = new MovingLines[3];
		horLinesDif1 = new MovingLines[2];
		verLines = new MovingLines[2];
		linesRenderer = new ShapeRenderer();
		horLines[0] = new MovingLines(156, 294, 1, 1, 45, lvsPlayAreaRatio, xToCen, yToCen, PLAY_AR_WID, PLAY_AR_HEI);
		horLines[1] = new MovingLines(156, 294, 91, 91, 45, lvsPlayAreaRatio, xToCen, yToCen, PLAY_AR_WID, PLAY_AR_HEI);
		horLines[2] = new MovingLines(156, 294, 181, 181, 45, lvsPlayAreaRatio, xToCen, yToCen, PLAY_AR_WID, PLAY_AR_HEI);
		//horLines[3] = new MovingLines(156, 294, 272, 272, 50, lvsPlayAreaRatio, xToCen, yToCen, PLAY_AR_WID, PLAY_AR_HEI);

		horLinesDif1[0] = new MovingLines(156, 294, 0, 0, 30, lvsPlayAreaRatio, xToCen, yToCen, PLAY_AR_WID, PLAY_AR_HEI);
		horLinesDif1[1] = new MovingLines(156, 294, 150, 150, 30, lvsPlayAreaRatio, xToCen, yToCen, PLAY_AR_WID, PLAY_AR_HEI);
		
		verLines[0] = new MovingLines(340, 340, 440, 327, 32, lvsPlayAreaRatio, xToCen, yToCen, PLAY_AR_WID, PLAY_AR_HEI);
		verLines[1] = new MovingLines(490, 490, 440, 327, 32, lvsPlayAreaRatio, xToCen, yToCen, PLAY_AR_WID, PLAY_AR_HEI);
		Add1();
		Add2();
		difLvls = new DifficultyLevels(drawToScreen,helicopter,phoneWidth,phoneHeight);
	}
	
	public void render(float delta){
		if(newStart){
			isFalling = false;
			newStart = false;
			difLvls.chosen = 2;
			helicopter.SetMedium();
			nextSound = false;
			super.nextLevelSuspend = 0;
		}
		if(difLvls.chosen == 1)
			MovingLines.isEasy = true;
		else
			MovingLines.isEasy = false;
		super.isFalling = isFalling;
		super.render(delta);
		DrawLevel();
		DrawTarget();
		DrawGlass();
		DrawBackButton();
		
		float heliXtransed = (helicopter.GetX() - xToCen) / lvsPlayAreaRatio;
		float heliYtransed = (helicopter.GetY() - yToCen) / lvsPlayAreaRatio;
		
		//With the border
		if((isCollision(borderLine, heliXtransed, heliYtransed) || isFalling) && !newStart){
			timer+=delta;
			if(!super.isFalling){
				isFalling = true;
				AssetLoader.propellorSpin.stop();
				if(!GameMainClass.muteSound)
					AssetLoader.crash.play();
			}
			super.startMovingHeli = false;

			if(super.isFalling){
				helicopter.SetRotation(helicopter.GetRotation() + 600/lvsPlayAreaRatio*delta);
				helicopter.SetPosition(helicopter.GetX(), helicopter.GetY() - (phoneHeight/3)*delta);
			}
			if(helicopter.GetY() + 34*lvsPlayAreaRatio < 0 && !AssetLoader.crash.isPlaying() && timer >= 3){ //34*lvsPlayAreaRatio: helis height in the level
				isFalling = false;
				timer = 0;
				helicopter.ResetVelocityRotation();
				helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
				nextSound = false;
			}
		}
		
		//With the landing area
		if(difLvls.chosen != 1 && isCollision(targetX,targetY, 35, 35, heliXtransed, heliYtransed)){
			if(!nextSound){
				//fa = false;
				AssetLoader.propellorSpin.stop();
				if(!GameMainClass.muteSound)
					AssetLoader.nextLevel.play();
				if(Menu.prefs.getInteger("lastPlayedLevel", 1) < 8)
					Menu.SaveLevel(8);
				super.SetStars(this);
				nextSound = true;
			}
			nextLevelSuspend += delta;
			if(super.nextLevelSuspend > 2){
				GameMainClass.setCurScreen(8);
				helicopter.ResetVelocityRotation();
				helicopter.SetPosition((float) (heliPosX*lvsPlayAreaRatio + xToCen), (float) (heliPosY*lvsPlayAreaRatio + yToCen));
				startMovingHeli = false;
				super.nextLevelSuspend = 0;
				heliXtransed = (helicopter.GetX() - xToCen) / lvsPlayAreaRatio;
				heliYtransed = (helicopter.GetY() - yToCen) / lvsPlayAreaRatio;
			}
		}	
		
		//With horizontal moving border
		for(int i= 0 ;i<horLines.length && difLvls.chosen != 1;i++){
			if(isCollision((int) ((horLines[i].updatedX1 - xToCen)/lvsPlayAreaRatio),
					(int) ((horLines[i].updatedY1 - yToCen)/lvsPlayAreaRatio), (int) ((horLines[i].updatedX2 - xToCen)/lvsPlayAreaRatio) - (int) ((horLines[i].updatedX1 - xToCen)/lvsPlayAreaRatio), 1, heliXtransed, heliYtransed)){
				if(!super.isFalling){
					isFalling = true;
					AssetLoader.propellorSpin.stop();
					if(!GameMainClass.muteSound)
						AssetLoader.crash.play();
				}
				super.startMovingHeli = false;
			}
		}
		
		for(int i= 0 ;i<horLinesDif1.length && difLvls.chosen == 1;i++){
			if(isCollision((int) ((horLinesDif1[i].updatedX1 - xToCen)/lvsPlayAreaRatio),
					(int) ((horLinesDif1[i].updatedY1 - yToCen)/lvsPlayAreaRatio), (int) ((horLinesDif1[i].updatedX2 - xToCen)/lvsPlayAreaRatio) - (int) ((horLinesDif1[i].updatedX1 - xToCen)/lvsPlayAreaRatio), 1, heliXtransed, heliYtransed)){
				if(!super.isFalling){
					isFalling = true;
					AssetLoader.propellorSpin.stop();
					if(!GameMainClass.muteSound)
						AssetLoader.crash.play();
				}
				super.startMovingHeli = false;
			}
		}
		//With vertical moving border
		for(int i= 0 ;i<verLines.length && nextLevelSuspend == 0;i++){
			if(isCollision((int) ((verLines[i].updatedX1 - xToCen)/lvsPlayAreaRatio),
					(int) ((verLines[i].updatedY2 - yToCen)/lvsPlayAreaRatio), 1, (int) ((verLines[i].updatedY1 - yToCen)/lvsPlayAreaRatio) - (int) ((verLines[i].updatedY2 - yToCen)/lvsPlayAreaRatio), heliXtransed, heliYtransed)){
				if(!super.isFalling){
					isFalling = true;
					AssetLoader.propellorSpin.stop();
					AssetLoader.crash.play();
				}
				super.startMovingHeli = false;
			}
		}
		
		DrawLines();
		if(lvsPlayAreaRatio < 0.9f)
			widthOfTarget = (int)(28*lvsPlayAreaRatio/0.8);
		else
			widthOfTarget = (int)(35*lvsPlayAreaRatio);
		difLvls.DoThings(bgNum, startMovingHeli, widthOfTarget, (int)(targetX*lvsPlayAreaRatio + xToCen),(int)(targetY*lvsPlayAreaRatio + yToCen), delta, super.isFalling);
		if(difLvls.chosen == 1){
			verLines[0].speed = 20;
			verLines[1].speed = 20;
		}
		else{
			verLines[0].speed = 32;
			verLines[1].speed = 32;
		}
		if(difLvls.chosen != 1){
			horLines[0].UpdateForHor(delta);
			horLines[1].UpdateForHor(delta);
			horLines[2].UpdateForHor(delta);
		}
		//horLines[3].UpdateForHor(delta);
		else{
			horLinesDif1[0].UpdateForHor(delta);
			horLinesDif1[1].UpdateForHor(delta);
		}
		
		verLines[0].UpdateForVer(delta, verLines[0]);
		verLines[1].UpdateForVer(delta, verLines[0]);

	}

	private void DrawLines() {
		Gdx.gl.glEnable(GL20.GL_BLEND);
	    Gdx.gl.glBlendFunc(GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);
		linesRenderer.begin(ShapeType.Line);
		linesRenderer.setColor(new Color(255/100f, 255/100f, 255/100f, 200/255f));
		if(difLvls.chosen != 1){
			linesRenderer.line(horLines[0].updatedX1, horLines[0].updatedY1, horLines[0].updatedX2, horLines[0].updatedY2);
			linesRenderer.line(horLines[1].updatedX1, horLines[1].updatedY1, horLines[1].updatedX2, horLines[1].updatedY2);
			linesRenderer.line(horLines[2].updatedX1, horLines[2].updatedY1, horLines[2].updatedX2, horLines[2].updatedY2);
		}
		else{
			linesRenderer.line(horLinesDif1[0].updatedX1, horLinesDif1[0].updatedY1, horLinesDif1[0].updatedX2, horLinesDif1[0].updatedY2);
			linesRenderer.line(horLinesDif1[1].updatedX1, horLinesDif1[1].updatedY1, horLinesDif1[1].updatedX2, horLinesDif1[1].updatedY2);
		}
		//linesRenderer.line(horLines[3].updatedX1, horLines[3].updatedY1, horLines[3].updatedX2, horLines[3].updatedY2);
		
		linesRenderer.line(verLines[0].updatedX1, verLines[0].updatedY1, verLines[0].updatedX2, verLines[0].updatedY2);
		linesRenderer.line(verLines[1].updatedX1, verLines[1].updatedY1, verLines[1].updatedX2, verLines[1].updatedY2);
		linesRenderer.end();
	}
	
	private void DrawLevel (){
		drawToScreen.begin();
		drawToScreen.draw(AssetLoader.level7, (int)xToCen, (int)yToCen, (int)(PLAY_AR_WID*lvsPlayAreaRatio), 
				(int)(PLAY_AR_HEI*lvsPlayAreaRatio), 0, 0, PLAY_AR_WID, PLAY_AR_HEI, false, false);
		drawToScreen.end();
	}
	
	private void DrawTarget (){
		drawToScreen.begin();
		if(lvsPlayAreaRatio < 0.9f)
		drawToScreen.draw(AssetLoader.targetSmall, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
				(int)(28*lvsPlayAreaRatio/0.8), (int)(28*lvsPlayAreaRatio/0.8),0,0,28,28,false,false);
		else
			drawToScreen.draw(AssetLoader.target, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
					(int)(35*lvsPlayAreaRatio), (int)(35*lvsPlayAreaRatio),0,0,35,35,false,false);//35 = texture width and height
		if(difLvls.chosen == 1){
			if(lvsPlayAreaRatio < 0.9f)
				drawToScreen.draw(AssetLoader.targetSmallDif1, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
						(int)(28*lvsPlayAreaRatio/0.8), (int)(28*lvsPlayAreaRatio/0.8),0,0,28,28,false,false);
				else
					drawToScreen.draw(AssetLoader.targetDif1, (int)(xToCen + targetX*lvsPlayAreaRatio),(int)(yToCen + targetY*lvsPlayAreaRatio), 
							(int)(35*lvsPlayAreaRatio), (int)(35*lvsPlayAreaRatio),0,0,35,35,false,false);//35 = texture width and height
		}
		drawToScreen.end();
	}
	
	private void SetCenterCoords (){
		if(zeroAtY){
			 yToCen = phoneHeight*(float)0.025;
			 xToCen = phoneWidth / 2 - PLAY_AR_WID * lvsPlayAreaRatio / 2;
			 
		}
		else{
			 xToCen = phoneWidth*(float)0.025;
			 yToCen = phoneHeight / 2 - PLAY_AR_HEI * lvsPlayAreaRatio / 2;
		}
	}
	 private void Add1() {
		 borderLine[185] [0] = true;
		 borderLine[184] [0] = true;
		 borderLine[183] [0] = true;
		 borderLine[182] [0] = true;
		 borderLine[181] [0] = true;
		 borderLine[180] [0] = true;
		 borderLine[179] [0] = true;
		 borderLine[178] [0] = true;
		 borderLine[177] [0] = true;
		 borderLine[176] [0] = true;
		 borderLine[175] [0] = true;
		 borderLine[174] [0] = true;
		 borderLine[173] [0] = true;
		 borderLine[172] [0] = true;
		 borderLine[171] [0] = true;
		 borderLine[170] [0] = true;
		 borderLine[169] [0] = true;
		 borderLine[168] [0] = true;
		 borderLine[167] [0] = true;
		 borderLine[166] [0] = true;
		 borderLine[165] [0] = true;
		 borderLine[164] [0] = true;
		 borderLine[163] [0] = true;
		 borderLine[162] [0] = true;
		 borderLine[161] [0] = true;
		 borderLine[160] [0] = true;
		 borderLine[159] [0] = true;
		 borderLine[158] [0] = true;
		 borderLine[157] [0] = true;
		 borderLine[156] [0] = true;
		 borderLine[155] [0] = true;
		 borderLine[154] [0] = true;
		 borderLine[153] [0] = true;
		 borderLine[152] [0] = true;
		 borderLine[151] [0] = true;
		 borderLine[150] [0] = true;
		 borderLine[149] [0] = true;
		 borderLine[148] [0] = true;
		 borderLine[147] [0] = true;
		 borderLine[146] [0] = true;
		 borderLine[145] [0] = true;
		 borderLine[144] [0] = true;
		 borderLine[143] [0] = true;
		 borderLine[142] [0] = true;
		 borderLine[141] [0] = true;
		 borderLine[140] [0] = true;
		 borderLine[139] [0] = true;
		 borderLine[138] [0] = true;
		 borderLine[137] [0] = true;
		 borderLine[136] [0] = true;
		 borderLine[135] [0] = true;
		 borderLine[134] [0] = true;
		 borderLine[133] [0] = true;
		 borderLine[132] [0] = true;
		 borderLine[131] [0] = true;
		 borderLine[130] [0] = true;
		 borderLine[129] [0] = true;
		 borderLine[128] [0] = true;
		 borderLine[127] [0] = true;
		 borderLine[126] [0] = true;
		 borderLine[125] [0] = true;
		 borderLine[124] [0] = true;
		 borderLine[123] [0] = true;
		 borderLine[122] [0] = true;
		 borderLine[121] [0] = true;
		 borderLine[120] [0] = true;
		 borderLine[119] [0] = true;
		 borderLine[118] [0] = true;
		 borderLine[117] [0] = true;
		 borderLine[116] [0] = true;
		 borderLine[115] [0] = true;
		 borderLine[114] [0] = true;
		 borderLine[113] [0] = true;
		 borderLine[112] [0] = true;
		 borderLine[111] [0] = true;
		 borderLine[110] [0] = true;
		 borderLine[109] [0] = true;
		 borderLine[108] [0] = true;
		 borderLine[107] [0] = true;
		 borderLine[106] [0] = true;
		 borderLine[105] [0] = true;
		 borderLine[104] [0] = true;
		 borderLine[103] [0] = true;
		 borderLine[102] [0] = true;
		 borderLine[101] [0] = true;
		 borderLine[100] [0] = true;
		 borderLine[99] [0] = true;
		 borderLine[98] [0] = true;
		 borderLine[97] [0] = true;
		 borderLine[96] [0] = true;
		 borderLine[95] [0] = true;
		 borderLine[94] [0] = true;
		 borderLine[93] [0] = true;
		 borderLine[92] [0] = true;
		 borderLine[91] [0] = true;
		 borderLine[90] [0] = true;
		 borderLine[89] [0] = true;
		 borderLine[88] [0] = true;
		 borderLine[87] [0] = true;
		 borderLine[86] [0] = true;
		 borderLine[85] [0] = true;
		 borderLine[84] [0] = true;
		 borderLine[83] [0] = true;
		 borderLine[82] [0] = true;
		 borderLine[81] [0] = true;
		 borderLine[80] [0] = true;
		 borderLine[79] [0] = true;
		 borderLine[78] [0] = true;
		 borderLine[77] [0] = true;
		 borderLine[76] [0] = true;
		 borderLine[75] [0] = true;
		 borderLine[74] [0] = true;
		 borderLine[73] [0] = true;
		 borderLine[72] [0] = true;
		 borderLine[71] [0] = true;
		 borderLine[70] [0] = true;
		 borderLine[69] [0] = true;
		 borderLine[68] [0] = true;
		 borderLine[67] [0] = true;
		 borderLine[66] [0] = true;
		 borderLine[65] [0] = true;
		 borderLine[64] [0] = true;
		 borderLine[63] [0] = true;
		 borderLine[62] [0] = true;
		 borderLine[61] [0] = true;
		 borderLine[60] [0] = true;
		 borderLine[59] [0] = true;
		 borderLine[58] [0] = true;
		 borderLine[57] [0] = true;
		 borderLine[56] [0] = true;
		 borderLine[55] [0] = true;
		 borderLine[54] [0] = true;
		 borderLine[53] [0] = true;
		 borderLine[52] [0] = true;
		 borderLine[51] [0] = true;
		 borderLine[50] [0] = true;
		 borderLine[49] [0] = true;
		 borderLine[48] [0] = true;
		 borderLine[47] [0] = true;
		 borderLine[46] [0] = true;
		 borderLine[45] [0] = true;
		 borderLine[44] [0] = true;
		 borderLine[43] [0] = true;
		 borderLine[42] [0] = true;
		 borderLine[41] [0] = true;
		 borderLine[40] [0] = true;
		 borderLine[39] [0] = true;
		 borderLine[38] [0] = true;
		 borderLine[37] [0] = true;
		 borderLine[36] [0] = true;
		 borderLine[35] [0] = true;
		 borderLine[34] [0] = true;
		 borderLine[33] [0] = true;
		 borderLine[32] [0] = true;
		 borderLine[31] [0] = true;
		 borderLine[30] [0] = true;
		 borderLine[29] [0] = true;
		 borderLine[28] [0] = true;
		 borderLine[27] [0] = true;
		 borderLine[26] [0] = true;
		 borderLine[25] [0] = true;
		 borderLine[24] [0] = true;
		 borderLine[23] [0] = true;
		 borderLine[22] [0] = true;
		 borderLine[21] [0] = true;
		 borderLine[20] [0] = true;
		 borderLine[19] [0] = true;
		 borderLine[18] [0] = true;
		 borderLine[17] [0] = true;
		 borderLine[16] [0] = true;
		 borderLine[15] [0] = true;
		 borderLine[14] [0] = true;
		 borderLine[13] [0] = true;
		 borderLine[12] [0] = true;
		 borderLine[11] [0] = true;
		 borderLine[10] [0] = true;
		 borderLine[9] [0] = true;
		 borderLine[8] [0] = true;
		 borderLine[7] [0] = true;
		 borderLine[6] [0] = true;
		 borderLine[5] [0] = true;
		 borderLine[4] [0] = true;
		 borderLine[3] [0] = true;
		 borderLine[2] [0] = true;
		 borderLine[1] [0] = true;
		 borderLine[0] [0] = true;
		 borderLine[185] [1] = true;
		 borderLine[0] [1] = true;
		 borderLine[185] [2] = true;
		 borderLine[0] [2] = true;
		 borderLine[185] [3] = true;
		 borderLine[0] [3] = true;
		 borderLine[185] [4] = true;
		 borderLine[0] [4] = true;
		 borderLine[185] [5] = true;
		 borderLine[0] [5] = true;
		 borderLine[185] [6] = true;
		 borderLine[0] [6] = true;
		 borderLine[185] [7] = true;
		 borderLine[0] [7] = true;
		 borderLine[185] [8] = true;
		 borderLine[0] [8] = true;
		 borderLine[185] [9] = true;
		 borderLine[0] [9] = true;
		 borderLine[185] [10] = true;
		 borderLine[0] [10] = true;
		 borderLine[185] [11] = true;
		 borderLine[0] [11] = true;
		 borderLine[185] [12] = true;
		 borderLine[0] [12] = true;
		 borderLine[185] [13] = true;
		 borderLine[0] [13] = true;
		 borderLine[185] [14] = true;
		 borderLine[0] [14] = true;
		 borderLine[185] [15] = true;
		 borderLine[0] [15] = true;
		 borderLine[185] [16] = true;
		 borderLine[0] [16] = true;
		 borderLine[185] [17] = true;
		 borderLine[0] [17] = true;
		 borderLine[185] [18] = true;
		 borderLine[0] [18] = true;
		 borderLine[185] [19] = true;
		 borderLine[0] [19] = true;
		 borderLine[185] [20] = true;
		 borderLine[0] [20] = true;
		 borderLine[185] [21] = true;
		 borderLine[0] [21] = true;
		 borderLine[185] [22] = true;
		 borderLine[0] [22] = true;
		 borderLine[185] [23] = true;
		 borderLine[0] [23] = true;
		 borderLine[185] [24] = true;
		 borderLine[0] [24] = true;
		 borderLine[185] [25] = true;
		 borderLine[0] [25] = true;
		 borderLine[185] [26] = true;
		 borderLine[0] [26] = true;
		 borderLine[185] [27] = true;
		 borderLine[0] [27] = true;
		 borderLine[185] [28] = true;
		 borderLine[0] [28] = true;
		 borderLine[185] [29] = true;
		 borderLine[0] [29] = true;
		 borderLine[185] [30] = true;
		 borderLine[0] [30] = true;
		 borderLine[185] [31] = true;
		 borderLine[0] [31] = true;
		 borderLine[185] [32] = true;
		 borderLine[0] [32] = true;
		 borderLine[185] [33] = true;
		 borderLine[0] [33] = true;
		 borderLine[185] [34] = true;
		 borderLine[0] [34] = true;
		 borderLine[185] [35] = true;
		 borderLine[0] [35] = true;
		 borderLine[185] [36] = true;
		 borderLine[0] [36] = true;
		 borderLine[185] [37] = true;
		 borderLine[0] [37] = true;
		 borderLine[185] [38] = true;
		 borderLine[0] [38] = true;
		 borderLine[185] [39] = true;
		 borderLine[0] [39] = true;
		 borderLine[185] [40] = true;
		 borderLine[0] [40] = true;
		 borderLine[185] [41] = true;
		 borderLine[0] [41] = true;
		 borderLine[185] [42] = true;
		 borderLine[0] [42] = true;
		 borderLine[185] [43] = true;
		 borderLine[0] [43] = true;
		 borderLine[185] [44] = true;
		 borderLine[0] [44] = true;
		 borderLine[185] [45] = true;
		 borderLine[0] [45] = true;
		 borderLine[185] [46] = true;
		 borderLine[0] [46] = true;
		 borderLine[185] [47] = true;
		 borderLine[0] [47] = true;
		 borderLine[185] [48] = true;
		 borderLine[0] [48] = true;
		 borderLine[185] [49] = true;
		 borderLine[0] [49] = true;
		 borderLine[185] [50] = true;
		 borderLine[0] [50] = true;
		 borderLine[185] [51] = true;
		 borderLine[0] [51] = true;
		 borderLine[185] [52] = true;
		 borderLine[0] [52] = true;
		 borderLine[185] [53] = true;
		 borderLine[0] [53] = true;
		 borderLine[185] [54] = true;
		 borderLine[0] [54] = true;
		 borderLine[185] [55] = true;
		 borderLine[0] [55] = true;
		 borderLine[185] [56] = true;
		 borderLine[0] [56] = true;
		 borderLine[185] [57] = true;
		 borderLine[0] [57] = true;
		 borderLine[185] [58] = true;
		 borderLine[0] [58] = true;
		 borderLine[185] [59] = true;
		 borderLine[0] [59] = true;
		 borderLine[185] [60] = true;
		 borderLine[0] [60] = true;
		 borderLine[185] [61] = true;
		 borderLine[0] [61] = true;
		 borderLine[185] [62] = true;
		 borderLine[0] [62] = true;
		 borderLine[185] [63] = true;
		 borderLine[0] [63] = true;
		 borderLine[185] [64] = true;
		 borderLine[0] [64] = true;
		 borderLine[185] [65] = true;
		 borderLine[0] [65] = true;
		 borderLine[185] [66] = true;
		 borderLine[0] [66] = true;
		 borderLine[185] [67] = true;
		 borderLine[0] [67] = true;
		 borderLine[185] [68] = true;
		 borderLine[0] [68] = true;
		 borderLine[185] [69] = true;
		 borderLine[0] [69] = true;
		 borderLine[185] [70] = true;
		 borderLine[0] [70] = true;
		 borderLine[185] [71] = true;
		 borderLine[0] [71] = true;
		 borderLine[185] [72] = true;
		 borderLine[0] [72] = true;
		 borderLine[185] [73] = true;
		 borderLine[0] [73] = true;
		 borderLine[185] [74] = true;
		 borderLine[0] [74] = true;
		 borderLine[185] [75] = true;
		 borderLine[0] [75] = true;
		 borderLine[185] [76] = true;
		 borderLine[0] [76] = true;
		 borderLine[185] [77] = true;
		 borderLine[0] [77] = true;
		 borderLine[185] [78] = true;
		 borderLine[0] [78] = true;
		 borderLine[185] [79] = true;
		 borderLine[0] [79] = true;
		 borderLine[185] [80] = true;
		 borderLine[0] [80] = true;
		 borderLine[185] [81] = true;
		 borderLine[0] [81] = true;
		 borderLine[185] [82] = true;
		 borderLine[0] [82] = true;
		 borderLine[185] [83] = true;
		 borderLine[0] [83] = true;
		 borderLine[185] [84] = true;
		 borderLine[0] [84] = true;
		 borderLine[185] [85] = true;
		 borderLine[0] [85] = true;
		 borderLine[185] [86] = true;
		 borderLine[0] [86] = true;
		 borderLine[185] [87] = true;
		 borderLine[0] [87] = true;
		 borderLine[185] [88] = true;
		 borderLine[0] [88] = true;
		 borderLine[185] [89] = true;
		 borderLine[0] [89] = true;
		 borderLine[185] [90] = true;
		 borderLine[0] [90] = true;
		 borderLine[185] [91] = true;
		 borderLine[0] [91] = true;
		 borderLine[185] [92] = true;
		 borderLine[0] [92] = true;
		 borderLine[185] [93] = true;
		 borderLine[0] [93] = true;
		 borderLine[185] [94] = true;
		 borderLine[0] [94] = true;
		 borderLine[185] [95] = true;
		 borderLine[0] [95] = true;
		 borderLine[185] [96] = true;
		 borderLine[0] [96] = true;
		 borderLine[185] [97] = true;
		 borderLine[0] [97] = true;
		 borderLine[185] [98] = true;
		 borderLine[0] [98] = true;
		 borderLine[185] [99] = true;
		 borderLine[0] [99] = true;
		 borderLine[185] [100] = true;
		 borderLine[0] [100] = true;
		 borderLine[185] [101] = true;
		 borderLine[0] [101] = true;
		 borderLine[185] [102] = true;
		 borderLine[0] [102] = true;
		 borderLine[185] [103] = true;
		 borderLine[0] [103] = true;
		 borderLine[185] [104] = true;
		 borderLine[0] [104] = true;
		 borderLine[185] [105] = true;
		 borderLine[0] [105] = true;
		 borderLine[185] [106] = true;
		 borderLine[0] [106] = true;
		 borderLine[185] [107] = true;
		 borderLine[0] [107] = true;
		 borderLine[185] [108] = true;
		 borderLine[0] [108] = true;
		 borderLine[185] [109] = true;
		 borderLine[0] [109] = true;
		 borderLine[185] [110] = true;
		 borderLine[0] [110] = true;
		 borderLine[185] [111] = true;
		 borderLine[0] [111] = true;
		 borderLine[185] [112] = true;
		 borderLine[0] [112] = true;
		 borderLine[185] [113] = true;
		 borderLine[0] [113] = true;
		 borderLine[185] [114] = true;
		 borderLine[0] [114] = true;
		 borderLine[185] [115] = true;
		 borderLine[0] [115] = true;
		 borderLine[185] [116] = true;
		 borderLine[0] [116] = true;
		 borderLine[185] [117] = true;
		 borderLine[0] [117] = true;
		 borderLine[185] [118] = true;
		 borderLine[0] [118] = true;
		 borderLine[185] [119] = true;
		 borderLine[0] [119] = true;
		 borderLine[185] [120] = true;
		 borderLine[0] [120] = true;
		 borderLine[185] [121] = true;
		 borderLine[0] [121] = true;
		 borderLine[185] [122] = true;
		 borderLine[0] [122] = true;
		 borderLine[185] [123] = true;
		 borderLine[0] [123] = true;
		 borderLine[185] [124] = true;
		 borderLine[0] [124] = true;
		 borderLine[185] [125] = true;
		 borderLine[0] [125] = true;
		 borderLine[185] [126] = true;
		 borderLine[0] [126] = true;
		 borderLine[185] [127] = true;
		 borderLine[0] [127] = true;
		 borderLine[185] [128] = true;
		 borderLine[0] [128] = true;
		 borderLine[185] [129] = true;
		 borderLine[0] [129] = true;
		 borderLine[185] [130] = true;
		 borderLine[0] [130] = true;
		 borderLine[185] [131] = true;
		 borderLine[0] [131] = true;
		 borderLine[185] [132] = true;
		 borderLine[0] [132] = true;
		 borderLine[185] [133] = true;
		 borderLine[0] [133] = true;
		 borderLine[185] [134] = true;
		 borderLine[0] [134] = true;
		 borderLine[185] [135] = true;
		 borderLine[0] [135] = true;
		 borderLine[185] [136] = true;
		 borderLine[0] [136] = true;
		 borderLine[185] [137] = true;
		 borderLine[0] [137] = true;
		 borderLine[185] [138] = true;
		 borderLine[0] [138] = true;
		 borderLine[185] [139] = true;
		 borderLine[0] [139] = true;
		 borderLine[185] [140] = true;
		 borderLine[0] [140] = true;
		 borderLine[185] [141] = true;
		 borderLine[0] [141] = true;
		 borderLine[185] [142] = true;
		 borderLine[0] [142] = true;
		 borderLine[185] [143] = true;
		 borderLine[0] [143] = true;
		 borderLine[185] [144] = true;
		 borderLine[0] [144] = true;
		 borderLine[185] [145] = true;
		 borderLine[0] [145] = true;
		 borderLine[185] [146] = true;
		 borderLine[0] [146] = true;
		 borderLine[185] [147] = true;
		 borderLine[0] [147] = true;
		 borderLine[185] [148] = true;
		 borderLine[0] [148] = true;
		 borderLine[185] [149] = true;
		 borderLine[0] [149] = true;
		 borderLine[185] [150] = true;
		 borderLine[0] [150] = true;
		 borderLine[185] [151] = true;
		 borderLine[0] [151] = true;
		 borderLine[185] [152] = true;
		 borderLine[0] [152] = true;
		 borderLine[185] [153] = true;
		 borderLine[0] [153] = true;
		 borderLine[185] [154] = true;
		 borderLine[0] [154] = true;
		 borderLine[439] [155] = true;
		 borderLine[438] [155] = true;
		 borderLine[437] [155] = true;
		 borderLine[436] [155] = true;
		 borderLine[435] [155] = true;
		 borderLine[434] [155] = true;
		 borderLine[433] [155] = true;
		 borderLine[432] [155] = true;
		 borderLine[431] [155] = true;
		 borderLine[430] [155] = true;
		 borderLine[429] [155] = true;
		 borderLine[428] [155] = true;
		 borderLine[427] [155] = true;
		 borderLine[426] [155] = true;
		 borderLine[425] [155] = true;
		 borderLine[424] [155] = true;
		 borderLine[423] [155] = true;
		 borderLine[422] [155] = true;
		 borderLine[421] [155] = true;
		 borderLine[420] [155] = true;
		 borderLine[419] [155] = true;
		 borderLine[418] [155] = true;
		 borderLine[417] [155] = true;
		 borderLine[416] [155] = true;
		 borderLine[415] [155] = true;
		 borderLine[414] [155] = true;
		 borderLine[413] [155] = true;
		 borderLine[412] [155] = true;
		 borderLine[411] [155] = true;
		 borderLine[410] [155] = true;
		 borderLine[409] [155] = true;
		 borderLine[408] [155] = true;
		 borderLine[407] [155] = true;
		 borderLine[406] [155] = true;
		 borderLine[405] [155] = true;
		 borderLine[404] [155] = true;
		 borderLine[403] [155] = true;
		 borderLine[402] [155] = true;
		 borderLine[401] [155] = true;
		 borderLine[400] [155] = true;
		 borderLine[399] [155] = true;
		 borderLine[398] [155] = true;
		 borderLine[397] [155] = true;
		 borderLine[396] [155] = true;
		 borderLine[395] [155] = true;
		 borderLine[394] [155] = true;
		 borderLine[393] [155] = true;
		 borderLine[392] [155] = true;
		 borderLine[391] [155] = true;
		 borderLine[390] [155] = true;
		 borderLine[389] [155] = true;
		 borderLine[388] [155] = true;
		 borderLine[387] [155] = true;
		 borderLine[386] [155] = true;
		 borderLine[385] [155] = true;
		 borderLine[384] [155] = true;
		 borderLine[383] [155] = true;
		 borderLine[382] [155] = true;
		 borderLine[381] [155] = true;
		 borderLine[380] [155] = true;
		 borderLine[379] [155] = true;
		 borderLine[378] [155] = true;
		 borderLine[377] [155] = true;
		 borderLine[376] [155] = true;
		 borderLine[375] [155] = true;
		 borderLine[374] [155] = true;
		 borderLine[373] [155] = true;
		 borderLine[372] [155] = true;
		 borderLine[371] [155] = true;
		 borderLine[370] [155] = true;
		 borderLine[369] [155] = true;
		 borderLine[368] [155] = true;
		 borderLine[367] [155] = true;
		 borderLine[366] [155] = true;
		 borderLine[365] [155] = true;
		 borderLine[364] [155] = true;
		 borderLine[363] [155] = true;
		 borderLine[362] [155] = true;
		 borderLine[361] [155] = true;
		 borderLine[360] [155] = true;
		 borderLine[359] [155] = true;
		 borderLine[358] [155] = true;
		 borderLine[357] [155] = true;
		 borderLine[356] [155] = true;
		 borderLine[355] [155] = true;
		 borderLine[354] [155] = true;
		 borderLine[353] [155] = true;
		 borderLine[352] [155] = true;
		 borderLine[351] [155] = true;
		 borderLine[350] [155] = true;
		 borderLine[349] [155] = true;
		 borderLine[348] [155] = true;
		 borderLine[347] [155] = true;
		 borderLine[346] [155] = true;
		 borderLine[345] [155] = true;
		 borderLine[344] [155] = true;
		 borderLine[343] [155] = true;
		 borderLine[342] [155] = true;
		 borderLine[341] [155] = true;
		 borderLine[340] [155] = true;
		 borderLine[339] [155] = true;
		 borderLine[338] [155] = true;
		 borderLine[337] [155] = true;
		 borderLine[336] [155] = true;
		 borderLine[335] [155] = true;
		 borderLine[334] [155] = true;
		 borderLine[333] [155] = true;
		 borderLine[332] [155] = true;
		 borderLine[331] [155] = true;
		 borderLine[330] [155] = true;
		 borderLine[329] [155] = true;
		 borderLine[328] [155] = true;
		 borderLine[327] [155] = true;
		 borderLine[326] [155] = true;
		 borderLine[325] [155] = true;
		 borderLine[324] [155] = true;
		 borderLine[323] [155] = true;
		 borderLine[322] [155] = true;
		 borderLine[321] [155] = true;
		 borderLine[320] [155] = true;
		 borderLine[319] [155] = true;
		 borderLine[318] [155] = true;
		 borderLine[317] [155] = true;
		 borderLine[316] [155] = true;
		 borderLine[315] [155] = true;
		 borderLine[314] [155] = true;
		 borderLine[313] [155] = true;
		 borderLine[312] [155] = true;
		 borderLine[311] [155] = true;
		 borderLine[310] [155] = true;
		 borderLine[309] [155] = true;
		 borderLine[308] [155] = true;
		 borderLine[307] [155] = true;
		 borderLine[306] [155] = true;
		 borderLine[305] [155] = true;
		 borderLine[304] [155] = true;
		 borderLine[303] [155] = true;
		 borderLine[302] [155] = true;
		 borderLine[301] [155] = true;
		 borderLine[300] [155] = true;
		 borderLine[299] [155] = true;
		 borderLine[298] [155] = true;
		 borderLine[297] [155] = true;
		 borderLine[296] [155] = true;
		 borderLine[295] [155] = true;
		 borderLine[294] [155] = true;
		 borderLine[293] [155] = true;
		 borderLine[292] [155] = true;
		 borderLine[291] [155] = true;
		 borderLine[290] [155] = true;
		 borderLine[289] [155] = true;
		 borderLine[288] [155] = true;
		 borderLine[287] [155] = true;
		 borderLine[286] [155] = true;
		 borderLine[285] [155] = true;
		 borderLine[284] [155] = true;
		 borderLine[283] [155] = true;
		 borderLine[282] [155] = true;
		 borderLine[281] [155] = true;
		 borderLine[280] [155] = true;
		 borderLine[279] [155] = true;
		 borderLine[278] [155] = true;
		 borderLine[277] [155] = true;
		 borderLine[276] [155] = true;
		 borderLine[275] [155] = true;
		 borderLine[274] [155] = true;
		 borderLine[273] [155] = true;
		 borderLine[272] [155] = true;
		 borderLine[271] [155] = true;
		 borderLine[270] [155] = true;
		 borderLine[269] [155] = true;
		 borderLine[268] [155] = true;
		 borderLine[267] [155] = true;
		 borderLine[266] [155] = true;
		 borderLine[265] [155] = true;
		 borderLine[264] [155] = true;
		 borderLine[263] [155] = true;
		 borderLine[262] [155] = true;
		 borderLine[261] [155] = true;
		 borderLine[260] [155] = true;
		 borderLine[259] [155] = true;
		 borderLine[258] [155] = true;
		 borderLine[257] [155] = true;
		 borderLine[256] [155] = true;
		 borderLine[255] [155] = true;
		 borderLine[254] [155] = true;
		 borderLine[253] [155] = true;
		 borderLine[252] [155] = true;
		 borderLine[251] [155] = true;
		 borderLine[250] [155] = true;
		 borderLine[249] [155] = true;
		 borderLine[248] [155] = true;
		 borderLine[247] [155] = true;
		 borderLine[246] [155] = true;
		 borderLine[245] [155] = true;
		 borderLine[244] [155] = true;
		 borderLine[243] [155] = true;
		 borderLine[242] [155] = true;
		 borderLine[241] [155] = true;
		 borderLine[240] [155] = true;
		 borderLine[239] [155] = true;
		 borderLine[238] [155] = true;
		 borderLine[237] [155] = true;
		 borderLine[236] [155] = true;
		 borderLine[235] [155] = true;
		 borderLine[234] [155] = true;
		 borderLine[233] [155] = true;
		 borderLine[232] [155] = true;
		 borderLine[231] [155] = true;
		 borderLine[230] [155] = true;
		 borderLine[229] [155] = true;
		 borderLine[228] [155] = true;
		 borderLine[227] [155] = true;
		 borderLine[226] [155] = true;
		 borderLine[225] [155] = true;
		 borderLine[224] [155] = true;
		 borderLine[223] [155] = true;
		 borderLine[222] [155] = true;
		 borderLine[221] [155] = true;
		 borderLine[220] [155] = true;
		 borderLine[219] [155] = true;
		 borderLine[218] [155] = true;
		 borderLine[217] [155] = true;
		 borderLine[216] [155] = true;
		 borderLine[215] [155] = true;
		 borderLine[214] [155] = true;
		 borderLine[213] [155] = true;
		 borderLine[212] [155] = true;
		 borderLine[211] [155] = true;
		 borderLine[210] [155] = true;
		 borderLine[209] [155] = true;
		 borderLine[208] [155] = true;
		 borderLine[207] [155] = true;
		 borderLine[206] [155] = true;
		 borderLine[205] [155] = true;
		 borderLine[204] [155] = true;
		 borderLine[203] [155] = true;
		 borderLine[202] [155] = true;
		 borderLine[201] [155] = true;
		 borderLine[200] [155] = true;
		 borderLine[199] [155] = true;
		 borderLine[198] [155] = true;
		 borderLine[197] [155] = true;
		 borderLine[196] [155] = true;
		 borderLine[195] [155] = true;
		 borderLine[194] [155] = true;
		 borderLine[193] [155] = true;
		 borderLine[192] [155] = true;
		 borderLine[191] [155] = true;
		 borderLine[190] [155] = true;
		 borderLine[189] [155] = true;
		 borderLine[188] [155] = true;
		 borderLine[187] [155] = true;
		 borderLine[186] [155] = true;
		 borderLine[185] [155] = true;
		 borderLine[0] [155] = true;
		 borderLine[439] [156] = true;
		 borderLine[0] [156] = true;
		 borderLine[439] [157] = true;
		 borderLine[0] [157] = true;
		 borderLine[439] [158] = true;
		 borderLine[0] [158] = true;
		 borderLine[439] [159] = true;
		 borderLine[0] [159] = true;
		 borderLine[439] [160] = true;
		 borderLine[0] [160] = true;
		 borderLine[439] [161] = true;
		 borderLine[0] [161] = true;
		 borderLine[439] [162] = true;
		 borderLine[0] [162] = true;
		 borderLine[439] [163] = true;
		 borderLine[0] [163] = true;
		 borderLine[439] [164] = true;
		 borderLine[0] [164] = true;
		 borderLine[439] [165] = true;
		 borderLine[0] [165] = true;
		 borderLine[439] [166] = true;
		 borderLine[0] [166] = true;
		 borderLine[439] [167] = true;
		 borderLine[0] [167] = true;
		 borderLine[439] [168] = true;
		 borderLine[0] [168] = true;
		 borderLine[439] [169] = true;
		 borderLine[0] [169] = true;
		 borderLine[439] [170] = true;
		 borderLine[0] [170] = true;
		 borderLine[439] [171] = true;
		 borderLine[0] [171] = true;
		 borderLine[439] [172] = true;
		 borderLine[0] [172] = true;
		 borderLine[439] [173] = true;
		 borderLine[0] [173] = true;
		 borderLine[439] [174] = true;
		 borderLine[0] [174] = true;
		 borderLine[439] [175] = true;
		 borderLine[0] [175] = true;
		 borderLine[439] [176] = true;
		 borderLine[0] [176] = true;
		 borderLine[439] [177] = true;
		 borderLine[0] [177] = true;
		 borderLine[439] [178] = true;
		 borderLine[0] [178] = true;
		 borderLine[439] [179] = true;
		 borderLine[0] [179] = true;
		 borderLine[439] [180] = true;
		 borderLine[0] [180] = true;
		 borderLine[439] [181] = true;
		 borderLine[0] [181] = true;
		 borderLine[439] [182] = true;
		 borderLine[0] [182] = true;
		 borderLine[439] [183] = true;
		 borderLine[0] [183] = true;
		 borderLine[439] [184] = true;
		 borderLine[0] [184] = true;
		 borderLine[439] [185] = true;
		 borderLine[0] [185] = true;
		 borderLine[439] [186] = true;
		 borderLine[0] [186] = true;
		 borderLine[439] [187] = true;
		 borderLine[0] [187] = true;
		 borderLine[439] [188] = true;
		 borderLine[0] [188] = true;
		 borderLine[439] [189] = true;
		 borderLine[0] [189] = true;
		 borderLine[439] [190] = true;
		 borderLine[0] [190] = true;
		 borderLine[439] [191] = true;
		 borderLine[0] [191] = true;
		 borderLine[439] [192] = true;
		 borderLine[0] [192] = true;
		 borderLine[439] [193] = true;
		 borderLine[0] [193] = true;
		 borderLine[439] [194] = true;
		 borderLine[0] [194] = true;
		 borderLine[439] [195] = true;
		 borderLine[0] [195] = true;
		 borderLine[439] [196] = true;
		 borderLine[0] [196] = true;
		 borderLine[439] [197] = true;
		 borderLine[0] [197] = true;
		 borderLine[439] [198] = true;
		 borderLine[0] [198] = true;
		 borderLine[439] [199] = true;
		 borderLine[0] [199] = true;
		 borderLine[439] [200] = true;
		 borderLine[0] [200] = true;
		 borderLine[439] [201] = true;
		 borderLine[0] [201] = true;
		 borderLine[439] [202] = true;
		 borderLine[0] [202] = true;
		 borderLine[439] [203] = true;
		 borderLine[0] [203] = true;
		 borderLine[439] [204] = true;
		 borderLine[0] [204] = true;
		 borderLine[439] [205] = true;
		 borderLine[0] [205] = true;
		 borderLine[439] [206] = true;
		 borderLine[0] [206] = true;
		 borderLine[439] [207] = true;
		 borderLine[0] [207] = true;
		 borderLine[439] [208] = true;
		 borderLine[0] [208] = true;
		 borderLine[439] [209] = true;
		 borderLine[0] [209] = true;
		 borderLine[439] [210] = true;
		 borderLine[0] [210] = true;
		 borderLine[439] [211] = true;
		 borderLine[0] [211] = true;
		 borderLine[439] [212] = true;
		 borderLine[0] [212] = true;
		 borderLine[439] [213] = true;
		 borderLine[0] [213] = true;
		 borderLine[439] [214] = true;
		 borderLine[0] [214] = true;
		 borderLine[439] [215] = true;
		 borderLine[0] [215] = true;
		 borderLine[439] [216] = true;
		 borderLine[0] [216] = true;
		 borderLine[439] [217] = true;
		 borderLine[0] [217] = true;
		 borderLine[439] [218] = true;
		 borderLine[0] [218] = true;
		 borderLine[439] [219] = true;
		 borderLine[0] [219] = true;
		 borderLine[439] [220] = true;
		 borderLine[0] [220] = true;
		 borderLine[439] [221] = true;
		 borderLine[0] [221] = true;
		 borderLine[439] [222] = true;
		 borderLine[0] [222] = true;
		 borderLine[439] [223] = true;
		 borderLine[0] [223] = true;
		 borderLine[439] [224] = true;
		 borderLine[0] [224] = true;
		 borderLine[439] [225] = true;
		 borderLine[0] [225] = true;
		 borderLine[439] [226] = true;
		 borderLine[0] [226] = true;
		 borderLine[439] [227] = true;
		 borderLine[0] [227] = true;
		 borderLine[439] [228] = true;
		 borderLine[0] [228] = true;
		 borderLine[439] [229] = true;
		 borderLine[0] [229] = true;
		 borderLine[439] [230] = true;
		 borderLine[0] [230] = true;
		 borderLine[439] [231] = true;
		 borderLine[0] [231] = true;
		 borderLine[439] [232] = true;
		 borderLine[0] [232] = true;
		 borderLine[439] [233] = true;
		 borderLine[0] [233] = true;
		 borderLine[439] [234] = true;
		 borderLine[0] [234] = true;
		 borderLine[439] [235] = true;
		 borderLine[0] [235] = true;
		 borderLine[439] [236] = true;
		 borderLine[0] [236] = true;
		 borderLine[439] [237] = true;
		 borderLine[0] [237] = true;
		 borderLine[439] [238] = true;
		 borderLine[0] [238] = true;
		 borderLine[439] [239] = true;
		 borderLine[0] [239] = true;
		 borderLine[439] [240] = true;
		 borderLine[0] [240] = true;
		 borderLine[439] [241] = true;
		 borderLine[0] [241] = true;
		 borderLine[439] [242] = true;
		 borderLine[0] [242] = true;
		 borderLine[439] [243] = true;
		 borderLine[0] [243] = true;
		 borderLine[439] [244] = true;
		 borderLine[0] [244] = true;
		 borderLine[439] [245] = true;
		 borderLine[0] [245] = true;
		 borderLine[439] [246] = true;
		 borderLine[0] [246] = true;
		 borderLine[439] [247] = true;
		 borderLine[0] [247] = true;
		 borderLine[439] [248] = true;
		 borderLine[0] [248] = true;
		 borderLine[439] [249] = true;
		 borderLine[0] [249] = true;
		 borderLine[439] [250] = true;
		 borderLine[0] [250] = true;
		 borderLine[439] [251] = true;
		 borderLine[0] [251] = true;
		 borderLine[439] [252] = true;
		 borderLine[0] [252] = true;
		 borderLine[439] [253] = true;
		 borderLine[0] [253] = true;
		 borderLine[439] [254] = true;
		 borderLine[0] [254] = true;
		 borderLine[439] [255] = true;
		 borderLine[0] [255] = true;
		 borderLine[439] [256] = true;
		 borderLine[0] [256] = true;
		 borderLine[439] [257] = true;
		 borderLine[0] [257] = true;
		 borderLine[439] [258] = true;
		 borderLine[0] [258] = true;
		 borderLine[439] [259] = true;
		 borderLine[0] [259] = true;
		 borderLine[439] [260] = true;
		 borderLine[0] [260] = true;
		 borderLine[439] [261] = true;
		 borderLine[0] [261] = true;
		 borderLine[439] [262] = true;
		 borderLine[0] [262] = true;
		 borderLine[439] [263] = true;
		 borderLine[0] [263] = true;
		 borderLine[439] [264] = true;
		 borderLine[0] [264] = true;
		 borderLine[439] [265] = true;
		 borderLine[0] [265] = true;
		 borderLine[439] [266] = true;
		 borderLine[0] [266] = true;
		 borderLine[439] [267] = true;
		 borderLine[0] [267] = true;
		 borderLine[439] [268] = true;
		 borderLine[0] [268] = true;
		 borderLine[439] [269] = true;
		 borderLine[0] [269] = true;
		 borderLine[439] [270] = true;
		 borderLine[0] [270] = true;
		 borderLine[439] [271] = true;
		 borderLine[0] [271] = true;
		 borderLine[439] [272] = true;
		 borderLine[0] [272] = true;
		 borderLine[439] [273] = true;
		 borderLine[0] [273] = true;
		 borderLine[439] [274] = true;
		 borderLine[0] [274] = true;
		 borderLine[439] [275] = true;
		 borderLine[0] [275] = true;
		 borderLine[439] [276] = true;
		 borderLine[0] [276] = true;
		 borderLine[439] [277] = true;
		 borderLine[0] [277] = true;
		 borderLine[439] [278] = true;
		 borderLine[0] [278] = true;
		 borderLine[439] [279] = true;
		 borderLine[0] [279] = true;
		 borderLine[439] [280] = true;
		 borderLine[0] [280] = true;
		 borderLine[439] [281] = true;
		 borderLine[0] [281] = true;
		 borderLine[439] [282] = true;
		 borderLine[0] [282] = true;
		 borderLine[439] [283] = true;
		 borderLine[0] [283] = true;
		 borderLine[439] [284] = true;
		 borderLine[0] [284] = true;
		 borderLine[439] [285] = true;
		 borderLine[0] [285] = true;
		 borderLine[439] [286] = true;
		 borderLine[0] [286] = true;
		 borderLine[439] [287] = true;
		 borderLine[0] [287] = true;
		 borderLine[439] [288] = true;
		 borderLine[0] [288] = true;
		 borderLine[439] [289] = true;
		 borderLine[0] [289] = true;
		 borderLine[439] [290] = true;
		 borderLine[0] [290] = true;
		 borderLine[439] [291] = true;
		 borderLine[0] [291] = true;
		 borderLine[439] [292] = true;
		 borderLine[0] [292] = true;
		 borderLine[439] [293] = true;
		 borderLine[0] [293] = true;
		 borderLine[439] [294] = true;
		 borderLine[326] [294] = true;
		 borderLine[325] [294] = true;
		 borderLine[324] [294] = true;
		 borderLine[323] [294] = true;
		 borderLine[322] [294] = true;
		 borderLine[321] [294] = true;
		 borderLine[320] [294] = true;
		 borderLine[319] [294] = true;
		 borderLine[318] [294] = true;
		 borderLine[317] [294] = true;
		 borderLine[316] [294] = true;
		 borderLine[315] [294] = true;
		 borderLine[314] [294] = true;
		 borderLine[313] [294] = true;
		 borderLine[312] [294] = true;
		 borderLine[311] [294] = true;
		 borderLine[310] [294] = true;
		 borderLine[309] [294] = true;
		 borderLine[308] [294] = true;
		 borderLine[307] [294] = true;
		 borderLine[306] [294] = true;
		 borderLine[305] [294] = true;
		 borderLine[304] [294] = true;
		 borderLine[303] [294] = true;
		 borderLine[302] [294] = true;
		 borderLine[301] [294] = true;
		 borderLine[300] [294] = true;
		 borderLine[299] [294] = true;
		 borderLine[298] [294] = true;
		 borderLine[297] [294] = true;
		 borderLine[296] [294] = true;
		 borderLine[295] [294] = true;
		 borderLine[294] [294] = true;
		 borderLine[293] [294] = true;
		 borderLine[292] [294] = true;
		 borderLine[291] [294] = true;
		 borderLine[290] [294] = true;
		 borderLine[289] [294] = true;
		 borderLine[288] [294] = true;
		 borderLine[287] [294] = true;
		 borderLine[286] [294] = true;
		 borderLine[285] [294] = true;
		 borderLine[284] [294] = true;
		 borderLine[283] [294] = true;
		 borderLine[282] [294] = true;
		 borderLine[281] [294] = true;
		 borderLine[280] [294] = true;
		 borderLine[279] [294] = true;
		 borderLine[278] [294] = true;
		 borderLine[277] [294] = true;
		 borderLine[276] [294] = true;
		 borderLine[275] [294] = true;
		 borderLine[274] [294] = true;
		 borderLine[273] [294] = true;
		 borderLine[272] [294] = true;
		 borderLine[271] [294] = true;
		 borderLine[270] [294] = true;
		 borderLine[269] [294] = true;
		 borderLine[268] [294] = true;
		 borderLine[267] [294] = true;
		 borderLine[266] [294] = true;
		 borderLine[265] [294] = true;
		 borderLine[264] [294] = true;
		 borderLine[263] [294] = true;
		 borderLine[262] [294] = true;
		 borderLine[261] [294] = true;
		 borderLine[260] [294] = true;
		 borderLine[259] [294] = true;
		 borderLine[258] [294] = true;
		 borderLine[257] [294] = true;
		 borderLine[256] [294] = true;
		 borderLine[255] [294] = true;
		 borderLine[254] [294] = true;
		 borderLine[253] [294] = true;
		 borderLine[252] [294] = true;
		 borderLine[251] [294] = true;
		 borderLine[250] [294] = true;
		 borderLine[249] [294] = true;
		 borderLine[248] [294] = true;
		 borderLine[247] [294] = true;
		 borderLine[246] [294] = true;
		 borderLine[245] [294] = true;
		 borderLine[244] [294] = true;
		 borderLine[243] [294] = true;
		 borderLine[242] [294] = true;
		 borderLine[241] [294] = true;
		 borderLine[240] [294] = true;
		 borderLine[239] [294] = true;
		 borderLine[238] [294] = true;
		 borderLine[237] [294] = true;
		 borderLine[236] [294] = true;
		 borderLine[235] [294] = true;
		 borderLine[234] [294] = true;
		 borderLine[233] [294] = true;
		 borderLine[232] [294] = true;
		 borderLine[231] [294] = true;
		 borderLine[230] [294] = true;
		 borderLine[229] [294] = true;
		 borderLine[228] [294] = true;
		 borderLine[227] [294] = true;
		 borderLine[226] [294] = true;
		 borderLine[225] [294] = true;
		 borderLine[224] [294] = true;
		 borderLine[223] [294] = true;
		 borderLine[222] [294] = true;
		 borderLine[221] [294] = true;
		 borderLine[220] [294] = true;
		 borderLine[219] [294] = true;
		 borderLine[218] [294] = true;
		 borderLine[217] [294] = true;
		 borderLine[216] [294] = true;
		 borderLine[215] [294] = true;
		 borderLine[214] [294] = true;
		 borderLine[213] [294] = true;
		 borderLine[212] [294] = true;
		 borderLine[211] [294] = true;
		 borderLine[210] [294] = true;
		 borderLine[209] [294] = true;
		 borderLine[208] [294] = true;
		 borderLine[207] [294] = true;
		 borderLine[206] [294] = true;
		 borderLine[205] [294] = true;
		 borderLine[204] [294] = true;
		 borderLine[203] [294] = true;
		 borderLine[202] [294] = true;
		 borderLine[201] [294] = true;
		 borderLine[200] [294] = true;
		 borderLine[199] [294] = true;
		 borderLine[198] [294] = true;
		 borderLine[197] [294] = true;
		 borderLine[196] [294] = true;
		 borderLine[195] [294] = true;
		 borderLine[194] [294] = true;
		 borderLine[193] [294] = true;
		 borderLine[192] [294] = true;
		 borderLine[191] [294] = true;
		 borderLine[190] [294] = true;
		 borderLine[189] [294] = true;
		 borderLine[188] [294] = true;
		 borderLine[187] [294] = true;
		 borderLine[186] [294] = true;
		 borderLine[185] [294] = true;
		 borderLine[184] [294] = true;
		 borderLine[183] [294] = true;
		 borderLine[182] [294] = true;
		 borderLine[181] [294] = true;
		 borderLine[180] [294] = true;
		 borderLine[179] [294] = true;
		 borderLine[178] [294] = true;
		 borderLine[177] [294] = true;
		 borderLine[176] [294] = true;
		 borderLine[175] [294] = true;
		 borderLine[174] [294] = true;
		 borderLine[173] [294] = true;
		 borderLine[172] [294] = true;
		 borderLine[171] [294] = true;
		 borderLine[170] [294] = true;
		 borderLine[169] [294] = true;
		 borderLine[168] [294] = true;
		 borderLine[167] [294] = true;
		 borderLine[166] [294] = true;
		 borderLine[165] [294] = true;
		 borderLine[164] [294] = true;
		 borderLine[163] [294] = true;
		 borderLine[162] [294] = true;
		 borderLine[161] [294] = true;
		 borderLine[160] [294] = true;
		 borderLine[159] [294] = true;
		 borderLine[158] [294] = true;
		 borderLine[157] [294] = true;
		 borderLine[156] [294] = true;
		 borderLine[155] [294] = true;
		 borderLine[154] [294] = true;
		 borderLine[153] [294] = true;

		 }

		 private void Add2() {
		 borderLine[152] [294] = true;
		 borderLine[151] [294] = true;
		 borderLine[150] [294] = true;
		 borderLine[149] [294] = true;
		 borderLine[148] [294] = true;
		 borderLine[147] [294] = true;
		 borderLine[146] [294] = true;
		 borderLine[145] [294] = true;
		 borderLine[144] [294] = true;
		 borderLine[143] [294] = true;
		 borderLine[142] [294] = true;
		 borderLine[141] [294] = true;
		 borderLine[140] [294] = true;
		 borderLine[139] [294] = true;
		 borderLine[138] [294] = true;
		 borderLine[137] [294] = true;
		 borderLine[136] [294] = true;
		 borderLine[135] [294] = true;
		 borderLine[134] [294] = true;
		 borderLine[133] [294] = true;
		 borderLine[132] [294] = true;
		 borderLine[131] [294] = true;
		 borderLine[130] [294] = true;
		 borderLine[129] [294] = true;
		 borderLine[128] [294] = true;
		 borderLine[127] [294] = true;
		 borderLine[126] [294] = true;
		 borderLine[125] [294] = true;
		 borderLine[124] [294] = true;
		 borderLine[123] [294] = true;
		 borderLine[122] [294] = true;
		 borderLine[121] [294] = true;
		 borderLine[120] [294] = true;
		 borderLine[119] [294] = true;
		 borderLine[118] [294] = true;
		 borderLine[117] [294] = true;
		 borderLine[116] [294] = true;
		 borderLine[115] [294] = true;
		 borderLine[114] [294] = true;
		 borderLine[113] [294] = true;
		 borderLine[112] [294] = true;
		 borderLine[111] [294] = true;
		 borderLine[110] [294] = true;
		 borderLine[109] [294] = true;
		 borderLine[108] [294] = true;
		 borderLine[107] [294] = true;
		 borderLine[106] [294] = true;
		 borderLine[105] [294] = true;
		 borderLine[104] [294] = true;
		 borderLine[103] [294] = true;
		 borderLine[102] [294] = true;
		 borderLine[101] [294] = true;
		 borderLine[100] [294] = true;
		 borderLine[99] [294] = true;
		 borderLine[98] [294] = true;
		 borderLine[97] [294] = true;
		 borderLine[96] [294] = true;
		 borderLine[95] [294] = true;
		 borderLine[94] [294] = true;
		 borderLine[93] [294] = true;
		 borderLine[92] [294] = true;
		 borderLine[91] [294] = true;
		 borderLine[90] [294] = true;
		 borderLine[89] [294] = true;
		 borderLine[88] [294] = true;
		 borderLine[87] [294] = true;
		 borderLine[86] [294] = true;
		 borderLine[85] [294] = true;
		 borderLine[84] [294] = true;
		 borderLine[83] [294] = true;
		 borderLine[82] [294] = true;
		 borderLine[81] [294] = true;
		 borderLine[80] [294] = true;
		 borderLine[79] [294] = true;
		 borderLine[78] [294] = true;
		 borderLine[77] [294] = true;
		 borderLine[76] [294] = true;
		 borderLine[75] [294] = true;
		 borderLine[74] [294] = true;
		 borderLine[73] [294] = true;
		 borderLine[72] [294] = true;
		 borderLine[71] [294] = true;
		 borderLine[70] [294] = true;
		 borderLine[69] [294] = true;
		 borderLine[68] [294] = true;
		 borderLine[67] [294] = true;
		 borderLine[66] [294] = true;
		 borderLine[65] [294] = true;
		 borderLine[64] [294] = true;
		 borderLine[63] [294] = true;
		 borderLine[62] [294] = true;
		 borderLine[61] [294] = true;
		 borderLine[60] [294] = true;
		 borderLine[59] [294] = true;
		 borderLine[58] [294] = true;
		 borderLine[57] [294] = true;
		 borderLine[56] [294] = true;
		 borderLine[55] [294] = true;
		 borderLine[54] [294] = true;
		 borderLine[53] [294] = true;
		 borderLine[52] [294] = true;
		 borderLine[51] [294] = true;
		 borderLine[50] [294] = true;
		 borderLine[49] [294] = true;
		 borderLine[48] [294] = true;
		 borderLine[47] [294] = true;
		 borderLine[46] [294] = true;
		 borderLine[45] [294] = true;
		 borderLine[44] [294] = true;
		 borderLine[43] [294] = true;
		 borderLine[42] [294] = true;
		 borderLine[41] [294] = true;
		 borderLine[40] [294] = true;
		 borderLine[39] [294] = true;
		 borderLine[38] [294] = true;
		 borderLine[37] [294] = true;
		 borderLine[36] [294] = true;
		 borderLine[35] [294] = true;
		 borderLine[34] [294] = true;
		 borderLine[33] [294] = true;
		 borderLine[32] [294] = true;
		 borderLine[31] [294] = true;
		 borderLine[30] [294] = true;
		 borderLine[29] [294] = true;
		 borderLine[28] [294] = true;
		 borderLine[27] [294] = true;
		 borderLine[26] [294] = true;
		 borderLine[25] [294] = true;
		 borderLine[24] [294] = true;
		 borderLine[23] [294] = true;
		 borderLine[22] [294] = true;
		 borderLine[21] [294] = true;
		 borderLine[20] [294] = true;
		 borderLine[19] [294] = true;
		 borderLine[18] [294] = true;
		 borderLine[17] [294] = true;
		 borderLine[16] [294] = true;
		 borderLine[15] [294] = true;
		 borderLine[14] [294] = true;
		 borderLine[13] [294] = true;
		 borderLine[12] [294] = true;
		 borderLine[11] [294] = true;
		 borderLine[10] [294] = true;
		 borderLine[9] [294] = true;
		 borderLine[8] [294] = true;
		 borderLine[7] [294] = true;
		 borderLine[6] [294] = true;
		 borderLine[5] [294] = true;
		 borderLine[4] [294] = true;
		 borderLine[3] [294] = true;
		 borderLine[2] [294] = true;
		 borderLine[1] [294] = true;
		 borderLine[0] [294] = true;
		 borderLine[439] [295] = true;
		 borderLine[326] [295] = true;
		 borderLine[439] [296] = true;
		 borderLine[326] [296] = true;
		 borderLine[439] [297] = true;
		 borderLine[326] [297] = true;
		 borderLine[439] [298] = true;
		 borderLine[326] [298] = true;
		 borderLine[439] [299] = true;
		 borderLine[326] [299] = true;
		 borderLine[439] [300] = true;
		 borderLine[326] [300] = true;
		 borderLine[439] [301] = true;
		 borderLine[326] [301] = true;
		 borderLine[439] [302] = true;
		 borderLine[326] [302] = true;
		 borderLine[439] [303] = true;
		 borderLine[326] [303] = true;
		 borderLine[439] [304] = true;
		 borderLine[326] [304] = true;
		 borderLine[439] [305] = true;
		 borderLine[326] [305] = true;
		 borderLine[439] [306] = true;
		 borderLine[326] [306] = true;
		 borderLine[439] [307] = true;
		 borderLine[326] [307] = true;
		 borderLine[439] [308] = true;
		 borderLine[326] [308] = true;
		 borderLine[439] [309] = true;
		 borderLine[326] [309] = true;
		 borderLine[439] [310] = true;
		 borderLine[326] [310] = true;
		 borderLine[439] [311] = true;
		 borderLine[326] [311] = true;
		 borderLine[439] [312] = true;
		 borderLine[326] [312] = true;
		 borderLine[439] [313] = true;
		 borderLine[326] [313] = true;
		 borderLine[439] [314] = true;
		 borderLine[326] [314] = true;
		 borderLine[439] [315] = true;
		 borderLine[326] [315] = true;
		 borderLine[439] [316] = true;
		 borderLine[326] [316] = true;
		 borderLine[439] [317] = true;
		 borderLine[326] [317] = true;
		 borderLine[439] [318] = true;
		 borderLine[326] [318] = true;
		 borderLine[439] [319] = true;
		 borderLine[326] [319] = true;
		 borderLine[439] [320] = true;
		 borderLine[326] [320] = true;
		 borderLine[439] [321] = true;
		 borderLine[326] [321] = true;
		 borderLine[439] [322] = true;
		 borderLine[326] [322] = true;
		 borderLine[439] [323] = true;
		 borderLine[326] [323] = true;
		 borderLine[439] [324] = true;
		 borderLine[326] [324] = true;
		 borderLine[439] [325] = true;
		 borderLine[326] [325] = true;
		 borderLine[439] [326] = true;
		 borderLine[326] [326] = true;
		 borderLine[439] [327] = true;
		 borderLine[326] [327] = true;
		 borderLine[439] [328] = true;
		 borderLine[326] [328] = true;
		 borderLine[439] [329] = true;
		 borderLine[326] [329] = true;
		 borderLine[439] [330] = true;
		 borderLine[326] [330] = true;
		 borderLine[439] [331] = true;
		 borderLine[326] [331] = true;
		 borderLine[439] [332] = true;
		 borderLine[326] [332] = true;
		 borderLine[439] [333] = true;
		 borderLine[326] [333] = true;
		 borderLine[439] [334] = true;
		 borderLine[326] [334] = true;
		 borderLine[439] [335] = true;
		 borderLine[326] [335] = true;
		 borderLine[439] [336] = true;
		 borderLine[326] [336] = true;
		 borderLine[439] [337] = true;
		 borderLine[326] [337] = true;
		 borderLine[439] [338] = true;
		 borderLine[326] [338] = true;
		 borderLine[439] [339] = true;
		 borderLine[326] [339] = true;
		 borderLine[439] [340] = true;
		 borderLine[326] [340] = true;
		 borderLine[439] [341] = true;
		 borderLine[326] [341] = true;
		 borderLine[439] [342] = true;
		 borderLine[326] [342] = true;
		 borderLine[439] [343] = true;
		 borderLine[326] [343] = true;
		 borderLine[439] [344] = true;
		 borderLine[326] [344] = true;
		 borderLine[439] [345] = true;
		 borderLine[326] [345] = true;
		 borderLine[439] [346] = true;
		 borderLine[326] [346] = true;
		 borderLine[439] [347] = true;
		 borderLine[326] [347] = true;
		 borderLine[439] [348] = true;
		 borderLine[326] [348] = true;
		 borderLine[439] [349] = true;
		 borderLine[326] [349] = true;
		 borderLine[439] [350] = true;
		 borderLine[326] [350] = true;
		 borderLine[439] [351] = true;
		 borderLine[326] [351] = true;
		 borderLine[439] [352] = true;
		 borderLine[326] [352] = true;
		 borderLine[439] [353] = true;
		 borderLine[326] [353] = true;
		 borderLine[439] [354] = true;
		 borderLine[326] [354] = true;
		 borderLine[439] [355] = true;
		 borderLine[326] [355] = true;
		 borderLine[439] [356] = true;
		 borderLine[326] [356] = true;
		 borderLine[439] [357] = true;
		 borderLine[326] [357] = true;
		 borderLine[439] [358] = true;
		 borderLine[326] [358] = true;
		 borderLine[439] [359] = true;
		 borderLine[326] [359] = true;
		 borderLine[439] [360] = true;
		 borderLine[326] [360] = true;
		 borderLine[439] [361] = true;
		 borderLine[326] [361] = true;
		 borderLine[439] [362] = true;
		 borderLine[326] [362] = true;
		 borderLine[439] [363] = true;
		 borderLine[326] [363] = true;
		 borderLine[439] [364] = true;
		 borderLine[326] [364] = true;
		 borderLine[439] [365] = true;
		 borderLine[326] [365] = true;
		 borderLine[439] [366] = true;
		 borderLine[326] [366] = true;
		 borderLine[439] [367] = true;
		 borderLine[326] [367] = true;
		 borderLine[439] [368] = true;
		 borderLine[326] [368] = true;
		 borderLine[439] [369] = true;
		 borderLine[326] [369] = true;
		 borderLine[439] [370] = true;
		 borderLine[326] [370] = true;
		 borderLine[439] [371] = true;
		 borderLine[326] [371] = true;
		 borderLine[439] [372] = true;
		 borderLine[326] [372] = true;
		 borderLine[439] [373] = true;
		 borderLine[326] [373] = true;
		 borderLine[439] [374] = true;
		 borderLine[326] [374] = true;
		 borderLine[439] [375] = true;
		 borderLine[326] [375] = true;
		 borderLine[439] [376] = true;
		 borderLine[326] [376] = true;
		 borderLine[439] [377] = true;
		 borderLine[326] [377] = true;
		 borderLine[439] [378] = true;
		 borderLine[326] [378] = true;
		 borderLine[439] [379] = true;
		 borderLine[326] [379] = true;
		 borderLine[439] [380] = true;
		 borderLine[326] [380] = true;
		 borderLine[439] [381] = true;
		 borderLine[326] [381] = true;
		 borderLine[439] [382] = true;
		 borderLine[326] [382] = true;
		 borderLine[439] [383] = true;
		 borderLine[326] [383] = true;
		 borderLine[439] [384] = true;
		 borderLine[326] [384] = true;
		 borderLine[439] [385] = true;
		 borderLine[326] [385] = true;
		 borderLine[439] [386] = true;
		 borderLine[326] [386] = true;
		 borderLine[439] [387] = true;
		 borderLine[326] [387] = true;
		 borderLine[439] [388] = true;
		 borderLine[326] [388] = true;
		 borderLine[439] [389] = true;
		 borderLine[326] [389] = true;
		 borderLine[439] [390] = true;
		 borderLine[326] [390] = true;
		 borderLine[439] [391] = true;
		 borderLine[326] [391] = true;
		 borderLine[439] [392] = true;
		 borderLine[326] [392] = true;
		 borderLine[439] [393] = true;
		 borderLine[326] [393] = true;
		 borderLine[439] [394] = true;
		 borderLine[326] [394] = true;
		 borderLine[439] [395] = true;
		 borderLine[326] [395] = true;
		 borderLine[439] [396] = true;
		 borderLine[326] [396] = true;
		 borderLine[439] [397] = true;
		 borderLine[326] [397] = true;
		 borderLine[439] [398] = true;
		 borderLine[326] [398] = true;
		 borderLine[439] [399] = true;
		 borderLine[326] [399] = true;
		 borderLine[439] [400] = true;
		 borderLine[326] [400] = true;
		 borderLine[439] [401] = true;
		 borderLine[326] [401] = true;
		 borderLine[439] [402] = true;
		 borderLine[326] [402] = true;
		 borderLine[439] [403] = true;
		 borderLine[326] [403] = true;
		 borderLine[439] [404] = true;
		 borderLine[326] [404] = true;
		 borderLine[439] [405] = true;
		 borderLine[326] [405] = true;
		 borderLine[439] [406] = true;
		 borderLine[326] [406] = true;
		 borderLine[439] [407] = true;
		 borderLine[326] [407] = true;
		 borderLine[439] [408] = true;
		 borderLine[326] [408] = true;
		 borderLine[439] [409] = true;
		 borderLine[326] [409] = true;
		 borderLine[439] [410] = true;
		 borderLine[326] [410] = true;
		 borderLine[439] [411] = true;
		 borderLine[326] [411] = true;
		 borderLine[439] [412] = true;
		 borderLine[326] [412] = true;
		 borderLine[439] [413] = true;
		 borderLine[326] [413] = true;
		 borderLine[439] [414] = true;
		 borderLine[326] [414] = true;
		 borderLine[439] [415] = true;
		 borderLine[326] [415] = true;
		 borderLine[439] [416] = true;
		 borderLine[326] [416] = true;
		 borderLine[439] [417] = true;
		 borderLine[326] [417] = true;
		 borderLine[439] [418] = true;
		 borderLine[326] [418] = true;
		 borderLine[439] [419] = true;
		 borderLine[326] [419] = true;
		 borderLine[439] [420] = true;
		 borderLine[326] [420] = true;
		 borderLine[439] [421] = true;
		 borderLine[326] [421] = true;
		 borderLine[439] [422] = true;
		 borderLine[326] [422] = true;
		 borderLine[439] [423] = true;
		 borderLine[326] [423] = true;
		 borderLine[439] [424] = true;
		 borderLine[326] [424] = true;
		 borderLine[439] [425] = true;
		 borderLine[326] [425] = true;
		 borderLine[439] [426] = true;
		 borderLine[326] [426] = true;
		 borderLine[439] [427] = true;
		 borderLine[326] [427] = true;
		 borderLine[439] [428] = true;
		 borderLine[326] [428] = true;
		 borderLine[439] [429] = true;
		 borderLine[326] [429] = true;
		 borderLine[439] [430] = true;
		 borderLine[326] [430] = true;
		 borderLine[439] [431] = true;
		 borderLine[326] [431] = true;
		 borderLine[439] [432] = true;
		 borderLine[326] [432] = true;
		 borderLine[439] [433] = true;
		 borderLine[326] [433] = true;
		 borderLine[439] [434] = true;
		 borderLine[326] [434] = true;
		 borderLine[439] [435] = true;
		 borderLine[326] [435] = true;
		 borderLine[439] [436] = true;
		 borderLine[347] [436] = true;
		 borderLine[346] [436] = true;
		 borderLine[345] [436] = true;
		 borderLine[344] [436] = true;
		 borderLine[343] [436] = true;
		 borderLine[342] [436] = true;
		 borderLine[341] [436] = true;
		 borderLine[340] [436] = true;
		 borderLine[339] [436] = true;
		 borderLine[338] [436] = true;
		 borderLine[337] [436] = true;
		 borderLine[336] [436] = true;
		 borderLine[335] [436] = true;
		 borderLine[334] [436] = true;
		 borderLine[333] [436] = true;
		 borderLine[332] [436] = true;
		 borderLine[331] [436] = true;
		 borderLine[330] [436] = true;
		 borderLine[329] [436] = true;
		 borderLine[328] [436] = true;
		 borderLine[327] [436] = true;
		 borderLine[326] [436] = true;
		 borderLine[439] [437] = true;
		 borderLine[326] [437] = true;
		 borderLine[439] [438] = true;
		 borderLine[326] [438] = true;
		 borderLine[439] [439] = true;
		 borderLine[326] [439] = true;
		 borderLine[439] [440] = true;
		 borderLine[326] [440] = true;
		 borderLine[439] [441] = true;
		 borderLine[326] [441] = true;
		 borderLine[439] [442] = true;
		 borderLine[326] [442] = true;
		 borderLine[439] [443] = true;
		 borderLine[326] [443] = true;
		 borderLine[439] [444] = true;
		 borderLine[326] [444] = true;
		 borderLine[439] [445] = true;
		 borderLine[326] [445] = true;
		 borderLine[439] [446] = true;
		 borderLine[326] [446] = true;
		 borderLine[439] [447] = true;
		 borderLine[326] [447] = true;
		 borderLine[439] [448] = true;
		 borderLine[326] [448] = true;
		 borderLine[439] [449] = true;
		 borderLine[326] [449] = true;
		 borderLine[439] [450] = true;
		 borderLine[326] [450] = true;
		 borderLine[439] [451] = true;
		 borderLine[326] [451] = true;
		 borderLine[439] [452] = true;
		 borderLine[326] [452] = true;
		 borderLine[439] [453] = true;
		 borderLine[326] [453] = true;
		 borderLine[439] [454] = true;
		 borderLine[326] [454] = true;
		 borderLine[439] [455] = true;
		 borderLine[326] [455] = true;
		 borderLine[439] [456] = true;
		 borderLine[326] [456] = true;
		 borderLine[439] [457] = true;
		 borderLine[326] [457] = true;
		 borderLine[439] [458] = true;
		 borderLine[326] [458] = true;
		 borderLine[439] [459] = true;
		 borderLine[326] [459] = true;
		 borderLine[439] [460] = true;
		 borderLine[326] [460] = true;
		 borderLine[439] [461] = true;
		 borderLine[326] [461] = true;
		 borderLine[439] [462] = true;
		 borderLine[326] [462] = true;
		 borderLine[439] [463] = true;
		 borderLine[326] [463] = true;
		 borderLine[439] [464] = true;
		 borderLine[326] [464] = true;
		 borderLine[439] [465] = true;
		 borderLine[326] [465] = true;
		 borderLine[439] [466] = true;
		 borderLine[326] [466] = true;
		 borderLine[439] [467] = true;
		 borderLine[326] [467] = true;
		 borderLine[439] [468] = true;
		 borderLine[326] [468] = true;
		 borderLine[439] [469] = true;
		 borderLine[326] [469] = true;
		 borderLine[439] [470] = true;
		 borderLine[326] [470] = true;
		 borderLine[439] [471] = true;
		 borderLine[326] [471] = true;
		 borderLine[439] [472] = true;
		 borderLine[326] [472] = true;
		 borderLine[439] [473] = true;
		 borderLine[326] [473] = true;
		 borderLine[439] [474] = true;
		 borderLine[326] [474] = true;
		 borderLine[439] [475] = true;
		 borderLine[326] [475] = true;
		 borderLine[439] [476] = true;
		 borderLine[326] [476] = true;
		 borderLine[439] [477] = true;
		 borderLine[326] [477] = true;
		 borderLine[439] [478] = true;
		 borderLine[326] [478] = true;
		 borderLine[439] [479] = true;
		 borderLine[326] [479] = true;
		 borderLine[439] [480] = true;
		 borderLine[326] [480] = true;
		 borderLine[439] [481] = true;
		 borderLine[326] [481] = true;
		 borderLine[439] [482] = true;
		 borderLine[326] [482] = true;
		 borderLine[439] [483] = true;
		 borderLine[326] [483] = true;
		 borderLine[439] [484] = true;
		 borderLine[326] [484] = true;
		 borderLine[439] [485] = true;
		 borderLine[326] [485] = true;
		 borderLine[439] [486] = true;
		 borderLine[326] [486] = true;
		 borderLine[439] [487] = true;
		 borderLine[326] [487] = true;
		 borderLine[439] [488] = true;
		 borderLine[326] [488] = true;
		 borderLine[439] [489] = true;
		 borderLine[326] [489] = true;
		 borderLine[439] [490] = true;
		 borderLine[326] [490] = true;
		 borderLine[439] [491] = true;
		 borderLine[326] [491] = true;
		 borderLine[439] [492] = true;
		 borderLine[326] [492] = true;
		 borderLine[439] [493] = true;
		 borderLine[326] [493] = true;
		 borderLine[439] [494] = true;
		 borderLine[326] [494] = true;
		 borderLine[439] [495] = true;
		 borderLine[326] [495] = true;
		 borderLine[439] [496] = true;
		 borderLine[326] [496] = true;
		 borderLine[439] [497] = true;
		 borderLine[326] [497] = true;
		 borderLine[439] [498] = true;
		 borderLine[326] [498] = true;
		 borderLine[439] [499] = true;
		 borderLine[326] [499] = true;
		 borderLine[439] [500] = true;
		 borderLine[326] [500] = true;
		 borderLine[439] [501] = true;
		 borderLine[326] [501] = true;
		 borderLine[439] [502] = true;
		 borderLine[326] [502] = true;
		 borderLine[439] [503] = true;
		 borderLine[326] [503] = true;
		 borderLine[439] [504] = true;
		 borderLine[326] [504] = true;
		 borderLine[439] [505] = true;
		 borderLine[326] [505] = true;
		 borderLine[439] [506] = true;
		 borderLine[326] [506] = true;
		 borderLine[439] [507] = true;
		 borderLine[326] [507] = true;
		 borderLine[439] [508] = true;
		 borderLine[326] [508] = true;
		 borderLine[439] [509] = true;
		 borderLine[326] [509] = true;
		 borderLine[439] [510] = true;
		 borderLine[326] [510] = true;
		 borderLine[439] [511] = true;
		 borderLine[326] [511] = true;
		 borderLine[439] [512] = true;
		 borderLine[326] [512] = true;
		 borderLine[439] [513] = true;
		 borderLine[326] [513] = true;
		 borderLine[439] [514] = true;
		 borderLine[326] [514] = true;
		 borderLine[439] [515] = true;
		 borderLine[326] [515] = true;
		 borderLine[439] [516] = true;
		 borderLine[326] [516] = true;
		 borderLine[439] [517] = true;
		 borderLine[326] [517] = true;
		 borderLine[439] [518] = true;
		 borderLine[326] [518] = true;
		 borderLine[439] [519] = true;
		 borderLine[326] [519] = true;
		 borderLine[439] [520] = true;
		 borderLine[326] [520] = true;
		 borderLine[439] [521] = true;
		 borderLine[326] [521] = true;
		 borderLine[439] [522] = true;
		 borderLine[326] [522] = true;
		 borderLine[439] [523] = true;
		 borderLine[326] [523] = true;
		 borderLine[439] [524] = true;
		 borderLine[326] [524] = true;
		 borderLine[439] [525] = true;
		 borderLine[326] [525] = true;
		 borderLine[439] [526] = true;
		 borderLine[326] [526] = true;
		 borderLine[439] [527] = true;
		 borderLine[326] [527] = true;
		 borderLine[439] [528] = true;
		 borderLine[326] [528] = true;
		 borderLine[439] [529] = true;
		 borderLine[326] [529] = true;
		 borderLine[439] [530] = true;
		 borderLine[326] [530] = true;
		 borderLine[439] [531] = true;
		 borderLine[326] [531] = true;
		 borderLine[439] [532] = true;
		 borderLine[326] [532] = true;
		 borderLine[439] [533] = true;
		 borderLine[326] [533] = true;
		 borderLine[439] [534] = true;
		 borderLine[326] [534] = true;
		 borderLine[439] [535] = true;
		 borderLine[326] [535] = true;
		 borderLine[439] [536] = true;
		 borderLine[326] [536] = true;
		 borderLine[439] [537] = true;
		 borderLine[326] [537] = true;
		 borderLine[439] [538] = true;
		 borderLine[326] [538] = true;
		 borderLine[439] [539] = true;
		 borderLine[326] [539] = true;
		 borderLine[439] [540] = true;
		 borderLine[326] [540] = true;
		 borderLine[439] [541] = true;
		 borderLine[326] [541] = true;
		 borderLine[439] [542] = true;
		 borderLine[326] [542] = true;
		 borderLine[439] [543] = true;
		 borderLine[326] [543] = true;
		 borderLine[439] [544] = true;
		 borderLine[326] [544] = true;
		 borderLine[439] [545] = true;
		 borderLine[326] [545] = true;
		 borderLine[439] [546] = true;
		 borderLine[326] [546] = true;
		 borderLine[439] [547] = true;
		 borderLine[326] [547] = true;
		 borderLine[439] [548] = true;
		 borderLine[326] [548] = true;
		 borderLine[439] [549] = true;
		 borderLine[326] [549] = true;
		 borderLine[439] [550] = true;
		 borderLine[326] [550] = true;
		 borderLine[439] [551] = true;
		 borderLine[326] [551] = true;
		 borderLine[439] [552] = true;
		 borderLine[326] [552] = true;
		 borderLine[439] [553] = true;
		 borderLine[326] [553] = true;
		 borderLine[439] [554] = true;
		 borderLine[326] [554] = true;
		 borderLine[439] [555] = true;
		 borderLine[326] [555] = true;
		 borderLine[439] [556] = true;
		 borderLine[326] [556] = true;
		 borderLine[439] [557] = true;
		 borderLine[326] [557] = true;
		 borderLine[439] [558] = true;
		 borderLine[326] [558] = true;
		 borderLine[439] [559] = true;
		 borderLine[326] [559] = true;
		 borderLine[439] [560] = true;
		 borderLine[326] [560] = true;
		 borderLine[439] [561] = true;
		 borderLine[326] [561] = true;
		 borderLine[439] [562] = true;
		 borderLine[326] [562] = true;
		 borderLine[439] [563] = true;
		 borderLine[326] [563] = true;
		 borderLine[439] [564] = true;
		 borderLine[326] [564] = true;
		 borderLine[439] [565] = true;
		 borderLine[326] [565] = true;
		 borderLine[439] [566] = true;
		 borderLine[326] [566] = true;
		 borderLine[439] [567] = true;
		 borderLine[326] [567] = true;
		 borderLine[439] [568] = true;
		 borderLine[326] [568] = true;
		 borderLine[439] [569] = true;
		 borderLine[326] [569] = true;
		 borderLine[439] [570] = true;
		 borderLine[326] [570] = true;
		 borderLine[439] [571] = true;
		 borderLine[326] [571] = true;
		 borderLine[439] [572] = true;
		 borderLine[326] [572] = true;
		 borderLine[439] [573] = true;
		 borderLine[326] [573] = true;
		 borderLine[439] [574] = true;
		 borderLine[326] [574] = true;
		 borderLine[439] [575] = true;
		 borderLine[326] [575] = true;
		 borderLine[439] [576] = true;
		 borderLine[326] [576] = true;
		 borderLine[439] [577] = true;
		 borderLine[326] [577] = true;
		 borderLine[439] [578] = true;
		 borderLine[326] [578] = true;
		 borderLine[439] [579] = true;
		 borderLine[326] [579] = true;
		 borderLine[439] [580] = true;
		 borderLine[326] [580] = true;
		 borderLine[439] [581] = true;
		 borderLine[326] [581] = true;
		 borderLine[439] [582] = true;
		 borderLine[326] [582] = true;
		 borderLine[439] [583] = true;
		 borderLine[326] [583] = true;
		 borderLine[439] [584] = true;
		 borderLine[326] [584] = true;
		 borderLine[439] [585] = true;
		 borderLine[326] [585] = true;
		 borderLine[439] [586] = true;
		 borderLine[326] [586] = true;
		 borderLine[439] [587] = true;
		 borderLine[326] [587] = true;
		 borderLine[439] [588] = true;
		 borderLine[326] [588] = true;
		 borderLine[439] [589] = true;
		 borderLine[326] [589] = true;
		 borderLine[439] [590] = true;
		 borderLine[326] [590] = true;
		 borderLine[439] [591] = true;
		 borderLine[326] [591] = true;
		 borderLine[439] [592] = true;
		 borderLine[326] [592] = true;
		 borderLine[439] [593] = true;
		 borderLine[326] [593] = true;
		 borderLine[439] [594] = true;
		 borderLine[326] [594] = true;
		 borderLine[439] [595] = true;
		 borderLine[326] [595] = true;
		 borderLine[439] [596] = true;
		 borderLine[326] [596] = true;
		 borderLine[439] [597] = true;
		 borderLine[326] [597] = true;
		 borderLine[439] [598] = true;
		 borderLine[326] [598] = true;
		 borderLine[439] [599] = true;
		 borderLine[326] [599] = true;
		 borderLine[439] [600] = true;
		 borderLine[326] [600] = true;
		 borderLine[439] [601] = true;
		 borderLine[326] [601] = true;

		 }

}